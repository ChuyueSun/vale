module Types

type Prims.attribute : Type(0) extern ;

const Prims.cps : Prims.attribute extern ;

function Prims.hasEq #[uu____254 : Type(0)] () : prop extern ;

type Prims.eqtype : Type(1) extern ;

type Prims.bool : Type(0) extern ;

unsupported: Prims.HasEq_bool //(reason: Prims.hasEq)

type Prims.c_False : Type(0) extern ;

type Prims.c_True : Type(0) extern ;

const Prims.T : Prims.c_True extern ;

function Prims.uu___is_T (projectee_306 : Prims.c_True) : Prims.bool extern ;

type Prims.unit : Type(0) extern ;

unsupported: Prims.HasEq_unit //(reason: Prims.hasEq)

function Prims.squash #[p_348 : Type(0)] () : prop extern ;

const Prims.l_True : prop extern ;

const Prims.l_False : prop extern ;

function
  Prims.equals
  #[# a_441 : Type(0)]
  (x_442 : a_441 , uu____443 : a_441)
  :
  prop
  extern
  ;

unsupported: Prims.Refl //(reason: Prims.equals)

unsupported: Prims.uu___is_Refl //(reason: Prims.equals)

function Prims.eq2 #[# a_623 : Type(0)] (x_624 : a_623 , y_625 : a_623) : prop extern ;

unsupported: Prims.h_equals //(reason: type parameters must be in outermost position: b#723)

unsupported: Prims.HRefl //(reason: Prims.h_equals)

unsupported: Prims.uu___is_HRefl //(reason: type parameters must be in outermost position: b#823)

function
  Prims.eq3
  #[# a_975 : Type(0) , # b_976 : Type(0)]
  (x_977 : a_975 , y_978 : b_976)
  :
  prop
  extern
  ;

function
  Prims.op_Equals_Equals_Equals
  #[# a_1087 : Type(0) , # b_1088 : Type(0)]
  (x_1089 : a_1087 , y_1090 : b_1088)
  :
  prop
  extern
  ;

function Prims.b2t (b_1126 : Prims.bool) : prop extern ;

type Prims.c_and (p_1189 : Type(0) , q_1190 : Type(0)) : Type(0) extern ;

function
  Prims.And
  #[# p_1191 : Type(0) , # q_1192 : Type(0)]
  (_0_1193 : p_1191 , _1_1194 : q_1192)
  :
  (Prims.c_and (p_1191 , q_1192))
  extern
  ;

function
  Prims.uu___is_And
  #[# p_1256 : Type(0) , # q_1257 : Type(0)]
  (projectee_1258 : (Prims.c_and (p_1256 , q_1257)))
  :
  Prims.bool
  extern
  ;

function
  Prims.__proj__And__item___0
  #[# p_1304 : Type(0) , # q_1305 : Type(0)]
  (projectee_1306 : (Prims.c_and (p_1304 , q_1305)))
  :
  p_1304
  extern
  ;

function
  Prims.__proj__And__item___1
  #[# p_1352 : Type(0) , # q_1353 : Type(0)]
  (projectee_1354 : (Prims.c_and (p_1352 , q_1353)))
  :
  q_1353
  extern
  ;

function Prims.l_and (p_1413 : prop , q_1414 : prop) : prop extern ;

type Prims.c_or (p_1514 : Type(0) , q_1515 : Type(0)) : Type(0) extern ;

function
  Prims.Left
  #[# p_1516 : Type(0) , # q_1517 : Type(0)]
  (_0_1518 : p_1516)
  :
  (Prims.c_or (p_1516 , q_1517))
  extern
  ;

function
  Prims.Right
  #[# p_1519 : Type(0) , # q_1520 : Type(0)]
  (_0_1521 : q_1520)
  :
  (Prims.c_or (p_1519 , q_1520))
  extern
  ;

function
  Prims.uu___is_Left
  #[# p_1600 : Type(0) , # q_1601 : Type(0)]
  (projectee_1602 : (Prims.c_or (p_1600 , q_1601)))
  :
  Prims.bool
  extern
  ;

function
  Prims.__proj__Left__item___0
  #[# p_1697 : Type(0) , # q_1698 : Type(0)]
  (projectee_1699 : (Prims.c_or (p_1697 , q_1698)))
  :
  p_1697
  requires
    ( let uu____1624 : (Prims.c_or (p_1697 , q_1698)) := projectee_1699 in
      (Prims.b2t ((Prims.uu___is_Left (p_1697 , q_1698 , uu____1624))))
    )
    ;
  extern
  ;

function
  Prims.uu___is_Right
  #[# p_1759 : Type(0) , # q_1760 : Type(0)]
  (projectee_1761 : (Prims.c_or (p_1759 , q_1760)))
  :
  Prims.bool
  extern
  ;

function
  Prims.__proj__Right__item___0
  #[# p_1856 : Type(0) , # q_1857 : Type(0)]
  (projectee_1858 : (Prims.c_or (p_1856 , q_1857)))
  :
  q_1857
  requires
    ( let uu____1783 : (Prims.c_or (p_1856 , q_1857)) := projectee_1858 in
      (Prims.b2t ((Prims.uu___is_Right (p_1856 , q_1857 , uu____1783))))
    )
    ;
  extern
  ;

function Prims.l_or (p_1931 : prop , q_1932 : prop) : prop extern ;

function Prims.l_imp (p_1991 : prop , q_1992 : prop) : prop extern ;

function Prims.l_iff (p_2066 : prop , q_2067 : prop) : prop extern ;

function Prims.l_not (p_2103 : prop) : prop extern ;

function Prims.l_ITE (p_2198 : prop , q_2199 : prop , r_2200 : prop) : prop extern ;

function
  Prims.precedes
  #[# a_2240 : Type(0) , # b_2241 : Type(0)]
  (uu____2242 : a_2240 , uu____2243 : b_2241)
  :
  prop
  extern
  ;

unsupported: Prims.has_type //(reason: type parameters must be in outermost position: uu___#2273)

function
  Prims.l_Forall
  #[# a_2369 : Type(0)]
  (p_2370 : (fun (a_2369) -> prop))
  :
  prop
  extern
  ;

type Prims.prop : Type(1) extern ;

unsupported: Prims.dtuple2 //(reason: not vale type: (Type 0))

unsupported: Prims.Mkdtuple2 //(reason: not vale type: (Type 0))

unsupported: Prims.dtuple2__uu___haseq //(reason: bad variable index)

unsupported: Prims.uu___is_Mkdtuple2 //(reason: not vale type: (Type 0))

unsupported: Prims.__proj__Mkdtuple2__item___1 //(reason: not vale type: (Type 0))

unsupported: Prims.__proj__Mkdtuple2__item___2 //(reason: not vale type: (Type 0))

function
  Prims.l_Exists
  #[# a_3254 : Type(0)]
  (p_3255 : (fun (a_3254) -> prop))
  :
  prop
  extern
  ;

type Prims.range : Type(0) extern ;

type Prims.string : Type(0) extern ;

unsupported: Prims.HasEq_string //(reason: Prims.hasEq)

type Prims.pure_pre : Type(1) extern ;

unsupported: Prims.pure_post' //(reason: not vale type: (Type 1))

unsupported: Prims.pure_post //(reason: not vale type: (Type 1))

unsupported: Prims.pure_wp //(reason: not vale type: (Type 1))

function Prims.guard_free (uu____3413 : prop) : prop extern ;

unsupported: Prims.pure_return //(reason: Prims.pure_post)

unsupported: Prims.pure_bind_wp //(reason: type parameters must be in outermost position: a#3713)

unsupported: Prims.pure_if_then_else //(reason: Prims.pure_wp)

unsupported: Prims.pure_ite_wp //(reason: Prims.pure_wp)

unsupported: Prims.pure_stronger //(reason: Prims.pure_wp)

unsupported: Prims.pure_close_wp //(reason: Prims.pure_wp)

unsupported: Prims.pure_assert_p //(reason: Prims.pure_wp)

unsupported: Prims.pure_assume_p //(reason: Prims.pure_wp)

unsupported: Prims.pure_null_wp //(reason: Prims.pure_post)

unsupported: Prims.pure_trivial //(reason: Prims.pure_wp)

unsupported: Prims.purewp_id //(reason: Prims.pure_wp)

type Prims.int : Type(0) extern ;

unsupported: Prims.HasEq_int //(reason: Prims.hasEq)

const Prims.range_0 : Prims.range extern ;

function
  Prims.mk_range
  ( file_6256 : Prims.string ,
    from_line_6257 : Prims.int ,
    from_col_6258 : Prims.int ,
    to_line_6259 : Prims.int ,
    to_col_6260 : Prims.int
  )
  :
  Prims.range
  extern
  ;

function
  Prims.op_AmpAmp
  (uu____6293 : Prims.bool , uu____6294 : Prims.bool)
  :
  Prims.bool
  extern
  ;

function
  Prims.op_BarBar
  (uu____6314 : Prims.bool , uu____6315 : Prims.bool)
  :
  Prims.bool
  extern
  ;

function Prims.op_Negation (uu____6328 : Prims.bool) : Prims.bool extern ;

function
  Prims.op_Multiply
  (uu____6347 : Prims.int , uu____6348 : Prims.int)
  :
  Prims.int
  extern
  ;

function
  Prims.op_Subtraction
  (uu____6368 : Prims.int , uu____6369 : Prims.int)
  :
  Prims.int
  extern
  ;

function
  Prims.op_Addition
  (uu____6389 : Prims.int , uu____6390 : Prims.int)
  :
  Prims.int
  extern
  ;

function Prims.op_Minus (uu____6403 : Prims.int) : Prims.int extern ;

function
  Prims.op_LessThanOrEqual
  (uu____6422 : Prims.int , uu____6423 : Prims.int)
  :
  Prims.bool
  extern
  ;

function
  Prims.op_GreaterThan
  (uu____6443 : Prims.int , uu____6444 : Prims.int)
  :
  Prims.bool
  extern
  ;

function
  Prims.op_GreaterThanOrEqual
  (uu____6464 : Prims.int , uu____6465 : Prims.int)
  :
  Prims.bool
  extern
  ;

function
  Prims.op_LessThan
  (uu____6485 : Prims.int , uu____6486 : Prims.int)
  :
  Prims.bool
  extern
  ;

unsupported: Prims.op_Equality //(reason: not vale type: (Type 0))

unsupported: Prims.op_disEquality //(reason: not vale type: (Type 0))

type Prims.exn : Type(0) extern ;

function Prims.array #[uu____6608 : Type(0)] () : prop extern ;

function
  Prims.strcat
  (uu____6629 : Prims.string , uu____6630 : Prims.string)
  :
  Prims.string
  extern
  ;

type Prims.list (a_6943 : Type(0)) : Type(0) extern ;

function Prims.Nil #[# a_6944 : Type(0)] () : (Prims.list (a_6944)) extern ;

function
  Prims.Cons
  #[# a_6945 : Type(0)]
  (hd_6946 : a_6945 , tl_6947 : (Prims.list (a_6945)))
  :
  (Prims.list (a_6945))
  extern
  ;

unsupported: Prims.list__uu___haseq //(reason: bad variable index)

function
  Prims.uu___is_Nil
  #[# a_7074 : Type(0)]
  (projectee_7075 : (Prims.list (a_7074)))
  :
  Prims.bool
  extern
  ;

function
  Prims.uu___is_Cons
  #[# a_7184 : Type(0)]
  (projectee_7185 : (Prims.list (a_7184)))
  :
  Prims.bool
  extern
  ;

function
  Prims.__proj__Cons__item__hd
  #[# a_7380 : Type(0)]
  (projectee_7381 : (Prims.list (a_7380)))
  :
  a_7380
  requires
    ( let uu____7336 : (Prims.list (a_7380)) := projectee_7381 in
      (Prims.b2t ((Prims.uu___is_Cons (a_7380 , uu____7336))))
    )
    ;
  extern
  ;

function
  Prims.__proj__Cons__item__tl
  #[# a_7642 : Type(0)]
  (projectee_7643 : (Prims.list (a_7642)))
  :
  (Prims.list (a_7642))
  requires
    ( let uu____7593 : (Prims.list (a_7642)) := projectee_7643 in
      (Prims.b2t ((Prims.uu___is_Cons (a_7642 , uu____7593))))
    )
    ;
  extern
  ;

type Prims.pattern : Type(0) extern ;

function Prims.smt_pat #[# a_7894 : Type(0)] (x_7895 : a_7894) : Prims.pattern extern ;

function
  Prims.smt_pat_or
  (x_7922 : (Prims.list ((Prims.list (Prims.pattern)))))
  :
  Prims.pattern
  extern
  ;

function Prims._decreases #[# a_7949 : Type(0)] (uu____7950 : a_7949) : prop extern ;

unsupported: Prims.returnM //(reason: not vale type: (!! Prims.M a#8111))

type Prims.lex_t : Type(0) extern ;

const Prims.LexTop : Prims.lex_t extern ;

function
  Prims.LexCons
  #[# uu____8130 : Type(0)]
  (uu____8131 : uu____8130 , uu____8132 : Prims.lex_t)
  :
  Prims.lex_t
  extern
  ;

unsupported: Prims.as_requires //(reason: Prims.pure_wp)

unsupported: Prims.as_ensures //(reason: Prims.pure_wp)

function
  Prims._assume
  (p_8352 : prop)
  :
  (x_8353 : Prims.unit)
  requires Prims.l_True ;
  ensures p_8352 ;
  extern
  ;

unsupported: Prims.admit //(reason: not vale type: (!! Prims.Admit a#8383))

function Prims.magic #[# a_8405 : Type(0)] (uu____8406 : Prims.unit) : a_8405 extern ;

function
  Prims.unsafe_coerce
  #[# a_8440 : Type(0) , # b_8441 : Type(0)]
  (uu____8442 : a_8440)
  :
  b_8441
  extern
  ;

function
  Prims.admitP
  (p_8552 : prop)
  :
  (x_8553 : Prims.unit)
  requires Prims.l_True ;
  ensures p_8552 ;
  extern
  ;

function
  Prims._assert
  (p_8591 : prop)
  :
  (x_8592 : Prims.unit)
  requires p_8591 ;
  ensures p_8591 ;
  extern
  ;

unsupported: Prims.spinoff //(reason: not vale type: (Type 0))

unsupported: Prims.assert_spinoff //(reason: Prims.spinoff)

function
  Prims.cut
  (p_8735 : prop)
  :
  (x_8736 : Prims.unit)
  requires p_8735 ;
  ensures p_8735 ;
  extern
  ;

type Prims.nat : Type(0) extern ;

type Prims.pos : Type(0) extern ;

type Prims.nonzero : Type(0) extern ;

function
  Prims.op_Modulus
  (uu____8864 : Prims.int , uu____8865 : Prims.nonzero)
  :
  Prims.int
  extern
  ;

function
  Prims.op_Division
  (uu____8885 : Prims.int , uu____8886 : Prims.nonzero)
  :
  Prims.int
  extern
  ;

function Prims.pow2 (x_9032 : Prims.nat) : Prims.pos extern ;

function Prims.min (x_9118 : Prims.int , y_9119 : Prims.int) : Prims.int extern ;

function Prims.abs (x_9191 : Prims.int) : Prims.int extern ;

function Prims.string_of_bool (uu____9211 : Prims.bool) : Prims.string extern ;

function Prims.string_of_int (uu____9225 : Prims.int) : Prims.string extern ;

unsupported: Prims.labeled //(reason: type parameters must be in outermost position: b#9272)

type FStar.Pervasives.Native.option (a_514 : Type(0)) : Type(0) extern ;

function
  FStar.Pervasives.Native.None
  #[# a_515 : Type(0)]
  ()
  :
  (FStar.Pervasives.Native.option (a_515))
  extern
  ;

function
  FStar.Pervasives.Native.Some
  #[# a_516 : Type(0)]
  (v_517 : a_516)
  :
  (FStar.Pervasives.Native.option (a_516))
  extern
  ;

unsupported: FStar.Pervasives.Native.option__uu___haseq //(reason: bad variable index)

function
  FStar.Pervasives.Native.uu___is_None
  #[# a_628 : Type(0)]
  (projectee_629 : (FStar.Pervasives.Native.option (a_628)))
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.Native.uu___is_Some
  #[# a_738 : Type(0)]
  (projectee_739 : (FStar.Pervasives.Native.option (a_738)))
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Some__item__v
  #[# a_909 : Type(0)]
  (projectee_910 : (FStar.Pervasives.Native.option (a_909)))
  :
  a_909
  requires
    ( let uu____865 : (FStar.Pervasives.Native.option (a_909)) := projectee_910 in
      (Prims.b2t ((FStar.Pervasives.Native.uu___is_Some (a_909 , uu____865))))
    )
    ;
  extern
  ;

type
  FStar.Pervasives.Native.tuple2
  (_'a_1496 : Type(0) , _'b_1497 : Type(0))
  :
  Type(0)
  extern
  ;

function
  FStar.Pervasives.Native.Mktuple2
  #[# _'a_1498 : Type(0) , # _'b_1499 : Type(0)]
  (_1_1500 : _'a_1498 , _2_1501 : _'b_1499)
  :
  (FStar.Pervasives.Native.tuple2 (_'a_1498 , _'b_1499))
  extern
  ;

unsupported: FStar.Pervasives.Native.tuple2__uu___haseq //(reason: bad variable index)

function
  FStar.Pervasives.Native.uu___is_Mktuple2
  #[# _'a_1689 : Type(0) , # _'b_1690 : Type(0)]
  (projectee_1691 : (FStar.Pervasives.Native.tuple2 (_'a_1689 , _'b_1690)))
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple2__item___1
  #[# _'a_1776 : Type(0) , # _'b_1777 : Type(0)]
  (projectee_1778 : (FStar.Pervasives.Native.tuple2 (_'a_1776 , _'b_1777)))
  :
  _'a_1776
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple2__item___2
  #[# _'a_2045 : Type(0) , # _'b_2046 : Type(0)]
  (projectee_2047 : (FStar.Pervasives.Native.tuple2 (_'a_2045 , _'b_2046)))
  :
  _'b_2046
  extern
  ;

function
  FStar.Pervasives.Native.fst
  #[# _'a_2367 : Type(0) , # _'b_2368 : Type(0)]
  (x_2369 : (FStar.Pervasives.Native.tuple2 (_'a_2367 , _'b_2368)))
  :
  _'a_2367
  extern
  ;

function
  FStar.Pervasives.Native.snd
  #[# _'a_2479 : Type(0) , # _'b_2480 : Type(0)]
  (x_2481 : (FStar.Pervasives.Native.tuple2 (_'a_2479 , _'b_2480)))
  :
  _'b_2480
  extern
  ;

type
  FStar.Pervasives.Native.tuple3
  (_'a_3212 : Type(0) , _'b_3213 : Type(0) , _'c_3214 : Type(0))
  :
  Type(0)
  extern
  ;

function
  FStar.Pervasives.Native.Mktuple3
  #[# _'a_3215 : Type(0) , # _'b_3216 : Type(0) , # _'c_3217 : Type(0)]
  (_1_3218 : _'a_3215 , _2_3219 : _'b_3216 , _3_3220 : _'c_3217)
  :
  (FStar.Pervasives.Native.tuple3 (_'a_3215 , _'b_3216 , _'c_3217))
  extern
  ;

unsupported: FStar.Pervasives.Native.tuple3__uu___haseq //(reason: bad variable index)

function
  FStar.Pervasives.Native.uu___is_Mktuple3
  #[# _'a_3524 : Type(0) , # _'b_3525 : Type(0) , # _'c_3526 : Type(0)]
  (projectee_3527 : (FStar.Pervasives.Native.tuple3 (_'a_3524 , _'b_3525 , _'c_3526)))
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple3__item___1
  #[# _'a_3652 : Type(0) , # _'b_3653 : Type(0) , # _'c_3654 : Type(0)]
  (projectee_3655 : (FStar.Pervasives.Native.tuple3 (_'a_3652 , _'b_3653 , _'c_3654)))
  :
  _'a_3652
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple3__item___2
  #[# _'a_4148 : Type(0) , # _'b_4149 : Type(0) , # _'c_4150 : Type(0)]
  (projectee_4151 : (FStar.Pervasives.Native.tuple3 (_'a_4148 , _'b_4149 , _'c_4150)))
  :
  _'b_4149
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple3__item___3
  #[# _'a_4644 : Type(0) , # _'b_4645 : Type(0) , # _'c_4646 : Type(0)]
  (projectee_4647 : (FStar.Pervasives.Native.tuple3 (_'a_4644 , _'b_4645 , _'c_4646)))
  :
  _'c_4646
  extern
  ;

type
  FStar.Pervasives.Native.tuple4
  (_'a_6177 : Type(0) , _'b_6178 : Type(0) , _'c_6179 : Type(0) , _'d_6180 : Type(0))
  :
  Type(0)
  extern
  ;

function
  FStar.Pervasives.Native.Mktuple4
  #[# _'a_6181 : Type(0) ,
    # _'b_6182 : Type(0) ,
    # _'c_6183 : Type(0) ,
    # _'d_6184 : Type(0)
  ]
  (_1_6185 : _'a_6181 , _2_6186 : _'b_6182 , _3_6187 : _'c_6183 , _4_6188 : _'d_6184)
  :
  (FStar.Pervasives.Native.tuple4 (_'a_6181 , _'b_6182 , _'c_6183 , _'d_6184))
  extern
  ;

unsupported: FStar.Pervasives.Native.tuple4__uu___haseq //(reason: bad variable index)

function
  FStar.Pervasives.Native.uu___is_Mktuple4
  #[# _'a_6632 : Type(0) ,
    # _'b_6633 : Type(0) ,
    # _'c_6634 : Type(0) ,
    # _'d_6635 : Type(0)
  ]
  ( projectee_6636 : (FStar.Pervasives.Native.tuple4 (_'a_6632 , _'b_6633 , _'c_6634 , _'d_6635))
  )
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple4__item___1
  #[# _'a_6807 : Type(0) ,
    # _'b_6808 : Type(0) ,
    # _'c_6809 : Type(0) ,
    # _'d_6810 : Type(0)
  ]
  ( projectee_6811 : (FStar.Pervasives.Native.tuple4 (_'a_6807 , _'b_6808 , _'c_6809 , _'d_6810))
  )
  :
  _'a_6807
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple4__item___2
  #[# _'a_7619 : Type(0) ,
    # _'b_7620 : Type(0) ,
    # _'c_7621 : Type(0) ,
    # _'d_7622 : Type(0)
  ]
  ( projectee_7623 : (FStar.Pervasives.Native.tuple4 (_'a_7619 , _'b_7620 , _'c_7621 , _'d_7622))
  )
  :
  _'b_7620
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple4__item___3
  #[# _'a_8431 : Type(0) ,
    # _'b_8432 : Type(0) ,
    # _'c_8433 : Type(0) ,
    # _'d_8434 : Type(0)
  ]
  ( projectee_8435 : (FStar.Pervasives.Native.tuple4 (_'a_8431 , _'b_8432 , _'c_8433 , _'d_8434))
  )
  :
  _'c_8433
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple4__item___4
  #[# _'a_9243 : Type(0) ,
    # _'b_9244 : Type(0) ,
    # _'c_9245 : Type(0) ,
    # _'d_9246 : Type(0)
  ]
  ( projectee_9247 : (FStar.Pervasives.Native.tuple4 (_'a_9243 , _'b_9244 , _'c_9245 , _'d_9246))
  )
  :
  _'d_9246
  extern
  ;

type
  FStar.Pervasives.Native.tuple5
  ( _'a_11532 : Type(0) ,
    _'b_11533 : Type(0) ,
    _'c_11534 : Type(0) ,
    _'d_11535 : Type(0) ,
    _'e_11536 : Type(0)
  )
  :
  Type(0)
  extern
  ;

function
  FStar.Pervasives.Native.Mktuple5
  #[# _'a_11537 : Type(0) ,
    # _'b_11538 : Type(0) ,
    # _'c_11539 : Type(0) ,
    # _'d_11540 : Type(0) ,
    # _'e_11541 : Type(0)
  ]
  ( _1_11542 : _'a_11537 ,
    _2_11543 : _'b_11538 ,
    _3_11544 : _'c_11539 ,
    _4_11545 : _'d_11540 ,
    _5_11546 : _'e_11541
  )
  :
  (FStar.Pervasives.Native.tuple5 (_'a_11537 , _'b_11538 , _'c_11539 , _'d_11540 , _'e_11541))
  extern
  ;

unsupported: FStar.Pervasives.Native.tuple5__uu___haseq //(reason: bad variable index)

function
  FStar.Pervasives.Native.uu___is_Mktuple5
  #[# _'a_12154 : Type(0) ,
    # _'b_12155 : Type(0) ,
    # _'c_12156 : Type(0) ,
    # _'d_12157 : Type(0) ,
    # _'e_12158 : Type(0)
  ]
  (
    projectee_12159
      :
      (FStar.Pervasives.Native.tuple5 (_'a_12154 , _'b_12155 , _'c_12156 , _'d_12157 , _'e_12158))
  )
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple5__item___1
  #[# _'a_12382 : Type(0) ,
    # _'b_12383 : Type(0) ,
    # _'c_12384 : Type(0) ,
    # _'d_12385 : Type(0) ,
    # _'e_12386 : Type(0)
  ]
  (
    projectee_12387
      :
      (FStar.Pervasives.Native.tuple5 (_'a_12382 , _'b_12383 , _'c_12384 , _'d_12385 , _'e_12386))
  )
  :
  _'a_12382
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple5__item___2
  #[# _'a_13611 : Type(0) ,
    # _'b_13612 : Type(0) ,
    # _'c_13613 : Type(0) ,
    # _'d_13614 : Type(0) ,
    # _'e_13615 : Type(0)
  ]
  (
    projectee_13616
      :
      (FStar.Pervasives.Native.tuple5 (_'a_13611 , _'b_13612 , _'c_13613 , _'d_13614 , _'e_13615))
  )
  :
  _'b_13612
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple5__item___3
  #[# _'a_14840 : Type(0) ,
    # _'b_14841 : Type(0) ,
    # _'c_14842 : Type(0) ,
    # _'d_14843 : Type(0) ,
    # _'e_14844 : Type(0)
  ]
  (
    projectee_14845
      :
      (FStar.Pervasives.Native.tuple5 (_'a_14840 , _'b_14841 , _'c_14842 , _'d_14843 , _'e_14844))
  )
  :
  _'c_14842
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple5__item___4
  #[# _'a_16069 : Type(0) ,
    # _'b_16070 : Type(0) ,
    # _'c_16071 : Type(0) ,
    # _'d_16072 : Type(0) ,
    # _'e_16073 : Type(0)
  ]
  (
    projectee_16074
      :
      (FStar.Pervasives.Native.tuple5 (_'a_16069 , _'b_16070 , _'c_16071 , _'d_16072 , _'e_16073))
  )
  :
  _'d_16072
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple5__item___5
  #[# _'a_17298 : Type(0) ,
    # _'b_17299 : Type(0) ,
    # _'c_17300 : Type(0) ,
    # _'d_17301 : Type(0) ,
    # _'e_17302 : Type(0)
  ]
  (
    projectee_17303
      :
      (FStar.Pervasives.Native.tuple5 (_'a_17298 , _'b_17299 , _'c_17300 , _'d_17301 , _'e_17302))
  )
  :
  _'e_17302
  extern
  ;

type
  FStar.Pervasives.Native.tuple6
  ( _'a_20521 : Type(0) ,
    _'b_20522 : Type(0) ,
    _'c_20523 : Type(0) ,
    _'d_20524 : Type(0) ,
    _'e_20525 : Type(0) ,
    _'f_20526 : Type(0)
  )
  :
  Type(0)
  extern
  ;

function
  FStar.Pervasives.Native.Mktuple6
  #[# _'a_20527 : Type(0) ,
    # _'b_20528 : Type(0) ,
    # _'c_20529 : Type(0) ,
    # _'d_20530 : Type(0) ,
    # _'e_20531 : Type(0) ,
    # _'f_20532 : Type(0)
  ]
  ( _1_20533 : _'a_20527 ,
    _2_20534 : _'b_20528 ,
    _3_20535 : _'c_20529 ,
    _4_20536 : _'d_20530 ,
    _5_20537 : _'e_20531 ,
    _6_20538 : _'f_20532
  )
  :
  ( FStar.Pervasives.Native.tuple6
    (_'a_20527 , _'b_20528 , _'c_20529 , _'d_20530 , _'e_20531 , _'f_20532)
  )
  extern
  ;

unsupported: FStar.Pervasives.Native.tuple6__uu___haseq //(reason: bad variable index)

function
  FStar.Pervasives.Native.uu___is_Mktuple6
  #[# _'a_21334 : Type(0) ,
    # _'b_21335 : Type(0) ,
    # _'c_21336 : Type(0) ,
    # _'d_21337 : Type(0) ,
    # _'e_21338 : Type(0) ,
    # _'f_21339 : Type(0)
  ]
  (
    projectee_21340
      :
      ( FStar.Pervasives.Native.tuple6
        (_'a_21334 , _'b_21335 , _'c_21336 , _'d_21337 , _'e_21338 , _'f_21339)
      )
  )
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple6__item___1
  #[# _'a_21621 : Type(0) ,
    # _'b_21622 : Type(0) ,
    # _'c_21623 : Type(0) ,
    # _'d_21624 : Type(0) ,
    # _'e_21625 : Type(0) ,
    # _'f_21626 : Type(0)
  ]
  (
    projectee_21627
      :
      ( FStar.Pervasives.Native.tuple6
        (_'a_21621 , _'b_21622 , _'c_21623 , _'d_21624 , _'e_21625 , _'f_21626)
      )
  )
  :
  _'a_21621
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple6__item___2
  #[# _'a_23380 : Type(0) ,
    # _'b_23381 : Type(0) ,
    # _'c_23382 : Type(0) ,
    # _'d_23383 : Type(0) ,
    # _'e_23384 : Type(0) ,
    # _'f_23385 : Type(0)
  ]
  (
    projectee_23386
      :
      ( FStar.Pervasives.Native.tuple6
        (_'a_23380 , _'b_23381 , _'c_23382 , _'d_23383 , _'e_23384 , _'f_23385)
      )
  )
  :
  _'b_23381
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple6__item___3
  #[# _'a_25139 : Type(0) ,
    # _'b_25140 : Type(0) ,
    # _'c_25141 : Type(0) ,
    # _'d_25142 : Type(0) ,
    # _'e_25143 : Type(0) ,
    # _'f_25144 : Type(0)
  ]
  (
    projectee_25145
      :
      ( FStar.Pervasives.Native.tuple6
        (_'a_25139 , _'b_25140 , _'c_25141 , _'d_25142 , _'e_25143 , _'f_25144)
      )
  )
  :
  _'c_25141
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple6__item___4
  #[# _'a_26898 : Type(0) ,
    # _'b_26899 : Type(0) ,
    # _'c_26900 : Type(0) ,
    # _'d_26901 : Type(0) ,
    # _'e_26902 : Type(0) ,
    # _'f_26903 : Type(0)
  ]
  (
    projectee_26904
      :
      ( FStar.Pervasives.Native.tuple6
        (_'a_26898 , _'b_26899 , _'c_26900 , _'d_26901 , _'e_26902 , _'f_26903)
      )
  )
  :
  _'d_26901
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple6__item___5
  #[# _'a_28657 : Type(0) ,
    # _'b_28658 : Type(0) ,
    # _'c_28659 : Type(0) ,
    # _'d_28660 : Type(0) ,
    # _'e_28661 : Type(0) ,
    # _'f_28662 : Type(0)
  ]
  (
    projectee_28663
      :
      ( FStar.Pervasives.Native.tuple6
        (_'a_28657 , _'b_28658 , _'c_28659 , _'d_28660 , _'e_28661 , _'f_28662)
      )
  )
  :
  _'e_28661
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple6__item___6
  #[# _'a_30416 : Type(0) ,
    # _'b_30417 : Type(0) ,
    # _'c_30418 : Type(0) ,
    # _'d_30419 : Type(0) ,
    # _'e_30420 : Type(0) ,
    # _'f_30421 : Type(0)
  ]
  (
    projectee_30422
      :
      ( FStar.Pervasives.Native.tuple6
        (_'a_30416 , _'b_30417 , _'c_30418 , _'d_30419 , _'e_30420 , _'f_30421)
      )
  )
  :
  _'f_30421
  extern
  ;

type
  FStar.Pervasives.Native.tuple7
  ( _'a_34763 : Type(0) ,
    _'b_34764 : Type(0) ,
    _'c_34765 : Type(0) ,
    _'d_34766 : Type(0) ,
    _'e_34767 : Type(0) ,
    _'f_34768 : Type(0) ,
    _'g_34769 : Type(0)
  )
  :
  Type(0)
  extern
  ;

function
  FStar.Pervasives.Native.Mktuple7
  #[# _'a_34770 : Type(0) ,
    # _'b_34771 : Type(0) ,
    # _'c_34772 : Type(0) ,
    # _'d_34773 : Type(0) ,
    # _'e_34774 : Type(0) ,
    # _'f_34775 : Type(0) ,
    # _'g_34776 : Type(0)
  ]
  ( _1_34777 : _'a_34770 ,
    _2_34778 : _'b_34771 ,
    _3_34779 : _'c_34772 ,
    _4_34780 : _'d_34773 ,
    _5_34781 : _'e_34774 ,
    _6_34782 : _'f_34775 ,
    _7_34783 : _'g_34776
  )
  :
  ( FStar.Pervasives.Native.tuple7
    (_'a_34770 , _'b_34771 , _'c_34772 , _'d_34773 , _'e_34774 , _'f_34775 , _'g_34776)
  )
  extern
  ;

unsupported: FStar.Pervasives.Native.tuple7__uu___haseq //(reason: bad variable index)

function
  FStar.Pervasives.Native.uu___is_Mktuple7
  #[# _'a_35791 : Type(0) ,
    # _'b_35792 : Type(0) ,
    # _'c_35793 : Type(0) ,
    # _'d_35794 : Type(0) ,
    # _'e_35795 : Type(0) ,
    # _'f_35796 : Type(0) ,
    # _'g_35797 : Type(0)
  ]
  (
    projectee_35798
      :
      ( FStar.Pervasives.Native.tuple7
        (_'a_35791 , _'b_35792 , _'c_35793 , _'d_35794 , _'e_35795 , _'f_35796 , _'g_35797)
      )
  )
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple7__item___1
  #[# _'a_36143 : Type(0) ,
    # _'b_36144 : Type(0) ,
    # _'c_36145 : Type(0) ,
    # _'d_36146 : Type(0) ,
    # _'e_36147 : Type(0) ,
    # _'f_36148 : Type(0) ,
    # _'g_36149 : Type(0)
  ]
  (
    projectee_36150
      :
      ( FStar.Pervasives.Native.tuple7
        (_'a_36143 , _'b_36144 , _'c_36145 , _'d_36146 , _'e_36147 , _'f_36148 , _'g_36149)
      )
  )
  :
  _'a_36143
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple7__item___2
  #[# _'a_38557 : Type(0) ,
    # _'b_38558 : Type(0) ,
    # _'c_38559 : Type(0) ,
    # _'d_38560 : Type(0) ,
    # _'e_38561 : Type(0) ,
    # _'f_38562 : Type(0) ,
    # _'g_38563 : Type(0)
  ]
  (
    projectee_38564
      :
      ( FStar.Pervasives.Native.tuple7
        (_'a_38557 , _'b_38558 , _'c_38559 , _'d_38560 , _'e_38561 , _'f_38562 , _'g_38563)
      )
  )
  :
  _'b_38558
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple7__item___3
  #[# _'a_40971 : Type(0) ,
    # _'b_40972 : Type(0) ,
    # _'c_40973 : Type(0) ,
    # _'d_40974 : Type(0) ,
    # _'e_40975 : Type(0) ,
    # _'f_40976 : Type(0) ,
    # _'g_40977 : Type(0)
  ]
  (
    projectee_40978
      :
      ( FStar.Pervasives.Native.tuple7
        (_'a_40971 , _'b_40972 , _'c_40973 , _'d_40974 , _'e_40975 , _'f_40976 , _'g_40977)
      )
  )
  :
  _'c_40973
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple7__item___4
  #[# _'a_43385 : Type(0) ,
    # _'b_43386 : Type(0) ,
    # _'c_43387 : Type(0) ,
    # _'d_43388 : Type(0) ,
    # _'e_43389 : Type(0) ,
    # _'f_43390 : Type(0) ,
    # _'g_43391 : Type(0)
  ]
  (
    projectee_43392
      :
      ( FStar.Pervasives.Native.tuple7
        (_'a_43385 , _'b_43386 , _'c_43387 , _'d_43388 , _'e_43389 , _'f_43390 , _'g_43391)
      )
  )
  :
  _'d_43388
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple7__item___5
  #[# _'a_45799 : Type(0) ,
    # _'b_45800 : Type(0) ,
    # _'c_45801 : Type(0) ,
    # _'d_45802 : Type(0) ,
    # _'e_45803 : Type(0) ,
    # _'f_45804 : Type(0) ,
    # _'g_45805 : Type(0)
  ]
  (
    projectee_45806
      :
      ( FStar.Pervasives.Native.tuple7
        (_'a_45799 , _'b_45800 , _'c_45801 , _'d_45802 , _'e_45803 , _'f_45804 , _'g_45805)
      )
  )
  :
  _'e_45803
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple7__item___6
  #[# _'a_48213 : Type(0) ,
    # _'b_48214 : Type(0) ,
    # _'c_48215 : Type(0) ,
    # _'d_48216 : Type(0) ,
    # _'e_48217 : Type(0) ,
    # _'f_48218 : Type(0) ,
    # _'g_48219 : Type(0)
  ]
  (
    projectee_48220
      :
      ( FStar.Pervasives.Native.tuple7
        (_'a_48213 , _'b_48214 , _'c_48215 , _'d_48216 , _'e_48217 , _'f_48218 , _'g_48219)
      )
  )
  :
  _'f_48218
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple7__item___7
  #[# _'a_50627 : Type(0) ,
    # _'b_50628 : Type(0) ,
    # _'c_50629 : Type(0) ,
    # _'d_50630 : Type(0) ,
    # _'e_50631 : Type(0) ,
    # _'f_50632 : Type(0) ,
    # _'g_50633 : Type(0)
  ]
  (
    projectee_50634
      :
      ( FStar.Pervasives.Native.tuple7
        (_'a_50627 , _'b_50628 , _'c_50629 , _'d_50630 , _'e_50631 , _'f_50632 , _'g_50633)
      )
  )
  :
  _'g_50633
  extern
  ;

type
  FStar.Pervasives.Native.tuple8
  ( _'a_56300 : Type(0) ,
    _'b_56301 : Type(0) ,
    _'c_56302 : Type(0) ,
    _'d_56303 : Type(0) ,
    _'e_56304 : Type(0) ,
    _'f_56305 : Type(0) ,
    _'g_56306 : Type(0) ,
    _'h_56307 : Type(0)
  )
  :
  Type(0)
  extern
  ;

function
  FStar.Pervasives.Native.Mktuple8
  #[# _'a_56308 : Type(0) ,
    # _'b_56309 : Type(0) ,
    # _'c_56310 : Type(0) ,
    # _'d_56311 : Type(0) ,
    # _'e_56312 : Type(0) ,
    # _'f_56313 : Type(0) ,
    # _'g_56314 : Type(0) ,
    # _'h_56315 : Type(0)
  ]
  ( _1_56316 : _'a_56308 ,
    _2_56317 : _'b_56309 ,
    _3_56318 : _'c_56310 ,
    _4_56319 : _'d_56311 ,
    _5_56320 : _'e_56312 ,
    _6_56321 : _'f_56313 ,
    _7_56322 : _'g_56314 ,
    _8_56323 : _'h_56315
  )
  :
  ( FStar.Pervasives.Native.tuple8
    ( _'a_56308 ,
      _'b_56309 ,
      _'c_56310 ,
      _'d_56311 ,
      _'e_56312 ,
      _'f_56313 ,
      _'g_56314 ,
      _'h_56315
    )
  )
  extern
  ;

unsupported: FStar.Pervasives.Native.tuple8__uu___haseq //(reason: bad variable index)

function
  FStar.Pervasives.Native.uu___is_Mktuple8
  #[# _'a_57567 : Type(0) ,
    # _'b_57568 : Type(0) ,
    # _'c_57569 : Type(0) ,
    # _'d_57570 : Type(0) ,
    # _'e_57571 : Type(0) ,
    # _'f_57572 : Type(0) ,
    # _'g_57573 : Type(0) ,
    # _'h_57574 : Type(0)
  ]
  (
    projectee_57575
      :
      ( FStar.Pervasives.Native.tuple8
        ( _'a_57567 ,
          _'b_57568 ,
          _'c_57569 ,
          _'d_57570 ,
          _'e_57571 ,
          _'f_57572 ,
          _'g_57573 ,
          _'h_57574
        )
      )
  )
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple8__item___1
  #[# _'a_57990 : Type(0) ,
    # _'b_57991 : Type(0) ,
    # _'c_57992 : Type(0) ,
    # _'d_57993 : Type(0) ,
    # _'e_57994 : Type(0) ,
    # _'f_57995 : Type(0) ,
    # _'g_57996 : Type(0) ,
    # _'h_57997 : Type(0)
  ]
  (
    projectee_57998
      :
      ( FStar.Pervasives.Native.tuple8
        ( _'a_57990 ,
          _'b_57991 ,
          _'c_57992 ,
          _'d_57993 ,
          _'e_57994 ,
          _'f_57995 ,
          _'g_57996 ,
          _'h_57997
        )
      )
  )
  :
  _'a_57990
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple8__item___2
  #[# _'a_61196 : Type(0) ,
    # _'b_61197 : Type(0) ,
    # _'c_61198 : Type(0) ,
    # _'d_61199 : Type(0) ,
    # _'e_61200 : Type(0) ,
    # _'f_61201 : Type(0) ,
    # _'g_61202 : Type(0) ,
    # _'h_61203 : Type(0)
  ]
  (
    projectee_61204
      :
      ( FStar.Pervasives.Native.tuple8
        ( _'a_61196 ,
          _'b_61197 ,
          _'c_61198 ,
          _'d_61199 ,
          _'e_61200 ,
          _'f_61201 ,
          _'g_61202 ,
          _'h_61203
        )
      )
  )
  :
  _'b_61197
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple8__item___3
  #[# _'a_64402 : Type(0) ,
    # _'b_64403 : Type(0) ,
    # _'c_64404 : Type(0) ,
    # _'d_64405 : Type(0) ,
    # _'e_64406 : Type(0) ,
    # _'f_64407 : Type(0) ,
    # _'g_64408 : Type(0) ,
    # _'h_64409 : Type(0)
  ]
  (
    projectee_64410
      :
      ( FStar.Pervasives.Native.tuple8
        ( _'a_64402 ,
          _'b_64403 ,
          _'c_64404 ,
          _'d_64405 ,
          _'e_64406 ,
          _'f_64407 ,
          _'g_64408 ,
          _'h_64409
        )
      )
  )
  :
  _'c_64404
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple8__item___4
  #[# _'a_67608 : Type(0) ,
    # _'b_67609 : Type(0) ,
    # _'c_67610 : Type(0) ,
    # _'d_67611 : Type(0) ,
    # _'e_67612 : Type(0) ,
    # _'f_67613 : Type(0) ,
    # _'g_67614 : Type(0) ,
    # _'h_67615 : Type(0)
  ]
  (
    projectee_67616
      :
      ( FStar.Pervasives.Native.tuple8
        ( _'a_67608 ,
          _'b_67609 ,
          _'c_67610 ,
          _'d_67611 ,
          _'e_67612 ,
          _'f_67613 ,
          _'g_67614 ,
          _'h_67615
        )
      )
  )
  :
  _'d_67611
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple8__item___5
  #[# _'a_70814 : Type(0) ,
    # _'b_70815 : Type(0) ,
    # _'c_70816 : Type(0) ,
    # _'d_70817 : Type(0) ,
    # _'e_70818 : Type(0) ,
    # _'f_70819 : Type(0) ,
    # _'g_70820 : Type(0) ,
    # _'h_70821 : Type(0)
  ]
  (
    projectee_70822
      :
      ( FStar.Pervasives.Native.tuple8
        ( _'a_70814 ,
          _'b_70815 ,
          _'c_70816 ,
          _'d_70817 ,
          _'e_70818 ,
          _'f_70819 ,
          _'g_70820 ,
          _'h_70821
        )
      )
  )
  :
  _'e_70818
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple8__item___6
  #[# _'a_74020 : Type(0) ,
    # _'b_74021 : Type(0) ,
    # _'c_74022 : Type(0) ,
    # _'d_74023 : Type(0) ,
    # _'e_74024 : Type(0) ,
    # _'f_74025 : Type(0) ,
    # _'g_74026 : Type(0) ,
    # _'h_74027 : Type(0)
  ]
  (
    projectee_74028
      :
      ( FStar.Pervasives.Native.tuple8
        ( _'a_74020 ,
          _'b_74021 ,
          _'c_74022 ,
          _'d_74023 ,
          _'e_74024 ,
          _'f_74025 ,
          _'g_74026 ,
          _'h_74027
        )
      )
  )
  :
  _'f_74025
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple8__item___7
  #[# _'a_77226 : Type(0) ,
    # _'b_77227 : Type(0) ,
    # _'c_77228 : Type(0) ,
    # _'d_77229 : Type(0) ,
    # _'e_77230 : Type(0) ,
    # _'f_77231 : Type(0) ,
    # _'g_77232 : Type(0) ,
    # _'h_77233 : Type(0)
  ]
  (
    projectee_77234
      :
      ( FStar.Pervasives.Native.tuple8
        ( _'a_77226 ,
          _'b_77227 ,
          _'c_77228 ,
          _'d_77229 ,
          _'e_77230 ,
          _'f_77231 ,
          _'g_77232 ,
          _'h_77233
        )
      )
  )
  :
  _'g_77232
  extern
  ;

function
  FStar.Pervasives.Native.__proj__Mktuple8__item___8
  #[# _'a_80432 : Type(0) ,
    # _'b_80433 : Type(0) ,
    # _'c_80434 : Type(0) ,
    # _'d_80435 : Type(0) ,
    # _'e_80436 : Type(0) ,
    # _'f_80437 : Type(0) ,
    # _'g_80438 : Type(0) ,
    # _'h_80439 : Type(0)
  ]
  (
    projectee_80440
      :
      ( FStar.Pervasives.Native.tuple8
        ( _'a_80432 ,
          _'b_80433 ,
          _'c_80434 ,
          _'d_80435 ,
          _'e_80436 ,
          _'f_80437 ,
          _'g_80438 ,
          _'h_80439
        )
      )
  )
  :
  _'h_80439
  extern
  ;

function
  FStar.Pervasives.Native.normalize_term
  #[# a_83493 : Type(0)]
  (x_83494 : a_83493)
  :
  a_83493
  extern
  ;

function FStar.Pervasives.Native.normalize (a_83517 : prop) : prop extern ;

type FStar.Pervasives.Native.norm_step : Type(1) extern ;

const FStar.Pervasives.Native.simplify : FStar.Pervasives.Native.norm_step extern ;

const FStar.Pervasives.Native.weak : FStar.Pervasives.Native.norm_step extern ;

const FStar.Pervasives.Native.hnf : FStar.Pervasives.Native.norm_step extern ;

const FStar.Pervasives.Native.primops : FStar.Pervasives.Native.norm_step extern ;

const FStar.Pervasives.Native.delta : FStar.Pervasives.Native.norm_step extern ;

const FStar.Pervasives.Native.zeta : FStar.Pervasives.Native.norm_step extern ;

const FStar.Pervasives.Native.iota : FStar.Pervasives.Native.norm_step extern ;

function
  FStar.Pervasives.Native.delta_only
  (s_84798 : (Prims.list (Prims.string)))
  :
  FStar.Pervasives.Native.norm_step
  extern
  ;

function
  FStar.Pervasives.Native.delta_fully
  (s_84827 : (Prims.list (Prims.string)))
  :
  FStar.Pervasives.Native.norm_step
  extern
  ;

unsupported: FStar.Pervasives.Native.delta_attr //(reason: t#84872)

unsupported: FStar.Pervasives.Native.norm //(reason: type parameters must be in outermost position: a#84931)

function
  FStar.Pervasives.Native.assert_norm
  (p_84986 : prop)
  :
  (uu____84987 : Prims.unit)
  requires (FStar.Pervasives.Native.normalize (p_84986)) ;
  ensures p_84986 ;
  extern
  ;

function
  FStar.Pervasives.Native.normalize_term_spec
  #[# a_85128 : Type(0)]
  (x_85129 : a_85128)
  :
  (uu____85130 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      (a_85128 , (FStar.Pervasives.Native.normalize_term (a_85128 , x_85129)) , x_85129)
    )
    ;
  extern
  ;

function
  FStar.Pervasives.Native.normalize_spec
  (a_85208 : prop)
  :
  (uu____85209 : Prims.unit)
  requires Prims.l_True ;
  ensures (Prims.eq2 (prop , (FStar.Pervasives.Native.normalize (a_85208)) , a_85208)) ;
  extern
  ;

unsupported: FStar.Pervasives.Native.norm_spec //(reason: type parameters must be in outermost position: a#85362)

function
  FStar.Pervasives.Native.singleton
  #[# a_85453 : Type(0)]
  (x_85454 : a_85453)
  :
  (y_85380 : a_85453)
  ensures (Prims.eq2 (a_85453 , y_85380 , x_85454)) ;
  extern
  ;

function
  FStar.Pervasives.Native.with_type
  #[# t_85488 : Type(0)]
  (e_85489 : t_85488)
  :
  t_85488
  extern
  ;

function FStar.Pervasives.id #[# a_380 : Type(0)] (x_381 : a_380) : a_380 extern ;

unsupported: FStar.Pervasives.st_pre_h //(reason: not vale type: (Type 1))

unsupported: FStar.Pervasives.st_post_h' //(reason: not vale type: (Type 1))

unsupported: FStar.Pervasives.st_post_h //(reason: not vale type: (Type 1))

unsupported: FStar.Pervasives.st_wp_h //(reason: not vale type: (Type 1))

unsupported: FStar.Pervasives.st_return //(reason: FStar.Pervasives.st_post_h)

unsupported: FStar.Pervasives.st_bind_wp //(reason: type parameters must be in outermost position: a#1883)

unsupported: FStar.Pervasives.st_if_then_else //(reason: FStar.Pervasives.st_wp_h)

unsupported: FStar.Pervasives.st_ite_wp //(reason: FStar.Pervasives.st_wp_h)

unsupported: FStar.Pervasives.st_stronger //(reason: FStar.Pervasives.st_wp_h)

unsupported: FStar.Pervasives.st_close_wp //(reason: FStar.Pervasives.st_wp_h)

unsupported: FStar.Pervasives.st_assert_p //(reason: FStar.Pervasives.st_wp_h)

unsupported: FStar.Pervasives.st_assume_p //(reason: FStar.Pervasives.st_wp_h)

unsupported: FStar.Pervasives.st_null_wp //(reason: FStar.Pervasives.st_post_h)

unsupported: FStar.Pervasives.st_trivial //(reason: FStar.Pervasives.st_wp_h)

type FStar.Pervasives.result (a_4795 : Type(0)) : Type(0) extern ;

function
  FStar.Pervasives.V
  #[# a_4796 : Type(0)]
  (v_4797 : a_4796)
  :
  (FStar.Pervasives.result (a_4796))
  extern
  ;

function
  FStar.Pervasives.E
  #[# a_4798 : Type(0)]
  (e_4799 : Prims.exn)
  :
  (FStar.Pervasives.result (a_4798))
  extern
  ;

function
  FStar.Pervasives.Err
  #[# a_4800 : Type(0)]
  (msg_4801 : Prims.string)
  :
  (FStar.Pervasives.result (a_4800))
  extern
  ;

function
  FStar.Pervasives.uu___is_V
  #[# a_4888 : Type(0)]
  (projectee_4889 : (FStar.Pervasives.result (a_4888)))
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.__proj__V__item__v
  #[# a_5059 : Type(0)]
  (projectee_5060 : (FStar.Pervasives.result (a_5059)))
  :
  a_5059
  requires
    ( let uu____5015 : (FStar.Pervasives.result (a_5059)) := projectee_5060 in
      (Prims.b2t ((FStar.Pervasives.uu___is_V (a_5059 , uu____5015))))
    )
    ;
  extern
  ;

function
  FStar.Pervasives.uu___is_E
  #[# a_5258 : Type(0)]
  (projectee_5259 : (FStar.Pervasives.result (a_5258)))
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.__proj__E__item__e
  #[# a_5416 : Type(0)]
  (projectee_5417 : (FStar.Pervasives.result (a_5416)))
  :
  Prims.exn
  requires
    ( let uu____5372 : (FStar.Pervasives.result (a_5416)) := projectee_5417 in
      (Prims.b2t ((FStar.Pervasives.uu___is_E (a_5416 , uu____5372))))
    )
    ;
  extern
  ;

function
  FStar.Pervasives.uu___is_Err
  #[# a_5599 : Type(0)]
  (projectee_5600 : (FStar.Pervasives.result (a_5599)))
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.__proj__Err__item__msg
  #[# a_5757 : Type(0)]
  (projectee_5758 : (FStar.Pervasives.result (a_5757)))
  :
  Prims.string
  requires
    ( let uu____5713 : (FStar.Pervasives.result (a_5757)) := projectee_5758 in
      (Prims.b2t ((FStar.Pervasives.uu___is_Err (a_5757 , uu____5713))))
    )
    ;
  extern
  ;

type FStar.Pervasives.ex_pre : Type(1) extern ;

unsupported: FStar.Pervasives.ex_post' //(reason: not vale type: (Type 1))

unsupported: FStar.Pervasives.ex_post //(reason: not vale type: (Type 1))

unsupported: FStar.Pervasives.ex_wp //(reason: not vale type: (Type 1))

unsupported: FStar.Pervasives.ex_return //(reason: FStar.Pervasives.ex_post)

unsupported: FStar.Pervasives.ex_bind_wp //(reason: type parameters must be in outermost position: a#7494)

unsupported: FStar.Pervasives.ex_ite_wp //(reason: FStar.Pervasives.ex_wp)

unsupported: FStar.Pervasives.ex_if_then_else //(reason: FStar.Pervasives.ex_wp)

unsupported: FStar.Pervasives.ex_stronger //(reason: FStar.Pervasives.ex_wp)

unsupported: FStar.Pervasives.ex_close_wp //(reason: FStar.Pervasives.ex_wp)

unsupported: FStar.Pervasives.ex_assert_p //(reason: FStar.Pervasives.ex_wp)

unsupported: FStar.Pervasives.ex_assume_p //(reason: FStar.Pervasives.ex_wp)

unsupported: FStar.Pervasives.ex_null_wp //(reason: FStar.Pervasives.ex_post)

unsupported: FStar.Pervasives.ex_trivial //(reason: FStar.Pervasives.ex_wp)

unsupported: FStar.Pervasives.lift_div_exn //(reason: Prims.pure_wp)

unsupported: FStar.Pervasives.all_pre_h //(reason: not vale type: (Type 1))

unsupported: FStar.Pervasives.all_post_h' //(reason: not vale type: (Type 1))

unsupported: FStar.Pervasives.all_post_h //(reason: not vale type: (Type 1))

unsupported: FStar.Pervasives.all_wp_h //(reason: not vale type: (Type 1))

unsupported: FStar.Pervasives.all_ite_wp //(reason: FStar.Pervasives.all_wp_h)

unsupported: FStar.Pervasives.all_return //(reason: FStar.Pervasives.all_post_h)

unsupported: FStar.Pervasives.all_bind_wp //(reason: type parameters must be in outermost position: a#11937)

unsupported: FStar.Pervasives.all_if_then_else //(reason: FStar.Pervasives.all_wp_h)

unsupported: FStar.Pervasives.all_stronger //(reason: FStar.Pervasives.all_wp_h)

unsupported: FStar.Pervasives.all_close_wp //(reason: FStar.Pervasives.all_wp_h)

unsupported: FStar.Pervasives.all_assert_p //(reason: FStar.Pervasives.all_wp_h)

unsupported: FStar.Pervasives.all_assume_p //(reason: FStar.Pervasives.all_wp_h)

unsupported: FStar.Pervasives.all_null_wp //(reason: FStar.Pervasives.all_post_h)

unsupported: FStar.Pervasives.all_trivial //(reason: FStar.Pervasives.all_wp_h)

function FStar.Pervasives.inversion #[a_14374 : Type(0)] () : prop extern ;

function
  FStar.Pervasives.allow_inversion
  #[a_14431 : Type(0)]
  ()
  :
  (x_14432 : Prims.unit)
  requires Prims.l_True ;
  ensures (FStar.Pervasives.inversion (a_14431)) ;
  extern
  ;

unsupported: FStar.Pervasives.invertOption //(reason: not vale expression: (fun x#14614 : (FStar.Pervasives.Native.option a#14612) -> (Prims.l_or (Prims.b2t (FStar.Pervasives.Native.uu___is_None # a#14612 x#14614)) (Prims.b2t (FStar.Pervasives.Native.uu___is_Some # a#14612 x#14614)))))

type FStar.Pervasives.either (_'a_15113 : Type(0) , _'b_15114 : Type(0)) : Type(0) extern ;

function
  FStar.Pervasives.Inl
  #[# _'a_15115 : Type(0) , # _'b_15116 : Type(0)]
  (v_15117 : _'a_15115)
  :
  (FStar.Pervasives.either (_'a_15115 , _'b_15116))
  extern
  ;

function
  FStar.Pervasives.Inr
  #[# _'a_15118 : Type(0) , # _'b_15119 : Type(0)]
  (v_15120 : _'b_15119)
  :
  (FStar.Pervasives.either (_'a_15118 , _'b_15119))
  extern
  ;

unsupported: FStar.Pervasives.either__uu___haseq //(reason: bad variable index)

function
  FStar.Pervasives.uu___is_Inl
  #[# _'a_15332 : Type(0) , # _'b_15333 : Type(0)]
  (projectee_15334 : (FStar.Pervasives.either (_'a_15332 , _'b_15333)))
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.__proj__Inl__item__v
  #[# _'a_15625 : Type(0) , # _'b_15626 : Type(0)]
  (projectee_15627 : (FStar.Pervasives.either (_'a_15625 , _'b_15626)))
  :
  _'a_15625
  requires
    ( let uu____15552 : (FStar.Pervasives.either (_'a_15625 , _'b_15626)) := projectee_15627 in
      (Prims.b2t ((FStar.Pervasives.uu___is_Inl (_'a_15625 , _'b_15626 , uu____15552))))
    )
    ;
  extern
  ;

function
  FStar.Pervasives.uu___is_Inr
  #[# _'a_15980 : Type(0) , # _'b_15981 : Type(0)]
  (projectee_15982 : (FStar.Pervasives.either (_'a_15980 , _'b_15981)))
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.__proj__Inr__item__v
  #[# _'a_16273 : Type(0) , # _'b_16274 : Type(0)]
  (projectee_16275 : (FStar.Pervasives.either (_'a_16273 , _'b_16274)))
  :
  _'b_16274
  requires
    ( let uu____16200 : (FStar.Pervasives.either (_'a_16273 , _'b_16274)) := projectee_16275 in
      (Prims.b2t ((FStar.Pervasives.uu___is_Inr (_'a_16273 , _'b_16274 , uu____16200))))
    )
    ;
  extern
  ;

unsupported: FStar.Pervasives.dfst //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.dsnd //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.dtuple3 //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.Mkdtuple3 //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.dtuple3__uu___haseq //(reason: bad variable index)

unsupported: FStar.Pervasives.uu___is_Mkdtuple3 //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.__proj__Mkdtuple3__item___1 //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.__proj__Mkdtuple3__item___2 //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.__proj__Mkdtuple3__item___3 //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.dtuple4 //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.Mkdtuple4 //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.dtuple4__uu___haseq //(reason: bad variable index)

unsupported: FStar.Pervasives.uu___is_Mkdtuple4 //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.__proj__Mkdtuple4__item___1 //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.__proj__Mkdtuple4__item___2 //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.__proj__Mkdtuple4__item___3 //(reason: not vale type: (Type 0))

unsupported: FStar.Pervasives.__proj__Mkdtuple4__item___4 //(reason: not vale type: (Type 0))

function
  FStar.Pervasives.ignore
  #[# a_36081 : Type(0)]
  (uu____36082 : a_36081)
  :
  Prims.unit
  extern
  ;

unsupported: FStar.Pervasives.false_elim //(reason: false)

type FStar.Pervasives.__internal_ocaml_attributes : Type(0) extern ;

const FStar.Pervasives.PpxDerivingShow : FStar.Pervasives.__internal_ocaml_attributes extern ;

function
  FStar.Pervasives.PpxDerivingShowConstant
  (_0_36660 : Prims.string)
  :
  FStar.Pervasives.__internal_ocaml_attributes
  extern
  ;

const FStar.Pervasives.CInline : FStar.Pervasives.__internal_ocaml_attributes extern ;

const FStar.Pervasives.Substitute : FStar.Pervasives.__internal_ocaml_attributes extern ;

const FStar.Pervasives.Gc : FStar.Pervasives.__internal_ocaml_attributes extern ;

function
  FStar.Pervasives.Comment
  (_0_36661 : Prims.string)
  :
  FStar.Pervasives.__internal_ocaml_attributes
  extern
  ;

function
  FStar.Pervasives.CPrologue
  (_0_36662 : Prims.string)
  :
  FStar.Pervasives.__internal_ocaml_attributes
  extern
  ;

function
  FStar.Pervasives.CEpilogue
  (_0_36663 : Prims.string)
  :
  FStar.Pervasives.__internal_ocaml_attributes
  extern
  ;

function
  FStar.Pervasives.CConst
  (_0_36664 : Prims.string)
  :
  FStar.Pervasives.__internal_ocaml_attributes
  extern
  ;

unsupported: FStar.Pervasives.__internal_ocaml_attributes__uu___haseq //(reason: not vale type: (PATTERN (((Prims.hasEq FStar.Pervasives.__internal_ocaml_attributes))) (Prims.l_imp Prims.l_True (Prims.hasEq FStar.Pervasives.__internal_ocaml_attributes))))

function
  FStar.Pervasives.uu___is_PpxDerivingShow
  (projectee_36762 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.uu___is_PpxDerivingShowConstant
  (projectee_36814 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0
  (projectee_36894 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.string
  requires
    ( let uu____36869 : FStar.Pervasives.__internal_ocaml_attributes := projectee_36894 in
      (Prims.b2t ((FStar.Pervasives.uu___is_PpxDerivingShowConstant (uu____36869))))
    )
    ;
  extern
  ;

function
  FStar.Pervasives.uu___is_CInline
  (projectee_36974 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.uu___is_Substitute
  (projectee_37026 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.uu___is_Gc
  (projectee_37078 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.uu___is_Comment
  (projectee_37130 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.__proj__Comment__item___0
  (projectee_37210 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.string
  requires
    ( let uu____37185 : FStar.Pervasives.__internal_ocaml_attributes := projectee_37210 in
      (Prims.b2t ((FStar.Pervasives.uu___is_Comment (uu____37185))))
    )
    ;
  extern
  ;

function
  FStar.Pervasives.uu___is_CPrologue
  (projectee_37290 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.__proj__CPrologue__item___0
  (projectee_37370 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.string
  requires
    ( let uu____37345 : FStar.Pervasives.__internal_ocaml_attributes := projectee_37370 in
      (Prims.b2t ((FStar.Pervasives.uu___is_CPrologue (uu____37345))))
    )
    ;
  extern
  ;

function
  FStar.Pervasives.uu___is_CEpilogue
  (projectee_37450 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.__proj__CEpilogue__item___0
  (projectee_37530 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.string
  requires
    ( let uu____37505 : FStar.Pervasives.__internal_ocaml_attributes := projectee_37530 in
      (Prims.b2t ((FStar.Pervasives.uu___is_CEpilogue (uu____37505))))
    )
    ;
  extern
  ;

function
  FStar.Pervasives.uu___is_CConst
  (projectee_37610 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.bool
  extern
  ;

function
  FStar.Pervasives.__proj__CConst__item___0
  (projectee_37690 : FStar.Pervasives.__internal_ocaml_attributes)
  :
  Prims.string
  requires
    ( let uu____37665 : FStar.Pervasives.__internal_ocaml_attributes := projectee_37690 in
      (Prims.b2t ((FStar.Pervasives.uu___is_CConst (uu____37665))))
    )
    ;
  extern
  ;

function FStar.Pervasives.deprecated (s_37772 : Prims.string) : Prims.unit extern ;

const FStar.Pervasives.inline_let : Prims.unit extern ;

const FStar.Pervasives.plugin : Prims.unit extern ;

const FStar.Pervasives.must_erase_for_extraction : Prims.unit extern ;

const FStar.Pervasives.dm4f_bind_range : Prims.unit extern ;

unsupported: FStar.Squash.return_squash //(reason: Prims.squash)

unsupported: FStar.Squash.bind_squash //(reason: Prims.squash)

unsupported: FStar.Squash.push_squash //(reason: not vale type: (Type 0))

unsupported: FStar.Squash.get_proof //(reason: Prims.squash)

unsupported: FStar.Squash.give_proof //(reason: Prims.squash)

unsupported: FStar.Squash.proof_irrelevance //(reason: Prims.squash)

unsupported: FStar.Squash.squash_double_arrow //(reason: not vale type: (Type 0))

unsupported: FStar.Squash.push_sum //(reason: not vale type: (Type 0))

unsupported: FStar.Squash.squash_double_sum //(reason: not vale type: (Type 0))

unsupported: FStar.Squash.map_squash //(reason: Prims.squash)

unsupported: FStar.Squash.join_squash //(reason: Prims.squash)

unsupported: FStar.StrongExcludedMiddle.strong_excluded_middle //(reason: Prims.op_Equality)

unsupported: FStar.Classical.give_witness //(reason: a#347)

unsupported: FStar.Classical.get_squashed //(reason: a#485)

unsupported: FStar.Classical.get_equality //(reason: Prims.eq2)

unsupported: FStar.Classical.get_forall //(reason: Prims.l_Forall)

unsupported: FStar.Classical.impl_to_arrow //(reason: Prims.l_imp)

unsupported: FStar.Classical.arrow_to_impl //(reason: Prims.squash)

unsupported: FStar.Classical.forall_intro_gtot //(reason: p#1946)

unsupported: FStar.Classical.lemma_forall_intro_gtot //(reason: p#2274)

unsupported: FStar.Classical.gtot_to_lemma //(reason: p#2517)

unsupported: FStar.Classical.lemma_to_squash_gtot //(reason: not vale type: (!! Prims.Lemma Prims.unit Prims.l_True (fun uu___#2779 : (Prims.squash Prims.l_True) -> (p#2774 x#2778))))

unsupported: FStar.Classical.forall_intro_squash_gtot //(reason: Prims.squash)

unsupported: FStar.Classical.forall_intro_squash_gtot_join //(reason: Prims.squash)

unsupported: FStar.Classical.forall_intro //(reason: not vale type: (!! Prims.Lemma Prims.unit Prims.l_True (fun uu___#4469 : (Prims.squash Prims.l_True) -> (p#4463 x#4468))))

unsupported: FStar.Classical.forall_intro' //(reason: not vale type: (!! Prims.Lemma Prims.unit Prims.l_True (fun uu___#4876 : (Prims.squash Prims.l_True) -> (p#4870 x#4875))))

unsupported: FStar.Classical.forall_intro_2 //(reason: not vale type: (Type 0))

unsupported: FStar.Classical.forall_intro_3 //(reason: not vale type: (Type 0))

unsupported: FStar.Classical.exists_intro //(reason: not vale expression: (fun x#8005 : a#8001 -> (p#8002 x#8005)))

unsupported: FStar.Classical.forall_to_exists //(reason: not vale type: (!! Prims.Lemma Prims.unit Prims.l_True (fun uu___#8440 : (Prims.squash Prims.l_True) -> (Prims.l_imp (p#8433 x#8439) r#8434))))

unsupported: FStar.Classical.forall_to_exists_2 //(reason: type parameters must be in outermost position: b#9268)

unsupported: FStar.Classical.impl_intro_gtot //(reason: p#9414)

unsupported: FStar.Classical.impl_intro //(reason: p#9850)

unsupported: FStar.Classical.exists_elim //(reason: type parameters must be in outermost position: a#10069)

unsupported: FStar.Classical.move_requires //(reason: not vale type: (!! Prims.Lemma Prims.unit (p#13651 x#13658) (fun uu___#13659 : (Prims.squash (p#13651 x#13658)) -> (q#13652 x#13658))))

unsupported: FStar.Classical.forall_impl_intro //(reason: Prims.squash)

unsupported: FStar.Classical.impl_intro_gen //(reason: Prims.squash)

unsupported: FStar.Classical.ghost_lemma //(reason: not vale type: (!! Prims.Ghost Prims.unit (p#15465 x#15473) (q#15466 x#15473)))

unsupported: FStar.Classical.or_elim //(reason: Prims.squash)

function
  FStar.Classical.excluded_middle
  (p_18596 : prop)
  :
  (uu____18597 : Prims.unit)
  requires Prims.l_True ;
  ensures (Prims.l_or (p_18596 , (Prims.l_not (p_18596)))) ;
  extern
  ;

function
  FStar.List.Tot.Base.isEmpty
  #[# _'a_456 : Type(0)]
  (uu____457 : (Prims.list (_'a_456)))
  :
  Prims.bool
  extern
  ;

function
  FStar.List.Tot.Base.hd
  #[# _'a_596 : Type(0)]
  (l_597 : (Prims.list (_'a_596)))
  :
  _'a_596
  requires
    ( let l_553 : (Prims.list (_'a_596)) := l_597 in
      (Prims.b2t ((Prims.uu___is_Cons (_'a_596 , l_553))))
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Base.tail
  #[# _'a_833 : Type(0)]
  (l_834 : (Prims.list (_'a_833)))
  :
  (Prims.list (_'a_833))
  requires
    ( let l_785 : (Prims.list (_'a_833)) := l_834 in
      (Prims.b2t ((Prims.uu___is_Cons (_'a_833 , l_785))))
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Base.tl
  #[# _'a_1081 : Type(0)]
  (l_1082 : (Prims.list (_'a_1081)))
  :
  (Prims.list (_'a_1081))
  requires
    ( let l_1033 : (Prims.list (_'a_1081)) := l_1082 in
      (Prims.b2t ((Prims.uu___is_Cons (_'a_1081 , l_1033))))
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Base.last
  #[# _'a_1196 : Type(0)]
  (l_1197 : (Prims.list (_'a_1196)))
  :
  _'a_1196
  requires
    ( let l_1153 : (Prims.list (_'a_1196)) := l_1197 in
      (Prims.b2t ((Prims.uu___is_Cons (_'a_1196 , l_1153))))
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Base.init
  #[# _'a_1767 : Type(0)]
  (l_1768 : (Prims.list (_'a_1767)))
  :
  (Prims.list (_'a_1767))
  requires
    ( let l_1719 : (Prims.list (_'a_1767)) := l_1768 in
      (Prims.b2t ((Prims.uu___is_Cons (_'a_1767 , l_1719))))
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Base.length
  #[# _'a_2379 : Type(0)]
  (uu____2380 : (Prims.list (_'a_2379)))
  :
  Prims.nat
  extern
  ;

function
  FStar.List.Tot.Base.nth
  #[# _'a_2736 : Type(0)]
  (uu____2737 : (Prims.list (_'a_2736)) , uu____2738 : Prims.nat)
  :
  (FStar.Pervasives.Native.option (_'a_2736))
  extern
  ;

function
  FStar.List.Tot.Base.index
  #[# a_3563 : Type(0)]
  (l_3564 : (Prims.list (a_3563)) , i_3565 : Prims.nat)
  :
  a_3563
  requires
    ( let i_3492 : Prims.nat := i_3565 in
      (Prims.b2t ((Prims.op_LessThan (i_3492 , (FStar.List.Tot.Base.length (a_3563 , l_3564))))))
    )
    ;
  extern
  ;

unsupported: FStar.List.Tot.Base.count //(reason: a#4330)

function
  FStar.List.Tot.Base.rev_acc
  #[# _'a_5182 : Type(0)]
  (uu____5183 : (Prims.list (_'a_5182)) , uu____5184 : (Prims.list (_'a_5182)))
  :
  (Prims.list (_'a_5182))
  extern
  ;

function
  FStar.List.Tot.Base.rev
  #[# _'a_5809 : Type(0)]
  (uu____5810 : (Prims.list (_'a_5809)))
  :
  (Prims.list (_'a_5809))
  extern
  ;

function
  FStar.List.Tot.Base.append
  #[# _'a_5921 : Type(0)]
  (uu____5922 : (Prims.list (_'a_5921)) , uu____5923 : (Prims.list (_'a_5921)))
  :
  (Prims.list (_'a_5921))
  extern
  ;

function
  FStar.List.Tot.Base.op_At
  #[# uu____6580 : Type(0)]
  (x_6581 : (Prims.list (uu____6580)) , y_6582 : (Prims.list (uu____6580)))
  :
  (Prims.list (uu____6580))
  extern
  ;

function
  FStar.List.Tot.Base.flatten
  #[# _'a_6644 : Type(0)]
  (uu____6645 : (Prims.list ((Prims.list (_'a_6644)))))
  :
  (Prims.list (_'a_6644))
  extern
  ;

function
  FStar.List.Tot.Base.map
  #[# _'a_7093 : Type(0) , # _'b_7094 : Type(0)]
  (uu____7095 : (fun (_'a_7093) -> _'b_7094) , uu____7096 : (Prims.list (_'a_7093)))
  :
  (Prims.list (_'b_7094))
  extern
  ;

function
  FStar.List.Tot.Base.mapi_init
  #[# _'a_7925 : Type(0) , # _'b_7926 : Type(0)]
  ( uu____7927 : (fun (Prims.int , _'a_7925) -> _'b_7926) ,
    uu____7928 : (Prims.list (_'a_7925)) ,
    uu____7929 : Prims.int
  )
  :
  (Prims.list (_'b_7926))
  extern
  ;

function
  FStar.List.Tot.Base.mapi
  #[# _'a_9221 : Type(0) , # _'b_9222 : Type(0)]
  ( uu____9223 : (fun (Prims.int , _'a_9221) -> _'b_9222) ,
    uu____9224 : (Prims.list (_'a_9221))
  )
  :
  (Prims.list (_'b_9222))
  extern
  ;

function
  FStar.List.Tot.Base.concatMap
  #[# _'a_9464 : Type(0) , # _'b_9465 : Type(0)]
  ( uu____9466 : (fun (_'a_9464) -> (Prims.list (_'b_9465))) ,
    uu____9467 : (Prims.list (_'a_9464))
  )
  :
  (Prims.list (_'b_9465))
  extern
  ;

function
  FStar.List.Tot.Base.fold_left
  #[# _'a_10321 : Type(0) , # _'b_10322 : Type(0)]
  ( uu____10323 : (fun (_'a_10321 , _'b_10322) -> _'a_10321) ,
    uu____10324 : _'a_10321 ,
    l_10325 : (Prims.list (_'b_10322))
  )
  :
  _'a_10321
  extern
  ;

function
  FStar.List.Tot.Base.fold_right
  #[# _'a_11363 : Type(0) , # _'b_11364 : Type(0)]
  ( uu____11365 : (fun (_'a_11363 , _'b_11364) -> _'b_11364) ,
    uu____11366 : (Prims.list (_'a_11363)) ,
    uu____11367 : _'b_11364
  )
  :
  _'b_11364
  extern
  ;

function
  FStar.List.Tot.Base.fold_left2
  #[# _'a_12718 : Type(0) , # _'b_12719 : Type(0) , # _'c_12720 : Type(0)]
  ( f_12721 : (fun (_'a_12718 , _'b_12719 , _'c_12720) -> _'a_12718) ,
    accu_12722 : _'a_12718 ,
    l1_12723 : (Prims.list (_'b_12719)) ,
    l2_12724 : (Prims.list (_'c_12720))
  )
  :
  (uu____12725 : _'a_12718)
  requires
    ( Prims.eq2
      ( Prims.nat ,
        (FStar.List.Tot.Base.length (_'b_12719 , l1_12723)) ,
        (FStar.List.Tot.Base.length (_'c_12720 , l2_12724))
      )
    )
    ;
  ensures Prims.l_True ;
  extern
  ;

unsupported: FStar.List.Tot.Base.mem //(reason: a#17519)

function
  FStar.List.Tot.Base.memP
  #[# a_18822 : Type(0)]
  (x_18823 : a_18822 , l_18824 : (Prims.list (a_18822)))
  :
  prop
  extern
  ;

unsupported: FStar.List.Tot.Base.contains //(reason: uu___#18892)

function
  FStar.List.Tot.Base.existsb
  #[# a_18957 : Type(0)]
  (f_18958 : (fun (a_18957) -> Prims.bool) , uu____18959 : (Prims.list (a_18957)))
  :
  Prims.bool
  extern
  ;

unsupported: FStar.List.Tot.Base.find //(reason: not vale type: (x#19546 : a#19588 {(Prims.b2t (f#19589 x#19546))}))

unsupported: FStar.List.Tot.Base.mem_filter_spec //(reason: not vale type: (x#20432 : Prims.unit {(Prims.hasEq a#20989)}))

unsupported: FStar.List.Tot.Base.filter //(reason: not vale type: (x#20432 : Prims.unit {(Prims.hasEq a#21259)}))

unsupported: FStar.List.Tot.Base.mem_filter //(reason: a#22837)

unsupported: FStar.List.Tot.Base.mem_filter_forall //(reason: a#23932)

function
  FStar.List.Tot.Base.for_all
  #[# _'a_24402 : Type(0)]
  (uu____24403 : (fun (_'a_24402) -> Prims.bool) , uu____24404 : (Prims.list (_'a_24402)))
  :
  Prims.bool
  extern
  ;

unsupported: FStar.List.Tot.Base.for_all_mem //(reason: a#26405)

function
  FStar.List.Tot.Base.collect
  #[# _'a_26492 : Type(0) , # _'b_26493 : Type(0)]
  ( uu____26494 : (fun (_'a_26492) -> (Prims.list (_'b_26493))) ,
    uu____26495 : (Prims.list (_'a_26492))
  )
  :
  (Prims.list (_'b_26493))
  extern
  ;

function
  FStar.List.Tot.Base.tryFind
  #[# _'a_27275 : Type(0)]
  (uu____27276 : (fun (_'a_27275) -> Prims.bool) , uu____27277 : (Prims.list (_'a_27275)))
  :
  (FStar.Pervasives.Native.option (_'a_27275))
  extern
  ;

function
  FStar.List.Tot.Base.tryPick
  #[# _'a_27976 : Type(0) , # _'b_27977 : Type(0)]
  ( uu____27978 : (fun (_'a_27976) -> (FStar.Pervasives.Native.option (_'b_27977))) ,
    uu____27979 : (Prims.list (_'a_27976))
  )
  :
  (FStar.Pervasives.Native.option (_'b_27977))
  extern
  ;

function
  FStar.List.Tot.Base.choose
  #[# _'a_29108 : Type(0) , # _'b_29109 : Type(0)]
  ( uu____29110 : (fun (_'a_29108) -> (FStar.Pervasives.Native.option (_'b_29109))) ,
    uu____29111 : (Prims.list (_'a_29108))
  )
  :
  (Prims.list (_'b_29109))
  extern
  ;

function
  FStar.List.Tot.Base.partition
  #[# _'a_30366 : Type(0)]
  (f_30367 : (fun (_'a_30366) -> Prims.bool) , uu____30368 : (Prims.list (_'a_30366)))
  :
  (FStar.Pervasives.Native.tuple2 ((Prims.list (_'a_30366)) , (Prims.list (_'a_30366))))
  extern
  ;

unsupported: FStar.List.Tot.Base.subset //(reason: a#32082)

unsupported: FStar.List.Tot.Base.noRepeats //(reason: a#32800)

unsupported: FStar.List.Tot.Base.assoc //(reason: type parameters must be in outermost position: b#33340)

function
  FStar.List.Tot.Base.split
  #[# _'a_34789 : Type(0) , # _'b_34790 : Type(0)]
  (uu____34791 : (Prims.list ((FStar.Pervasives.Native.tuple2 (_'a_34789 , _'b_34790)))))
  :
  (FStar.Pervasives.Native.tuple2 ((Prims.list (_'a_34789)) , (Prims.list (_'b_34790))))
  extern
  ;

function
  FStar.List.Tot.Base.unzip
  #[# uu____36645 : Type(0) , # uu____36646 : Type(0)]
  (l_36647 : (Prims.list ((FStar.Pervasives.Native.tuple2 (uu____36645 , uu____36646)))))
  :
  (FStar.Pervasives.Native.tuple2 ((Prims.list (uu____36645)) , (Prims.list (uu____36646))))
  extern
  ;

function
  FStar.List.Tot.Base.unzip3
  #[# _'a_36786 : Type(0) , # _'b_36787 : Type(0) , # _'c_36788 : Type(0)]
  (
    uu____36789
      :
      (Prims.list ((FStar.Pervasives.Native.tuple3 (_'a_36786 , _'b_36787 , _'c_36788))))
  )
  :
  ( FStar.Pervasives.Native.tuple3
    ((Prims.list (_'a_36786)) , (Prims.list (_'b_36787)) , (Prims.list (_'c_36788)))
  )
  extern
  ;

function
  FStar.List.Tot.Base.splitAt
  #[# a_41905 : Type(0)]
  (n_41906 : Prims.nat , l_41907 : (Prims.list (a_41905)))
  :
  (FStar.Pervasives.Native.tuple2 ((Prims.list (a_41905)) , (Prims.list (a_41905))))
  extern
  ;

unsupported: FStar.List.Tot.Base.partition_length //(reason: Prims.op_Equality)

function
  FStar.List.Tot.Base.bool_of_compare
  #[# _'a_43433 : Type(0)]
  ( uu____43434 : (fun (_'a_43433 , _'a_43433) -> Prims.int) ,
    uu____43435 : _'a_43433 ,
    uu____43436 : _'a_43433
  )
  :
  Prims.bool
  extern
  ;

unsupported: FStar.List.Tot.Base.compare_of_bool //(reason: a#43610)

function
  FStar.List.Tot.Base.sortWith
  #[# _'a_43977 : Type(0)]
  ( uu____43978 : (fun (_'a_43977 , _'a_43977) -> Prims.int) ,
    l_43979 : (Prims.list (_'a_43977))
  )
  :
  (Prims.list (_'a_43977))
  extern
  ;

function
  FStar.List.Tot.Base.strict_prefix_of
  #[# a_46826 : Type(0)]
  (l1_46827 : (Prims.list (a_46826)) , l2_46828 : (Prims.list (a_46826)))
  :
  (uu____46829 : prop)
  requires Prims.l_True ;
  ensures Prims.l_True ;
  extern
  ;

unsupported: FStar.List.Tot.Base.list_unref //(reason: not vale type: (x#46912 : a#46960 {(p#46961 x#46912)}))

unsupported: FStar.List.Tot.Properties.mem_empty //(reason: a#991)

unsupported: FStar.List.Tot.Properties.mem_existsb //(reason: a#1338)

unsupported: FStar.List.Tot.Properties.mem_count //(reason: a#3474)

unsupported: FStar.List.Tot.Properties.rev_acc_length //(reason: Prims.op_Equality)

unsupported: FStar.List.Tot.Properties.rev_length //(reason: Prims.op_Equality)

unsupported: FStar.List.Tot.Properties.rev_acc_mem //(reason: a#5080)

unsupported: FStar.List.Tot.Properties.rev_mem //(reason: a#6524)

function
  FStar.List.Tot.Properties.append_nil_l
  #[# _'a_6769 : Type(0)]
  (l_6770 : (Prims.list (_'a_6769)))
  :
  (uu____6771 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( (Prims.list (_'a_6769)) ,
        (FStar.List.Tot.Base.op_At (_'a_6769 , (Prims.Nil (_'a_6769)) , l_6770)) ,
        l_6770
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.append_l_nil
  #[# _'a_7020 : Type(0)]
  (l_7021 : (Prims.list (_'a_7020)))
  :
  (uu____7022 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( (Prims.list (_'a_7020)) ,
        (FStar.List.Tot.Base.op_At (_'a_7020 , l_7021 , (Prims.Nil (_'a_7020)))) ,
        l_7021
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.append_cons_l
  #[# _'a_7799 : Type(0)]
  ( hd_7800 : _'a_7799 ,
    tl_7801 : (Prims.list (_'a_7799)) ,
    l_7802 : (Prims.list (_'a_7799))
  )
  :
  (uu____7803 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( (Prims.list (_'a_7799)) ,
        ( FStar.List.Tot.Base.op_At
          (_'a_7799 , (Prims.Cons (_'a_7799 , hd_7800 , tl_7801)) , l_7802)
        )
          ,
        ( Prims.Cons
          (_'a_7799 , hd_7800 , (FStar.List.Tot.Base.op_At (_'a_7799 , tl_7801 , l_7802)))
        )
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.append_l_cons
  #[# _'a_8231 : Type(0)]
  ( hd_8232 : _'a_8231 ,
    tl_8233 : (Prims.list (_'a_8231)) ,
    l_8234 : (Prims.list (_'a_8231))
  )
  :
  (uu____8235 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( (Prims.list (_'a_8231)) ,
        ( FStar.List.Tot.Base.op_At
          (_'a_8231 , l_8234 , (Prims.Cons (_'a_8231 , hd_8232 , tl_8233)))
        )
          ,
        ( FStar.List.Tot.Base.op_At
          ( _'a_8231 ,
            ( FStar.List.Tot.Base.op_At
              (_'a_8231 , l_8234 , (Prims.Cons (_'a_8231 , hd_8232 , (Prims.Nil (_'a_8231)))))
            )
              ,
            tl_8233
          )
        )
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.append_assoc
  #[# _'a_9611 : Type(0)]
  ( l1_9612 : (Prims.list (_'a_9611)) ,
    l2_9613 : (Prims.list (_'a_9611)) ,
    l3_9614 : (Prims.list (_'a_9611))
  )
  :
  (uu____9615 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( (Prims.list (_'a_9611)) ,
        ( FStar.List.Tot.Base.op_At
          (_'a_9611 , l1_9612 , (FStar.List.Tot.Base.op_At (_'a_9611 , l2_9613 , l3_9614)))
        )
          ,
        ( FStar.List.Tot.Base.op_At
          (_'a_9611 , (FStar.List.Tot.Base.op_At (_'a_9611 , l1_9612 , l2_9613)) , l3_9614)
        )
      )
    )
    ;
  extern
  ;

unsupported: FStar.List.Tot.Properties.append_length //(reason: Prims.op_Equality)

unsupported: FStar.List.Tot.Properties.append_mem //(reason: t#12265)

unsupported: FStar.List.Tot.Properties.append_mem_forall //(reason: a#13827)

unsupported: FStar.List.Tot.Properties.append_count //(reason: t#15142)

unsupported: FStar.List.Tot.Properties.append_count_forall //(reason: a#16756)

function
  FStar.List.Tot.Properties.append_eq_nil
  #[# _'a_18015 : Type(0)]
  (l1_18016 : (Prims.list (_'a_18015)) , l2_18017 : (Prims.list (_'a_18015)))
  :
  (uu____18018 : Prims.unit)
  requires
    ( Prims.eq2
      ( (Prims.list (_'a_18015)) ,
        (FStar.List.Tot.Base.op_At (_'a_18015 , l1_18016 , l2_18017)) ,
        (Prims.Nil (_'a_18015))
      )
    )
    ;
  ensures
    ( Prims.l_and
      ( (Prims.eq2 ((Prims.list (_'a_18015)) , l1_18016 , (Prims.Nil (_'a_18015)))) ,
        (Prims.eq2 ((Prims.list (_'a_18015)) , l2_18017 , (Prims.Nil (_'a_18015))))
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.append_eq_singl
  #[# _'a_18706 : Type(0)]
  ( l1_18707 : (Prims.list (_'a_18706)) ,
    l2_18708 : (Prims.list (_'a_18706)) ,
    x_18709 : _'a_18706
  )
  :
  (uu____18710 : Prims.unit)
  requires
    ( Prims.eq2
      ( (Prims.list (_'a_18706)) ,
        (FStar.List.Tot.Base.op_At (_'a_18706 , l1_18707 , l2_18708)) ,
        (Prims.Cons (_'a_18706 , x_18709 , (Prims.Nil (_'a_18706))))
      )
    )
    ;
  ensures
    ( Prims.l_or
      (
        ( Prims.l_and
          (
            ( Prims.eq2
              ( (Prims.list (_'a_18706)) ,
                l1_18707 ,
                (Prims.Cons (_'a_18706 , x_18709 , (Prims.Nil (_'a_18706))))
              )
            )
              ,
            (Prims.eq2 ((Prims.list (_'a_18706)) , l2_18708 , (Prims.Nil (_'a_18706))))
          )
        )
          ,
        ( Prims.l_and
          ( (Prims.eq2 ((Prims.list (_'a_18706)) , l1_18707 , (Prims.Nil (_'a_18706)))) ,
            ( Prims.eq2
              ( (Prims.list (_'a_18706)) ,
                l2_18708 ,
                (Prims.Cons (_'a_18706 , x_18709 , (Prims.Nil (_'a_18706))))
              )
            )
          )
        )
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.append_inv_head
  #[# _'a_19009 : Type(0)]
  ( l_19010 : (Prims.list (_'a_19009)) ,
    l1_19011 : (Prims.list (_'a_19009)) ,
    l2_19012 : (Prims.list (_'a_19009))
  )
  :
  (uu____19013 : Prims.unit)
  requires
    ( Prims.eq2
      ( (Prims.list (_'a_19009)) ,
        (FStar.List.Tot.Base.op_At (_'a_19009 , l_19010 , l1_19011)) ,
        (FStar.List.Tot.Base.op_At (_'a_19009 , l_19010 , l2_19012))
      )
    )
    ;
  ensures (Prims.eq2 ((Prims.list (_'a_19009)) , l1_19011 , l2_19012)) ;
  extern
  ;

function
  FStar.List.Tot.Properties.append_inv_tail
  #[# _'a_20382 : Type(0)]
  ( l_20383 : (Prims.list (_'a_20382)) ,
    l1_20384 : (Prims.list (_'a_20382)) ,
    l2_20385 : (Prims.list (_'a_20382))
  )
  :
  (uu____20386 : Prims.unit)
  requires
    ( Prims.eq2
      ( (Prims.list (_'a_20382)) ,
        (FStar.List.Tot.Base.op_At (_'a_20382 , l1_20384 , l_20383)) ,
        (FStar.List.Tot.Base.op_At (_'a_20382 , l2_20385 , l_20383))
      )
    )
    ;
  ensures (Prims.eq2 ((Prims.list (_'a_20382)) , l1_20384 , l2_20385)) ;
  extern
  ;

function
  FStar.List.Tot.Properties.append_length_inv_head
  #[# a_27199 : Type(0)]
  ( left1_27200 : (Prims.list (a_27199)) ,
    right1_27201 : (Prims.list (a_27199)) ,
    left2_27202 : (Prims.list (a_27199)) ,
    right2_27203 : (Prims.list (a_27199))
  )
  :
  (uu____27204 : Prims.unit)
  requires
    ( Prims.l_and
      (
        ( Prims.eq2
          ( (Prims.list (a_27199)) ,
            (FStar.List.Tot.Base.append (a_27199 , left1_27200 , right1_27201)) ,
            (FStar.List.Tot.Base.append (a_27199 , left2_27202 , right2_27203))
          )
        )
          ,
        ( Prims.eq2
          ( Prims.nat ,
            (FStar.List.Tot.Base.length (a_27199 , left1_27200)) ,
            (FStar.List.Tot.Base.length (a_27199 , left2_27202))
          )
        )
      )
    )
    ;
  ensures
    ( Prims.l_and
      ( (Prims.eq2 ((Prims.list (a_27199)) , left1_27200 , left2_27202)) ,
        (Prims.eq2 ((Prims.list (a_27199)) , right1_27201 , right2_27203))
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.append_length_inv_tail
  #[# a_27922 : Type(0)]
  ( left1_27923 : (Prims.list (a_27922)) ,
    right1_27924 : (Prims.list (a_27922)) ,
    left2_27925 : (Prims.list (a_27922)) ,
    right2_27926 : (Prims.list (a_27922))
  )
  :
  (uu____27927 : Prims.unit)
  requires
    ( Prims.l_and
      (
        ( Prims.eq2
          ( (Prims.list (a_27922)) ,
            (FStar.List.Tot.Base.append (a_27922 , left1_27923 , right1_27924)) ,
            (FStar.List.Tot.Base.append (a_27922 , left2_27925 , right2_27926))
          )
        )
          ,
        ( Prims.eq2
          ( Prims.nat ,
            (FStar.List.Tot.Base.length (a_27922 , right1_27924)) ,
            (FStar.List.Tot.Base.length (a_27922 , right2_27926))
          )
        )
      )
    )
    ;
  ensures
    ( Prims.l_and
      ( (Prims.eq2 ((Prims.list (a_27922)) , left1_27923 , left2_27925)) ,
        (Prims.eq2 ((Prims.list (a_27922)) , right1_27924 , right2_27926))
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.rev'
  #[# _'a_27969 : Type(0)]
  (uu____27970 : (Prims.list (_'a_27969)))
  :
  (Prims.list (_'a_27969))
  extern
  ;

function
  FStar.List.Tot.Properties.rev'T
  #[# uu____28412 : Type(0)]
  (uu____28413 : (Prims.list (uu____28412)))
  :
  (Prims.list (uu____28412))
  extern
  ;

function
  FStar.List.Tot.Properties.rev_acc_rev'
  #[# _'a_28637 : Type(0)]
  (l_28638 : (Prims.list (_'a_28637)) , acc_28639 : (Prims.list (_'a_28637)))
  :
  (uu____28640 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( (Prims.list (_'a_28637)) ,
        (FStar.List.Tot.Base.rev_acc (_'a_28637 , l_28638 , acc_28639)) ,
        ( FStar.List.Tot.Base.op_At
          (_'a_28637 , (FStar.List.Tot.Properties.rev' (_'a_28637 , l_28638)) , acc_28639)
        )
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.rev_rev'
  #[# _'a_29619 : Type(0)]
  (l_29620 : (Prims.list (_'a_29619)))
  :
  (uu____29621 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( (Prims.list (_'a_29619)) ,
        (FStar.List.Tot.Base.rev (_'a_29619 , l_29620)) ,
        (FStar.List.Tot.Properties.rev' (_'a_29619 , l_29620))
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.rev'_append
  #[# _'a_29997 : Type(0)]
  (l1_29998 : (Prims.list (_'a_29997)) , l2_29999 : (Prims.list (_'a_29997)))
  :
  (uu____30000 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( (Prims.list (_'a_29997)) ,
        ( FStar.List.Tot.Properties.rev'
          (_'a_29997 , (FStar.List.Tot.Base.op_At (_'a_29997 , l1_29998 , l2_29999)))
        )
          ,
        ( FStar.List.Tot.Base.op_At
          ( _'a_29997 ,
            (FStar.List.Tot.Properties.rev' (_'a_29997 , l2_29999)) ,
            (FStar.List.Tot.Properties.rev' (_'a_29997 , l1_29998))
          )
        )
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.rev_append
  #[# _'a_31262 : Type(0)]
  (l1_31263 : (Prims.list (_'a_31262)) , l2_31264 : (Prims.list (_'a_31262)))
  :
  (uu____31265 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( (Prims.list (_'a_31262)) ,
        ( FStar.List.Tot.Base.rev
          (_'a_31262 , (FStar.List.Tot.Base.op_At (_'a_31262 , l1_31263 , l2_31264)))
        )
          ,
        ( FStar.List.Tot.Base.op_At
          ( _'a_31262 ,
            (FStar.List.Tot.Base.rev (_'a_31262 , l2_31264)) ,
            (FStar.List.Tot.Base.rev (_'a_31262 , l1_31263))
          )
        )
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.rev'_involutive
  #[# _'a_31619 : Type(0)]
  (l_31620 : (Prims.list (_'a_31619)))
  :
  (uu____31621 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( (Prims.list (_'a_31619)) ,
        ( FStar.List.Tot.Properties.rev'
          (_'a_31619 , (FStar.List.Tot.Properties.rev' (_'a_31619 , l_31620)))
        )
          ,
        l_31620
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.rev_involutive
  #[# _'a_32291 : Type(0)]
  (l_32292 : (Prims.list (_'a_32291)))
  :
  (uu____32293 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( (Prims.list (_'a_32291)) ,
        (FStar.List.Tot.Base.rev (_'a_32291 , (FStar.List.Tot.Base.rev (_'a_32291 , l_32292)))) ,
        l_32292
      )
    )
    ;
  extern
  ;

unsupported: FStar.List.Tot.Properties.rev'_list_ind //(reason: not vale expression: (fun hd#32829 : 'a#32826 -> (Prims.l_Forall # (Prims.list 'a#32826) (fun tl#32830 : (Prims.list 'a#32826) -> (Prims.l_imp (Prims.b2t (p#32827 (FStar.List.Tot.Properties.rev' # 'a#32826 tl#32830))) (Prims.b2t (p#32827 (FStar.List.Tot.Properties.rev' # 'a#32826 (Prims.Cons # 'a#32826 hd#32829 tl#32830)))))))))

unsupported: FStar.List.Tot.Properties.rev_ind //(reason: not vale expression: (fun hd#34468 : (Prims.list 'a#34465) -> (Prims.l_Forall # 'a#34465 (fun tl#34469 : 'a#34465 -> (Prims.l_imp (Prims.b2t (p#34466 hd#34468)) (Prims.b2t (p#34466 (FStar.List.Tot.Base.op_At # 'a#34465 hd#34468 (Prims.Cons # 'a#34465 tl#34469 (Prims.Nil # 'a#34465))))))))))

unsupported: FStar.List.Tot.Properties.map_lemma //(reason: Prims.op_Equality)

unsupported: FStar.List.Tot.Properties.partition_mem //(reason: MATCH)

unsupported: FStar.List.Tot.Properties.partition_mem_forall //(reason: MATCH)

unsupported: FStar.List.Tot.Properties.partition_mem_p_forall //(reason: MATCH)

unsupported: FStar.List.Tot.Properties.partition_count //(reason: a#46978)

unsupported: FStar.List.Tot.Properties.partition_count_forall //(reason: a#49112)

unsupported: FStar.List.Tot.Properties.sortWith_permutation //(reason: a#50759)

function
  FStar.List.Tot.Properties.sorted
  #[# _'a_53617 : Type(0)]
  ( uu____53618 : (fun (_'a_53617 , _'a_53617) -> Prims.bool) ,
    uu____53619 : (Prims.list (_'a_53617))
  )
  :
  Prims.bool
  extern
  ;

function
  FStar.List.Tot.Properties.total_order
  #[# a_55315 : Type(0)]
  (f_55316 : (fun (a_55315 , a_55315) -> Prims.bool))
  :
  prop
  extern
  ;

unsupported: FStar.List.Tot.Properties.append_sorted //(reason: a#56617)

unsupported: FStar.List.Tot.Properties.sortWith_sorted //(reason: a#61075)

unsupported: FStar.List.Tot.Properties.mem_memP //(reason: a#66184)

function
  FStar.List.Tot.Properties.memP_empty
  #[# a_66294 : Type(0)]
  (x_66295 : a_66294)
  :
  (uu____66296 : Prims.unit)
  requires (FStar.List.Tot.Base.memP (a_66294 , x_66295 , (Prims.Nil (a_66294)))) ;
  ensures Prims.l_False ;
  extern
  ;

unsupported: FStar.List.Tot.Properties.memP_existsb //(reason: not vale expression: (fun x#66626 : a#66622 -> (Prims.l_and (Prims.b2t (Prims.op_Equality # Prims.bool (f#66623 x#66626) true)) (FStar.List.Tot.Base.memP # a#66622 x#66626 xs#66624))))

function
  FStar.List.Tot.Properties.memP_map_intro
  #[# a_69250 : Type(0) , # b_69251 : Type(0)]
  ( f_69252 : (fun (a_69250) -> b_69251) ,
    x_69253 : a_69250 ,
    l_69254 : (Prims.list (a_69250))
  )
  :
  (uu____69255 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_imp
      ( (FStar.List.Tot.Base.memP (a_69250 , x_69253 , l_69254)) ,
        ( FStar.List.Tot.Base.memP
          ( b_69251 ,
            (f_69252 (x_69253)) ,
            (FStar.List.Tot.Base.map (a_69250 , b_69251 , f_69252 , l_69254))
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: FStar.List.Tot.Properties.memP_map_elim //(reason: not vale expression: (fun x#71484 : a#71478 -> (Prims.l_and (FStar.List.Tot.Base.memP # a#71478 x#71484 l#71482) (Prims.eq2 # b#71479 (f#71480 x#71484) y#71481))))

unsupported: FStar.List.Tot.Properties.noRepeats_nil //(reason: FStar.List.Tot.Base.noRepeats)

unsupported: FStar.List.Tot.Properties.noRepeats_cons //(reason: a#71814)

unsupported: FStar.List.Tot.Properties.noRepeats_append_elim //(reason: a#73561)

unsupported: FStar.List.Tot.Properties.noRepeats_append_intro //(reason: a#75501)

unsupported: FStar.List.Tot.Properties.assoc_nil //(reason: type parameters must be in outermost position: b#75741)

unsupported: FStar.List.Tot.Properties.assoc_cons_eq //(reason: type parameters must be in outermost position: b#76210)

unsupported: FStar.List.Tot.Properties.assoc_cons_not_eq //(reason: type parameters must be in outermost position: b#76857)

unsupported: FStar.List.Tot.Properties.assoc_append_elim_r //(reason: type parameters must be in outermost position: b#80550)

unsupported: FStar.List.Tot.Properties.assoc_append_elim_l //(reason: type parameters must be in outermost position: b#83650)

unsupported: FStar.List.Tot.Properties.assoc_memP_some //(reason: type parameters must be in outermost position: b#86318)

unsupported: FStar.List.Tot.Properties.assoc_memP_none //(reason: type parameters must be in outermost position: b#88749)

unsupported: FStar.List.Tot.Properties.assoc_mem //(reason: type parameters must be in outermost position: b#90740)

unsupported: FStar.List.Tot.Properties.fold_left_invar //(reason: not vale expression: (fun x#93802 : a#93797 -> (Prims.l_Forall # b#93798 (fun y#93803 : b#93798 -> (Prims.l_imp (p#93801 x#93802) (Prims.l_imp (FStar.List.Tot.Base.memP # b#93798 y#93803 l#93800) (p#93801 (f#93799 x#93802 y#93803))))))))

unsupported: FStar.List.Tot.Properties.fold_left_map //(reason: not vale expression: (fun x#98921 : a#98914 -> (Prims.l_Forall # b#98915 (fun y#98922 : b#98915 -> (Prims.eq2 # a#98914 (f_aba#98917 x#98921 y#98922) (f_aca#98919 x#98921 (f_bc#98918 y#98922)))))))

function
  FStar.List.Tot.Properties.map_append
  #[# a_101600 : Type(0) , # b_101601 : Type(0)]
  ( f_101602 : (fun (a_101600) -> b_101601) ,
    l1_101603 : (Prims.list (a_101600)) ,
    l2_101604 : (Prims.list (a_101600))
  )
  :
  (uu____101605 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( (Prims.list (b_101601)) ,
        ( FStar.List.Tot.Base.map
          ( a_101600 ,
            b_101601 ,
            f_101602 ,
            (FStar.List.Tot.Base.op_At (a_101600 , l1_101603 , l2_101604))
          )
        )
          ,
        ( FStar.List.Tot.Base.op_At
          ( b_101601 ,
            (FStar.List.Tot.Base.map (a_101600 , b_101601 , f_101602 , l1_101603)) ,
            (FStar.List.Tot.Base.map (a_101600 , b_101601 , f_101602 , l2_101604))
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: FStar.List.Tot.Properties.fold_left_append //(reason: not vale expression: (fun x#104598 : a#104592 -> (Prims.eq2 # a#104592 (FStar.List.Tot.Base.fold_left # a#104592 # b#104593 f#104594 x#104598 (FStar.List.Tot.Base.op_At # b#104593 l1#104595 l2#104596)) (FStar.List.Tot.Base.fold_left # a#104592 # b#104593 f#104594 (FStar.List.Tot.Base.fold_left # a#104592 # b#104593 f#104594 x#104598 l1#104595) l2#104596))))

unsupported: FStar.List.Tot.Properties.fold_left_monoid //(reason: not vale expression: (fun u#109069 : a#109065 -> (Prims.l_Forall # a#109065 (fun v#109070 : a#109065 -> (Prims.l_Forall # a#109065 (fun w#109071 : a#109065 -> (Prims.eq2 # a#109065 (opA#109066 u#109069 (opA#109066 v#109070 w#109071)) (opA#109066 (opA#109066 u#109069 v#109070) w#109071))))))))

unsupported: FStar.List.Tot.Properties.fold_left_append_monoid //(reason: not vale expression: (fun u#110550 : a#110545 -> (Prims.l_Forall # a#110545 (fun v#110551 : a#110545 -> (Prims.l_Forall # a#110545 (fun w#110552 : a#110545 -> (Prims.eq2 # a#110545 (f#110546 u#110550 (f#110546 v#110551 w#110552)) (f#110546 (f#110546 u#110550 v#110551) w#110552))))))))

unsupported: FStar.List.Tot.Properties.index_extensionality //(reason: not vale expression: (fun i#118234 : Prims.nat -> (Prims.l_imp (Prims.b2t (Prims.op_LessThan i#118234 (FStar.List.Tot.Base.length # a#118231 l1#118232))) (Prims.eq2 # a#118231 (FStar.List.Tot.Base.index # a#118231 l1#118232 i#118234) (FStar.List.Tot.Base.index # a#118231 l2#118233 i#118234)))))

function
  FStar.List.Tot.Properties.strict_prefix_of_nil
  #[# a_119210 : Type(0)]
  (x_119211 : a_119210 , l_119212 : (Prims.list (a_119210)))
  :
  (uu____119213 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( FStar.List.Tot.Base.strict_prefix_of
      (a_119210 , (Prims.Nil (a_119210)) , (Prims.Cons (a_119210 , x_119211 , l_119212)))
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.strict_prefix_of_or_eq_nil
  #[# a_119585 : Type(0)]
  (l_119586 : (Prims.list (a_119585)))
  :
  (uu____119587 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_or
      ( (FStar.List.Tot.Base.strict_prefix_of (a_119585 , (Prims.Nil (a_119585)) , l_119586)) ,
        (Prims.eq2 ((Prims.list (a_119585)) , l_119586 , (Prims.Nil (a_119585))))
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.strict_prefix_of_cons
  #[# a_119769 : Type(0)]
  (x_119770 : a_119769 , l_119771 : (Prims.list (a_119769)))
  :
  (uu____119772 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( FStar.List.Tot.Base.strict_prefix_of
      (a_119769 , l_119771 , (Prims.Cons (a_119769 , x_119770 , l_119771)))
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.strict_prefix_of_trans
  #[# a_122010 : Type(0)]
  ( l1_122011 : (Prims.list (a_122010)) ,
    l2_122012 : (Prims.list (a_122010)) ,
    l3_122013 : (Prims.list (a_122010))
  )
  :
  (uu____122014 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_imp
      (
        ( Prims.l_and
          ( (FStar.List.Tot.Base.strict_prefix_of (a_122010 , l1_122011 , l2_122012)) ,
            (FStar.List.Tot.Base.strict_prefix_of (a_122010 , l2_122012 , l3_122013))
          )
        )
          ,
        (FStar.List.Tot.Base.strict_prefix_of (a_122010 , l1_122011 , l3_122013))
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.strict_prefix_of_correct
  #[# a_123104 : Type(0)]
  (l1_123105 : (Prims.list (a_123104)) , l2_123106 : (Prims.list (a_123104)))
  :
  (uu____123107 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_imp
      ( (FStar.List.Tot.Base.strict_prefix_of (a_123104 , l1_123105 , l2_123106)) ,
        ( Prims.precedes
          ((Prims.list (a_123104)) , (Prims.list (a_123104)) , l1_123105 , l2_123106)
        )
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.map_strict_prefix_of
  #[# a_125386 : Type(0) , # b_125387 : Type(0)]
  ( f_125388 : (fun (a_125386) -> b_125387) ,
    l1_125389 : (Prims.list (a_125386)) ,
    l2_125390 : (Prims.list (a_125386))
  )
  :
  (uu____125391 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_imp
      ( (FStar.List.Tot.Base.strict_prefix_of (a_125386 , l1_125389 , l2_125390)) ,
        ( FStar.List.Tot.Base.strict_prefix_of
          ( b_125387 ,
            (FStar.List.Tot.Base.map (a_125386 , b_125387 , f_125388 , l1_125389)) ,
            (FStar.List.Tot.Base.map (a_125386 , b_125387 , f_125388 , l2_125390))
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: FStar.List.Tot.Properties.mem_strict_prefix_of //(reason: a#127118)

unsupported: FStar.List.Tot.Properties.strict_prefix_of_exists_append //(reason: not vale expression: (fun l3#129783 : (Prims.list a#129779) -> (Prims.eq2 # (Prims.list a#129779) l2#129781 (FStar.List.Tot.Base.append # a#129779 l3#129783 l1#129780))))

unsupported: FStar.List.Tot.Properties.strict_prefix_of_or_eq_exists_append //(reason: not vale expression: (fun l3#130590 : (Prims.list a#130586) -> (Prims.eq2 # (Prims.list a#130586) l2#130588 (FStar.List.Tot.Base.append # a#130586 l3#130590 l1#130587))))

unsupported: FStar.List.Tot.Properties.precedes_tl //(reason: not vale type: (l#130610 : (Prims.list a#130825) {(Prims.b2t (Prims.uu___is_Cons # a#130825 l#130610))}))

function
  FStar.List.Tot.Properties.precedes_append_cons_r
  #[# a_132850 : Type(0)]
  ( l1_132851 : (Prims.list (a_132850)) ,
    x_132852 : a_132850 ,
    l2_132853 : (Prims.list (a_132850))
  )
  :
  (uu____132854 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.precedes
      ( a_132850 ,
        (Prims.list (a_132850)) ,
        x_132852 ,
        ( FStar.List.Tot.Base.append
          (a_132850 , l1_132851 , (Prims.Cons (a_132850 , x_132852 , l2_132853)))
        )
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.precedes_append_cons_prod_r
  #[# a_135619 : Type(0) , # b_135620 : Type(0)]
  ( l_135621 : (Prims.list ((FStar.Pervasives.Native.tuple2 (a_135619 , b_135620)))) ,
    l1_135622 : (Prims.list ((FStar.Pervasives.Native.tuple2 (a_135619 , b_135620)))) ,
    x_135623 : a_135619 ,
    y_135624 : b_135620 ,
    l2_135625 : (Prims.list ((FStar.Pervasives.Native.tuple2 (a_135619 , b_135620))))
  )
  :
  (uu____135626 : Prims.unit)
  requires
    ( Prims.eq2
      ( (Prims.list ((FStar.Pervasives.Native.tuple2 (a_135619 , b_135620)))) ,
        l_135621 ,
        ( FStar.List.Tot.Base.append
          ( (FStar.Pervasives.Native.tuple2 (a_135619 , b_135620)) ,
            l1_135622 ,
            ( Prims.Cons
              ( (FStar.Pervasives.Native.tuple2 (a_135619 , b_135620)) ,
                (FStar.Pervasives.Native.Mktuple2 (a_135619 , b_135620 , x_135623 , y_135624)) ,
                l2_135625
              )
            )
          )
        )
      )
    )
    ;
  ensures
    ( Prims.l_and
      (
        ( Prims.precedes
          ( a_135619 ,
            (Prims.list ((FStar.Pervasives.Native.tuple2 (a_135619 , b_135620)))) ,
            x_135623 ,
            l_135621
          )
        )
          ,
        ( Prims.precedes
          ( b_135620 ,
            (Prims.list ((FStar.Pervasives.Native.tuple2 (a_135619 , b_135620)))) ,
            y_135624 ,
            l_135621
          )
        )
      )
    )
    ;
  extern
  ;

function
  FStar.List.Tot.Properties.memP_precedes
  #[# a_136938 : Type(0)]
  (x_136939 : a_136938 , l_136940 : (Prims.list (a_136938)))
  :
  (uu____136941 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_imp
      ( (FStar.List.Tot.Base.memP (a_136938 , x_136939 , l_136940)) ,
        (Prims.precedes (a_136938 , (Prims.list (a_136938)) , x_136939 , l_136940))
      )
    )
    ;
  extern
  ;

unsupported: FStar.List.Tot.Properties.assoc_precedes //(reason: type parameters must be in outermost position: b#137711)

unsupported: FStar.List.Tot.Properties.find_none //(reason: not vale type: (x#19546 : a#140348 {(Prims.b2t (f#140349 x#19546))}))

type FStar.Seq.Base.seq (a_552 : Type(0)) : Type(0) extern ;

unsupported: FStar.Seq.Base.seq__uu___haseq //(reason: bad variable index)

function
  FStar.Seq.Base.length
  #[# a_831 : Type(0)]
  (uu____832 : (FStar.Seq.Base.seq (a_831)))
  :
  Prims.nat
  extern
  ;

function
  FStar.Seq.Base.index
  #[# a_979 : Type(0)]
  (s_980 : (FStar.Seq.Base.seq (a_979)) , i_981 : Prims.nat)
  :
  a_979
  requires
    ( let i_908 : Prims.nat := i_981 in
      (Prims.b2t ((Prims.op_LessThan (i_908 , (FStar.Seq.Base.length (a_979 , s_980))))))
    )
    ;
  extern
  ;

function
  FStar.Seq.Base.create
  #[# a_1652 : Type(0)]
  (uu____1653 : Prims.nat , uu____1654 : a_1652)
  :
  (FStar.Seq.Base.seq (a_1652))
  extern
  ;

unsupported: FStar.Seq.Base.init //(reason: not vale type: (i#3786 : Prims.nat {(Prims.b2t (Prims.op_LessThan i#3786 len#3856))}))

function
  FStar.Seq.Base.of_list
  #[# a_4207 : Type(0)]
  (uu____4208 : (Prims.list (a_4207)))
  :
  (FStar.Seq.Base.seq (a_4207))
  extern
  ;

unsupported: FStar.Seq.Base.lemma_of_list_length //(reason: Prims.op_Equality)

unsupported: FStar.Seq.Base.lemma_of_list //(reason: Prims.op_Equality)

unsupported: FStar.Seq.Base.createEmpty //(reason: Prims.op_Equality)

unsupported: FStar.Seq.Base.lemma_empty //(reason: Prims.op_Equality)

function
  FStar.Seq.Base.upd
  #[# a_6153 : Type(0)]
  (s_6154 : (FStar.Seq.Base.seq (a_6153)) , n_6155 : Prims.nat , uu____6156 : a_6153)
  :
  (FStar.Seq.Base.seq (a_6153))
  requires
    ( let n_6034 : Prims.nat := n_6155 in
      (Prims.b2t ((Prims.op_LessThan (n_6034 , (FStar.Seq.Base.length (a_6153 , s_6154))))))
    )
    ;
  extern
  ;

function
  FStar.Seq.Base.append
  #[# a_7129 : Type(0)]
  (uu____7130 : (FStar.Seq.Base.seq (a_7129)) , uu____7131 : (FStar.Seq.Base.seq (a_7129)))
  :
  (FStar.Seq.Base.seq (a_7129))
  extern
  ;

function
  FStar.Seq.Base.op_At_Bar
  #[# a_7343 : Type(0)]
  (s1_7344 : (FStar.Seq.Base.seq (a_7343)) , s2_7345 : (FStar.Seq.Base.seq (a_7343)))
  :
  (FStar.Seq.Base.seq (a_7343))
  extern
  ;

function
  FStar.Seq.Base.slice
  #[# a_7554 : Type(0)]
  (s_7555 : (FStar.Seq.Base.seq (a_7554)) , i_7556 : Prims.nat , j_7557 : Prims.nat)
  :
  (FStar.Seq.Base.seq (a_7554))
  requires
    ( let j_7389 : Prims.nat := j_7557 in
      ( Prims.b2t
        (
          ( Prims.op_AmpAmp
            ( (Prims.op_LessThanOrEqual (i_7556 , j_7389)) ,
              (Prims.op_LessThanOrEqual (j_7389 , (FStar.Seq.Base.length (a_7554 , s_7555))))
            )
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: FStar.Seq.Base.lemma_create_len //(reason: Prims.op_Equality)

unsupported: FStar.Seq.Base.lemma_init_len //(reason: not vale type: (i#9886 : Prims.nat {(Prims.b2t (Prims.op_LessThan i#9886 n#10338))}))

unsupported: FStar.Seq.Base.lemma_len_upd //(reason: Prims.op_Equality)

unsupported: FStar.Seq.Base.lemma_len_append //(reason: Prims.op_Equality)

unsupported: FStar.Seq.Base.lemma_len_slice //(reason: Prims.op_Equality)

function
  FStar.Seq.Base.lemma_index_create
  #[# a_18661 : Type(0)]
  (n_18662 : Prims.nat , v_18663 : a_18661 , i_18664 : Prims.nat)
  :
  (uu____18665 : Prims.unit)
  requires
    ( let i_18212 : Prims.nat := i_18664 in
      (Prims.b2t ((Prims.op_LessThan (i_18212 , n_18662))))
    )
    ;
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( a_18661 ,
        ( FStar.Seq.Base.index
          (a_18661 , (FStar.Seq.Base.create (a_18661 , n_18662 , v_18663)) , i_18664)
        )
          ,
        v_18663
      )
    )
    ;
  extern
  ;

function
  FStar.Seq.Base.lemma_index_upd1
  #[# a_20383 : Type(0)]
  (s_20384 : (FStar.Seq.Base.seq (a_20383)) , n_20385 : Prims.nat , v_20386 : a_20383)
  :
  (uu____20387 : Prims.unit)
  requires
    ( let n_19925 : Prims.nat := n_20385 in
      (Prims.b2t ((Prims.op_LessThan (n_19925 , (FStar.Seq.Base.length (a_20383 , s_20384))))))
    )
    ;
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( a_20383 ,
        ( FStar.Seq.Base.index
          (a_20383 , (FStar.Seq.Base.upd (a_20383 , s_20384 , n_20385 , v_20386)) , n_20385)
        )
          ,
        v_20386
      )
    )
    ;
  extern
  ;

unsupported: FStar.Seq.Base.lemma_index_upd2 //(reason: Prims.op_disEquality)

function
  FStar.Seq.Base.lemma_index_app1
  #[# a_25106 : Type(0)]
  ( s1_25107 : (FStar.Seq.Base.seq (a_25106)) ,
    s2_25108 : (FStar.Seq.Base.seq (a_25106)) ,
    i_25109 : Prims.nat
  )
  :
  (uu____25110 : Prims.unit)
  requires
    ( let i_24615 : Prims.nat := i_25109 in
      (Prims.b2t ((Prims.op_LessThan (i_24615 , (FStar.Seq.Base.length (a_25106 , s1_25107))))))
    )
    ;
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( a_25106 ,
        ( FStar.Seq.Base.index
          (a_25106 , (FStar.Seq.Base.append (a_25106 , s1_25107 , s2_25108)) , i_25109)
        )
          ,
        (FStar.Seq.Base.index (a_25106 , s1_25107 , i_25109))
      )
    )
    ;
  extern
  ;

function
  FStar.Seq.Base.lemma_index_app2
  #[# a_27251 : Type(0)]
  ( s1_27252 : (FStar.Seq.Base.seq (a_27251)) ,
    s2_27253 : (FStar.Seq.Base.seq (a_27251)) ,
    i_27254 : Prims.nat
  )
  :
  (uu____27255 : Prims.unit)
  requires
    ( let i_26593 : Prims.nat := i_27254 in
      ( Prims.l_and
        (
          ( Prims.b2t
            (
              ( Prims.op_LessThan
                ( i_26593 ,
                  ( Prims.op_Addition
                    ( (FStar.Seq.Base.length (a_27251 , s1_27252)) ,
                      (FStar.Seq.Base.length (a_27251 , s2_27253))
                    )
                  )
                )
              )
            )
          )
            ,
          ( Prims.b2t
            ((Prims.op_LessThanOrEqual ((FStar.Seq.Base.length (a_27251 , s1_27252)) , i_26593)))
          )
        )
      )
    )
    ;
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( a_27251 ,
        ( FStar.Seq.Base.index
          (a_27251 , (FStar.Seq.Base.append (a_27251 , s1_27252 , s2_27253)) , i_27254)
        )
          ,
        ( FStar.Seq.Base.index
          ( a_27251 ,
            s2_27253 ,
            (Prims.op_Subtraction (i_27254 , (FStar.Seq.Base.length (a_27251 , s1_27252))))
          )
        )
      )
    )
    ;
  extern
  ;

function
  FStar.Seq.Base.lemma_index_slice
  #[# a_29559 : Type(0)]
  ( s_29560 : (FStar.Seq.Base.seq (a_29559)) ,
    i_29561 : Prims.nat ,
    j_29562 : Prims.nat ,
    k_29563 : Prims.nat
  )
  :
  (uu____29564 : Prims.unit)
  requires
    ( let j_28818 : Prims.nat := j_29562 in
      ( Prims.l_and
        ( (Prims.b2t ((Prims.op_LessThanOrEqual (i_29561 , j_28818)))) ,
          ( Prims.b2t
            ((Prims.op_LessThanOrEqual (j_28818 , (FStar.Seq.Base.length (a_29559 , s_29560)))))
          )
        )
      )
    )
    ;
  requires
    ( let k_28918 : Prims.nat := k_29563 in
      (Prims.b2t ((Prims.op_LessThan (k_28918 , (Prims.op_Subtraction (j_29562 , i_29561))))))
    )
    ;
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( a_29559 ,
        ( FStar.Seq.Base.index
          (a_29559 , (FStar.Seq.Base.slice (a_29559 , s_29560 , i_29561 , j_29562)) , k_29563)
        )
          ,
        (FStar.Seq.Base.index (a_29559 , s_29560 , (Prims.op_Addition (k_29563 , i_29561))))
      )
    )
    ;
  extern
  ;

function
  FStar.Seq.Base.hasEq_lemma
  #[a_31832 : Type(0)]
  ()
  :
  (uu____31833 : Prims.unit)
  requires (Prims.hasEq (a_31832)) ;
  ensures (Prims.hasEq ((FStar.Seq.Base.seq (a_31832)))) ;
  extern
  ;

function
  FStar.Seq.Base.equal
  #[# a_32362 : Type(0)]
  (s1_32363 : (FStar.Seq.Base.seq (a_32362)) , s2_32364 : (FStar.Seq.Base.seq (a_32362)))
  :
  prop
  extern
  ;

unsupported: FStar.Seq.Base.eq //(reason: a#35259)

unsupported: FStar.Seq.Base.lemma_eq_intro //(reason: Prims.op_Equality)

function
  FStar.Seq.Base.lemma_eq_refl
  #[# a_36569 : Type(0)]
  (s1_36570 : (FStar.Seq.Base.seq (a_36569)) , s2_36571 : (FStar.Seq.Base.seq (a_36569)))
  :
  (uu____36572 : Prims.unit)
  requires (Prims.eq2 ((FStar.Seq.Base.seq (a_36569)) , s1_36570 , s2_36571)) ;
  ensures (FStar.Seq.Base.equal (a_36569 , s1_36570 , s2_36571)) ;
  extern
  ;

function
  FStar.Seq.Base.lemma_eq_elim
  #[# a_36867 : Type(0)]
  (s1_36868 : (FStar.Seq.Base.seq (a_36867)) , s2_36869 : (FStar.Seq.Base.seq (a_36867)))
  :
  (uu____36870 : Prims.unit)
  requires (FStar.Seq.Base.equal (a_36867 , s1_36868 , s2_36869)) ;
  ensures (Prims.eq2 ((FStar.Seq.Base.seq (a_36867)) , s1_36868 , s2_36869)) ;
  extern
  ;

function
  FStar.Seq.Base.append_assoc
  #[# a_38145 : Type(0)]
  ( s1_38146 : (FStar.Seq.Base.seq (a_38145)) ,
    s2_38147 : (FStar.Seq.Base.seq (a_38145)) ,
    s3_38148 : (FStar.Seq.Base.seq (a_38145))
  )
  :
  (uu____38149 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( (FStar.Seq.Base.seq (a_38145)) ,
        ( FStar.Seq.Base.append
          (a_38145 , (FStar.Seq.Base.append (a_38145 , s1_38146 , s2_38147)) , s3_38148)
        )
          ,
        ( FStar.Seq.Base.append
          (a_38145 , s1_38146 , (FStar.Seq.Base.append (a_38145 , s2_38147 , s3_38148)))
        )
      )
    )
    ;
  extern
  ;

unsupported: FStar.Seq.Base.append_empty_l //(reason: FStar.Seq.Base.createEmpty)

unsupported: FStar.Seq.Base.append_empty_r //(reason: FStar.Seq.Base.createEmpty)

unsupported: FStar.Seq.Base.init_index //(reason: not vale type: (i#38578 : Prims.nat {(Prims.b2t (Prims.op_LessThan i#38578 len#39340))}))

unsupported: FStar.Seq.Properties.indexable //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_append_inj_l //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_append_inj_r //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_append_len_disj //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_append_inj //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.head //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.tail //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_head_append //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_tail_append //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.last //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.cons //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_cons_inj //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.split //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_split //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.split_eq //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.count //(reason: a#11173)

unsupported: FStar.Seq.Properties.mem //(reason: a#11991)

unsupported: FStar.Seq.Properties.mem_index //(reason: a#13935)

unsupported: FStar.Seq.Properties.swap //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_slice_append //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_slice_first_in_append //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.slice_upd //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.upd_slice //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_append_cons //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_tl //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.sorted //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_append_count //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_append_count_aux //(reason: a#23544)

unsupported: FStar.Seq.Properties.lemma_mem_inversion //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_mem_count //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_count_slice //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.total_order //(reason: a#27933)

unsupported: FStar.Seq.Properties.tot_ord //(reason: not vale type: (Type 0))

unsupported: FStar.Seq.Properties.sorted_concat_lemma //(reason: a#28984)

unsupported: FStar.Seq.Properties.split_5 //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_swap_permutes_aux_frag_eq //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_swap_permutes_aux //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.permutation //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_swap_permutes //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.cons_perm //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_mem_append //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_slice_cons //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_slice_snoc //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_ordering_lo_snoc //(reason: FStar.Seq.Properties.tot_ord)

unsupported: FStar.Seq.Properties.lemma_ordering_hi_cons //(reason: FStar.Seq.Properties.tot_ord)

unsupported: FStar.Seq.Properties.swap_frame_lo //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.swap_frame_lo' //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.swap_frame_hi //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_swap_slice_commute //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_swap_permutes_slice //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.splice //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.splice_refl //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_swap_splice //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_seq_frame_hi //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_seq_frame_lo //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_tail_slice //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_weaken_frame_right //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_weaken_frame_left //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_trans_frame //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_weaken_perm_left //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_weaken_perm_right //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_trans_perm //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.snoc //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_cons_snoc //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_tail_snoc //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_snoc_inj //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_mem_snoc //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.find_l //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.ghost_find_l //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.find_append_some //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.find_append_none //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.find_append_none_s2 //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.find_snoc //(reason: MATCH)

unsupported: FStar.Seq.Properties.un_snoc //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.un_snoc_snoc //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.find_r //(reason: FStar.Seq.Base.seq)

function FStar.Seq.Properties.found (i_108639 : Prims.nat) : prop extern ;

unsupported: FStar.Seq.Properties.seq_find_aux //(reason: MATCH)

unsupported: FStar.Seq.Properties.seq_find //(reason: MATCH)

unsupported: FStar.Seq.Properties.find_mem //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.for_all //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.seq_mem_k //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.seq_to_list //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.seq_of_list //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_seq_list_bij //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_list_seq_bij //(reason: FStar.Seq.Properties.seq_to_list)

unsupported: FStar.Seq.Properties.createL_post //(reason: a#123292)

unsupported: FStar.Seq.Properties.createL //(reason: a#123405)

unsupported: FStar.Seq.Properties.lemma_index_is_nth //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.contains //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.contains_intro //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.contains_elim //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_contains_empty //(reason: not vale expression: (fun x#125701 : a#125699 -> (Prims.l_not (FStar.Seq.Properties.contains # a#125699 (FStar.Seq.Base.createEmpty # a#125699) x#125701))))

unsupported: FStar.Seq.Properties.lemma_contains_singleton //(reason: not vale expression: (fun y#125946 : a#125943 -> (Prims.l_imp (FStar.Seq.Properties.contains # a#125943 (FStar.Seq.Base.create # a#125943 1 x#125944) y#125946) (Prims.eq2 # a#125943 y#125946 x#125944))))

unsupported: FStar.Seq.Properties.append_contains_equiv //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.contains_snoc //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.lemma_find_l_contains //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.contains_cons //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.append_cons_snoc //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.append_slices //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.find_l_none_no_index //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.suffix_of //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.cons_head_tail //(reason: bad variable index)

unsupported: FStar.Seq.Properties.head_cons //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.suffix_of_tail //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.index_cons_l //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.index_cons_r //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.append_cons //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.index_tail //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.mem_cons //(reason: a#137339)

unsupported: FStar.Seq.Properties.snoc_slice_index //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.cons_index_slice //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.slice_is_empty //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.slice_length //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.slice_slice //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.seq_of_list_tl //(reason: FStar.Seq.Base.seq)

unsupported: FStar.Seq.Properties.mem_seq_of_list //(reason: a#144783)

unsupported: Collections.Seqs_s.seq_map //(reason: FStar.Seq.Base.seq)

unsupported: Collections.Seqs_s.all_but_last //(reason: FStar.Seq.Base.seq)

unsupported: Collections.Seqs_s.reverse_seq //(reason: FStar.Seq.Base.seq)

function FStar.Mul.op_Star (uu____7 : Prims.int , uu____8 : Prims.int) : Prims.int extern ;

type Words_s.two (a_307 : Type(0)) : Type(0) extern ;

function
  Words_s.Mktwo
  #[# a_308 : Type(0)]
  (__fname__lo_309 : a_308 , __fname__hi_310 : a_308)
  :
  (Words_s.two (a_308))
  extern
  ;

unsupported: Words_s.two__uu___haseq //(reason: bad variable index)

function
  Words_s.__proj__Mktwo__item__lo
  #[# a_412 : Type(0)]
  (projectee_413 : (Words_s.two (a_412)))
  :
  a_412
  extern
  ;

function
  Words_s.__proj__Mktwo__item__hi
  #[# a_570 : Type(0)]
  (projectee_571 : (Words_s.two (a_570)))
  :
  a_570
  extern
  ;

type Words_s.four (a_1113 : Type(0)) : Type(0) extern ;

function
  Words_s.Mkfour
  #[# a_1114 : Type(0)]
  ( __fname__lo0_1115 : a_1114 ,
    __fname__lo1_1116 : a_1114 ,
    __fname__hi2_1117 : a_1114 ,
    __fname__hi3_1118 : a_1114
  )
  :
  (Words_s.four (a_1114))
  extern
  ;

unsupported: Words_s.four__uu___haseq //(reason: bad variable index)

function
  Words_s.__proj__Mkfour__item__lo0
  #[# a_1246 : Type(0)]
  (projectee_1247 : (Words_s.four (a_1246)))
  :
  a_1246
  extern
  ;

function
  Words_s.__proj__Mkfour__item__lo1
  #[# a_1503 : Type(0)]
  (projectee_1504 : (Words_s.four (a_1503)))
  :
  a_1503
  extern
  ;

function
  Words_s.__proj__Mkfour__item__hi2
  #[# a_1760 : Type(0)]
  (projectee_1761 : (Words_s.four (a_1760)))
  :
  a_1760
  extern
  ;

function
  Words_s.__proj__Mkfour__item__hi3
  #[# a_2017 : Type(0)]
  (projectee_2018 : (Words_s.four (a_2017)))
  :
  a_2017
  extern
  ;

type Words_s.eight (a_3143 : Type(0)) : Type(0) extern ;

function
  Words_s.Mkeight
  #[# a_3144 : Type(0)]
  ( __fname__lo_0_3145 : a_3144 ,
    __fname__lo_1_3146 : a_3144 ,
    __fname__lo_2_3147 : a_3144 ,
    __fname__lo_3_3148 : a_3144 ,
    __fname__hi_4_3149 : a_3144 ,
    __fname__hi_5_3150 : a_3144 ,
    __fname__hi_6_3151 : a_3144 ,
    __fname__hi_7_3152 : a_3144
  )
  :
  (Words_s.eight (a_3144))
  extern
  ;

unsupported: Words_s.eight__uu___haseq //(reason: bad variable index)

function
  Words_s.__proj__Mkeight__item__lo_0
  #[# a_3356 : Type(0)]
  (projectee_3357 : (Words_s.eight (a_3356)))
  :
  a_3356
  extern
  ;

function
  Words_s.__proj__Mkeight__item__lo_1
  #[# a_3895 : Type(0)]
  (projectee_3896 : (Words_s.eight (a_3895)))
  :
  a_3895
  extern
  ;

function
  Words_s.__proj__Mkeight__item__lo_2
  #[# a_4434 : Type(0)]
  (projectee_4435 : (Words_s.eight (a_4434)))
  :
  a_4434
  extern
  ;

function
  Words_s.__proj__Mkeight__item__lo_3
  #[# a_4973 : Type(0)]
  (projectee_4974 : (Words_s.eight (a_4973)))
  :
  a_4973
  extern
  ;

function
  Words_s.__proj__Mkeight__item__hi_4
  #[# a_5512 : Type(0)]
  (projectee_5513 : (Words_s.eight (a_5512)))
  :
  a_5512
  extern
  ;

function
  Words_s.__proj__Mkeight__item__hi_5
  #[# a_6051 : Type(0)]
  (projectee_6052 : (Words_s.eight (a_6051)))
  :
  a_6051
  extern
  ;

function
  Words_s.__proj__Mkeight__item__hi_6
  #[# a_6590 : Type(0)]
  (projectee_6591 : (Words_s.eight (a_6590)))
  :
  a_6590
  extern
  ;

function
  Words_s.__proj__Mkeight__item__hi_7
  #[# a_7129 : Type(0)]
  (projectee_7130 : (Words_s.eight (a_7129)))
  :
  a_7129
  extern
  ;

function Words_s.pow2_norm (n_7669 : Prims.nat) : Prims.pos extern ;

const Words_s.pow2_1 : Prims.int extern ;

const Words_s.pow2_2 : Prims.int extern ;

const Words_s.pow2_4 : Prims.int extern ;

const Words_s.pow2_8 : Prims.int extern ;

const Words_s.pow2_16 : Prims.int extern ;

const Words_s.pow2_32 : Prims.int extern ;

const Words_s.pow2_64 : Prims.int extern ;

const Words_s.pow2_128 : Prims.int extern ;

function Words_s.natN (n_7709 : Prims.nat) : prop extern ;

type Words_s.nat1 : Type(0) extern ;

type Words_s.nat2 : Type(0) extern ;

type Words_s.nat4 : Type(0) extern ;

type Words_s.nat8 : Type(0) extern ;

type Words_s.nat16 : Type(0) extern ;

type Words_s.nat32 : Type(0) extern ;

type Words_s.nat64 : Type(0) extern ;

type Words_s.nat128 : Type(0) extern ;

unsupported: Words_s.int_to_natN //(reason: Words_s.natN)

function
  Words.Four_s.four_map
  #[# a_712 : Type(0) , # b_713 : Type(0)]
  (f_714 : (fun (a_712) -> b_713) , x_715 : (Words_s.four (a_712)))
  :
  (Words_s.four (b_713))
  extern
  ;

function
  Words.Four_s.four_map2
  #[# a_2525 : Type(0) , # b_2526 : Type(0)]
  ( f_2527 : (fun (a_2525 , a_2525) -> b_2526) ,
    x_2528 : (Words_s.four (a_2525)) ,
    y_2529 : (Words_s.four (a_2525))
  )
  :
  (Words_s.four (b_2526))
  extern
  ;

function
  Words.Four_s.two_two_to_four
  #[# a_3265 : Type(0)]
  (x_3266 : (Words_s.two ((Words_s.two (a_3265)))))
  :
  (Words_s.four (a_3265))
  extern
  ;

function
  Words.Four_s.four_to_two_two
  #[# a_3809 : Type(0)]
  (x_3810 : (Words_s.four (a_3809)))
  :
  (Words_s.two ((Words_s.two (a_3809))))
  extern
  ;

unsupported: Words.Four_s.nat_to_four_unfold //(reason: Words_s.natN)

unsupported: Words.Four_s.nat_to_four //(reason: Words_s.natN)

unsupported: Words.Four_s.four_to_nat_unfold //(reason: Words_s.natN)

unsupported: Words.Four_s.four_to_nat //(reason: Words_s.natN)

function
  Words.Four_s.four_select
  #[# a_6384 : Type(0)]
  (x_6385 : (Words_s.four (a_6384)) , selector_6386 : Words_s.nat2)
  :
  a_6384
  extern
  ;

function
  Words.Four_s.four_insert
  #[# a_7081 : Type(0)]
  (x_7082 : (Words_s.four (a_7081)) , y_7083 : a_7081 , selector_7084 : Words_s.nat2)
  :
  (Words_s.four (a_7081))
  extern
  ;

function
  Words.Four_s.four_reverse
  #[# a_7516 : Type(0)]
  (x_7517 : (Words_s.four (a_7516)))
  :
  (Words_s.four (a_7516))
  extern
  ;

function
  Words.Two_s.two_map
  #[# a_449 : Type(0) , # b_450 : Type(0)]
  (f_451 : (fun (a_449) -> b_450) , x_452 : (Words_s.two (a_449)))
  :
  (Words_s.two (b_450))
  extern
  ;

function
  Words.Two_s.two_map2
  #[# a_1504 : Type(0) , # b_1505 : Type(0)]
  ( f_1506 : (fun (a_1504 , a_1504) -> b_1505) ,
    x_1507 : (Words_s.two (a_1504)) ,
    y_1508 : (Words_s.two (a_1504))
  )
  :
  (Words_s.two (b_1505))
  extern
  ;

unsupported: Words.Two_s.nat_to_two_unfold //(reason: Words_s.natN)

unsupported: Words.Two_s.nat_to_two //(reason: Words_s.natN)

unsupported: Words.Two_s.two_to_nat_unfold //(reason: Words_s.natN)

unsupported: Words.Two_s.two_to_nat //(reason: Words_s.natN)

function
  Words.Two_s.two_select
  #[# a_3018 : Type(0)]
  (x_3019 : (Words_s.two (a_3018)) , selector_3020 : Words_s.nat1)
  :
  a_3018
  extern
  ;

function
  Words.Two_s.two_insert
  #[# a_3285 : Type(0)]
  (x_3286 : (Words_s.two (a_3285)) , y_3287 : a_3285 , selector_3288 : Words_s.nat1)
  :
  (Words_s.two (a_3285))
  extern
  ;

function
  Words.Two_s.two_reverse
  #[# a_3541 : Type(0)]
  (x_3542 : (Words_s.two (a_3541)))
  :
  (Words_s.two (a_3541))
  extern
  ;

unsupported: Words.Seq_s.seqn //(reason: type parameters must be in outermost position: a#169)

unsupported: Words.Seq_s.seq2 //(reason: not vale type: (Type 0))

unsupported: Words.Seq_s.seq4 //(reason: not vale type: (Type 0))

unsupported: Words.Seq_s.seq8 //(reason: not vale type: (Type 0))

unsupported: Words.Seq_s.seq_to_two_LE //(reason: Words.Seq_s.seq2)

unsupported: Words.Seq_s.seq_to_two_BE //(reason: Words.Seq_s.seq2)

unsupported: Words.Seq_s.seq_to_four_LE //(reason: Words.Seq_s.seq4)

unsupported: Words.Seq_s.seq_to_four_BE //(reason: Words.Seq_s.seq4)

unsupported: Words.Seq_s.two_to_seq_LE //(reason: Words.Seq_s.seq2)

unsupported: Words.Seq_s.two_to_seq_BE //(reason: Words.Seq_s.seq2)

unsupported: Words.Seq_s.four_to_seq_LE //(reason: Words.Seq_s.seq4)

unsupported: Words.Seq_s.four_to_seq_BE //(reason: Words.Seq_s.seq4)

unsupported: Words.Seq_s.seq_two_to_seq_LE //(reason: FStar.Seq.Base.seq)

unsupported: Words.Seq_s.seq_two_to_seq_BE //(reason: FStar.Seq.Base.seq)

unsupported: Words.Seq_s.seq_four_to_seq_LE //(reason: FStar.Seq.Base.seq)

unsupported: Words.Seq_s.seq_four_to_seq_BE //(reason: FStar.Seq.Base.seq)

unsupported: Words.Seq_s.seq_to_seq_two_LE //(reason: FStar.Seq.Base.seq)

unsupported: Words.Seq_s.seq_to_seq_two_BE //(reason: FStar.Seq.Base.seq)

unsupported: Words.Seq_s.seq_to_seq_four_LE //(reason: FStar.Seq.Base.seq)

unsupported: Words.Seq_s.seq_to_seq_four_BE //(reason: FStar.Seq.Base.seq)

unsupported: Words.Seq_s.seq_nat8_to_seq_nat32_LE //(reason: FStar.Seq.Base.seq)

unsupported: Words.Seq_s.seq_nat8_to_seq_nat32_BE //(reason: FStar.Seq.Base.seq)

unsupported: Words.Seq_s.seq_nat32_to_seq_nat8_LE //(reason: FStar.Seq.Base.seq)

unsupported: Words.Seq_s.seq_nat32_to_seq_nat8_BE //(reason: FStar.Seq.Base.seq)

type Types_s.nat8 : Type(0) extern ;

type Types_s.nat16 : Type(0) extern ;

type Types_s.nat32 : Type(0) extern ;

type Types_s.nat64 : Type(0) extern ;

unsupported: Types_s.add_wrap //(reason: Words_s.natN)

unsupported: Types_s.iand //(reason: Words_s.natN)

unsupported: Types_s.ixor //(reason: Words_s.natN)

unsupported: Types_s.ior //(reason: Words_s.natN)

unsupported: Types_s.inot //(reason: Words_s.natN)

unsupported: Types_s.ishl //(reason: Words_s.natN)

unsupported: Types_s.ishr //(reason: Words_s.natN)

function
  Types_s.nat32_xor
  (x_675 : Types_s.nat32 , y_676 : Types_s.nat32)
  :
  Types_s.nat32
  extern
  ;

type Types_s.twobits : Type(0) extern ;

type Types_s.bits_of_byte : Type(0) extern ;

function Types_s.byte_to_twobits (b_745 : Types_s.nat8) : Types_s.bits_of_byte extern ;

type Types_s.double32 : Type(0) extern ;

type Types_s.quad32 : Type(0) extern ;

function
  Types_s.quad32_xor
  (x_876 : Types_s.quad32 , y_877 : Types_s.quad32)
  :
  Types_s.quad32
  extern
  ;

function
  Types_s.select_word
  (q_1062 : Types_s.quad32 , selector_1063 : Types_s.twobits)
  :
  Types_s.nat32
  extern
  ;

function
  Types_s.insert_nat32
  (q_1150 : Types_s.quad32 , n_1151 : Types_s.nat32 , i_1152 : Types_s.twobits)
  :
  Types_s.quad32
  extern
  ;

function
  Types_s.insert_nat64
  (q_1322 : Types_s.quad32 , n_1323 : Types_s.nat64 , i_1324 : Words_s.nat1)
  :
  Types_s.quad32
  extern
  ;

unsupported: Types_s.be_bytes_to_nat32 //(reason: Words.Seq_s.seq4)

unsupported: Types_s.nat32_to_be_bytes //(reason: Words.Seq_s.seq4)

unsupported: Types_s.be_bytes_to_nat32_to_be_bytes //(reason: Words.Seq_s.seq4)

unsupported: Types_s.le_bytes_to_quad32 //(reason: Words.Seq_s.seqn)

unsupported: Types_s.be_bytes_to_quad32 //(reason: Words.Seq_s.seqn)

unsupported: Types_s.le_quad32_to_bytes //(reason: Words.Seq_s.seqn)

unsupported: Types_s.le_seq_quad32_to_bytes //(reason: FStar.Seq.Base.seq)

unsupported: Types_s.le_bytes_to_seq_quad32 //(reason: FStar.Seq.Base.seq)

function Types_s.reverse_bytes_nat32 (n_2537 : Types_s.nat32) : Types_s.nat32 extern ;

function Types_s.reverse_bytes_quad32 (q_2557 : Types_s.quad32) : Types_s.quad32 extern ;

function
  Types_s.reveal_reverse_bytes_quad32
  (q_2694 : Types_s.quad32)
  :
  (uu____2695 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Types_s.quad32 ,
        (Types_s.reverse_bytes_quad32 (q_2694)) ,
        ( Words.Four_s.four_reverse
          ( Types_s.nat32 ,
            (Words.Four_s.four_map (Types_s.nat32 , Types_s.nat32 , Types_s.reverse_bytes_nat32 , q_2694))
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: Types_s.reverse_bytes_nat32_seq //(reason: FStar.Seq.Base.seq)

unsupported: Types_s.reveal_reverse_bytes_nat32_seq //(reason: FStar.Seq.Base.seq)

type Memory_i_s.nat8 : Type(0) extern ;

type Memory_i_s.nat16 : Type(0) extern ;

type Memory_i_s.nat32 : Type(0) extern ;

type Memory_i_s.nat64 : Type(0) extern ;

type Memory_i_s.quad32 : Type(0) extern ;

type Memory_i_s.heap : Type(1) extern ;

type Memory_i_s.mem : Type(1) extern ;

type Memory_i_s.base_typ : Type(0) extern ;

const Memory_i_s.TUInt8 : Memory_i_s.base_typ extern ;

const Memory_i_s.TUInt16 : Memory_i_s.base_typ extern ;

const Memory_i_s.TUInt32 : Memory_i_s.base_typ extern ;

const Memory_i_s.TUInt64 : Memory_i_s.base_typ extern ;

const Memory_i_s.TUInt128 : Memory_i_s.base_typ extern ;

unsupported: Memory_i_s.base_typ__uu___haseq //(reason: not vale type: (PATTERN (((Prims.hasEq Memory_i_s.base_typ))) (Prims.l_imp Prims.l_True (Prims.hasEq Memory_i_s.base_typ))))

function Memory_i_s.uu___is_TUInt8 (projectee_289 : Memory_i_s.base_typ) : Prims.bool extern ;

function Memory_i_s.uu___is_TUInt16 (projectee_341 : Memory_i_s.base_typ) : Prims.bool extern ;

function Memory_i_s.uu___is_TUInt32 (projectee_393 : Memory_i_s.base_typ) : Prims.bool extern ;

function Memory_i_s.uu___is_TUInt64 (projectee_445 : Memory_i_s.base_typ) : Prims.bool extern ;

function Memory_i_s.uu___is_TUInt128 (projectee_497 : Memory_i_s.base_typ) : Prims.bool extern ;

type Memory_i_s.typ : Type(0) extern ;

function Memory_i_s.TBase (b_621 : Memory_i_s.base_typ) : Memory_i_s.typ extern ;

unsupported: Memory_i_s.typ__uu___haseq //(reason: not vale type: (PATTERN (((Prims.hasEq Memory_i_s.typ))) (Prims.l_imp Prims.l_True (Prims.hasEq Memory_i_s.typ))))

function Memory_i_s.uu___is_TBase (projectee_655 : Memory_i_s.typ) : Prims.bool extern ;

function
  Memory_i_s.__proj__TBase__item__b
  (projectee_679 : Memory_i_s.typ)
  :
  Memory_i_s.base_typ
  extern
  ;

function Memory_i_s.type_of_base_typ (t_777 : Memory_i_s.base_typ) : prop extern ;

function Memory_i_s.type_of_typ (t_821 : Memory_i_s.typ) : prop extern ;

function Memory_i_s.buffer (t_842 : Memory_i_s.typ) : prop extern ;

unsupported: Memory_i_s.buffer_as_seq //(reason: Memory_i_s.buffer)

unsupported: Memory_i_s.buffer_readable //(reason: Memory_i_s.buffer)

unsupported: Memory_i_s.buffer_length //(reason: Memory_i_s.buffer)

type Memory_i_s.loc : Type(0) extern ;

const Memory_i_s.loc_none : Memory_i_s.loc extern ;

function
  Memory_i_s.loc_union
  (s1_1002 : Memory_i_s.loc , s2_1003 : Memory_i_s.loc)
  :
  Memory_i_s.loc
  extern
  ;

unsupported: Memory_i_s.loc_buffer //(reason: Memory_i_s.buffer)

function
  Memory_i_s.loc_disjoint
  (s1_1058 : Memory_i_s.loc , s2_1059 : Memory_i_s.loc)
  :
  prop
  extern
  ;

function
  Memory_i_s.loc_includes
  (s1_1083 : Memory_i_s.loc , s2_1084 : Memory_i_s.loc)
  :
  prop
  extern
  ;

function
  Memory_i_s._modifies
  (s_1116 : Memory_i_s.loc , h1_1117 : Memory_i_s.mem , h2_1118 : Memory_i_s.mem)
  :
  prop
  extern
  ;

type Memory_i_s.buffer8 : Type(0) extern ;

type Memory_i_s.buffer16 : Type(0) extern ;

type Memory_i_s.buffer32 : Type(0) extern ;

type Memory_i_s.buffer64 : Type(0) extern ;

type Memory_i_s.buffer128 : Type(0) extern ;

function
  Memory_i_s.loc_readable
  (h_1185 : Memory_i_s.mem , s_1186 : Memory_i_s.loc)
  :
  prop
  extern
  ;

function
  Memory_i_s.loc_readable_none
  (h_1287 : Memory_i_s.mem)
  :
  (uu____1288 : Prims.unit)
  requires Prims.l_True ;
  ensures (Memory_i_s.loc_readable (h_1287 , Memory_i_s.loc_none)) ;
  extern
  ;

function
  Memory_i_s.loc_readable_union
  (h_1524 : Memory_i_s.mem , s1_1525 : Memory_i_s.loc , s2_1526 : Memory_i_s.loc)
  :
  (uu____1527 : Prims.unit)
  requires
    ( Prims.l_and
      ( (Memory_i_s.loc_readable (h_1524 , s1_1525)) ,
        (Memory_i_s.loc_readable (h_1524 , s2_1526))
      )
    )
    ;
  ensures (Memory_i_s.loc_readable (h_1524 , (Memory_i_s.loc_union (s1_1525 , s2_1526)))) ;
  extern
  ;

unsupported: Memory_i_s.loc_readable_buffer //(reason: Memory_i_s.buffer)

function
  Memory_i_s.loc_locs_disjoint_rec
  (l_2238 : Memory_i_s.loc , ls_2239 : (Prims.list (Memory_i_s.loc)))
  :
  prop
  extern
  ;

function
  Memory_i_s.locs_disjoint_rec
  (ls_2499 : (Prims.list (Memory_i_s.loc)))
  :
  prop
  extern
  ;

function Memory_i_s.locs_disjoint (ls_2561 : (Prims.list (Memory_i_s.loc))) : prop extern ;

function
  Memory_i_s.modifies_goal_directed
  (s_2597 : Memory_i_s.loc , h1_2598 : Memory_i_s.mem , h2_2599 : Memory_i_s.mem)
  :
  prop
  extern
  ;

function
  Memory_i_s.lemma_modifies_goal_directed
  (s_2742 : Memory_i_s.loc , h1_2743 : Memory_i_s.mem , h2_2744 : Memory_i_s.mem)
  :
  (uu____2745 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( prop ,
        (Memory_i_s._modifies (s_2742 , h1_2743 , h2_2744)) ,
        (Memory_i_s.modifies_goal_directed (s_2742 , h1_2743 , h2_2744))
      )
    )
    ;
  extern
  ;

unsupported: Memory_i_s.buffer_length_buffer_as_seq //(reason: Memory_i_s.buffer)

unsupported: Memory_i_s.modifies_buffer_elim //(reason: Memory_i_s.buffer)

function
  Memory_i_s.loc_disjoint_none_r
  (s_4619 : Memory_i_s.loc)
  :
  (uu____4620 : Prims.unit)
  requires Prims.l_True ;
  ensures (Memory_i_s.loc_disjoint (s_4619 , Memory_i_s.loc_none)) ;
  extern
  ;

function
  Memory_i_s.loc_disjoint_union_r
  (s_4856 : Memory_i_s.loc , s1_4857 : Memory_i_s.loc , s2_4858 : Memory_i_s.loc)
  :
  (uu____4859 : Prims.unit)
  requires
    ( Prims.l_and
      ( (Memory_i_s.loc_disjoint (s_4856 , s1_4857)) ,
        (Memory_i_s.loc_disjoint (s_4856 , s2_4858))
      )
    )
    ;
  ensures (Memory_i_s.loc_disjoint (s_4856 , (Memory_i_s.loc_union (s1_4857 , s2_4858)))) ;
  extern
  ;

function
  Memory_i_s.loc_includes_refl
  (s_4974 : Memory_i_s.loc)
  :
  (uu____4975 : Prims.unit)
  requires Prims.l_True ;
  ensures (Memory_i_s.loc_includes (s_4974 , s_4974)) ;
  extern
  ;

function
  Memory_i_s.loc_includes_trans
  (s1_5098 : Memory_i_s.loc , s2_5099 : Memory_i_s.loc , s3_5100 : Memory_i_s.loc)
  :
  (uu____5101 : Prims.unit)
  requires
    ( Prims.l_and
      ( (Memory_i_s.loc_includes (s1_5098 , s2_5099)) ,
        (Memory_i_s.loc_includes (s2_5099 , s3_5100))
      )
    )
    ;
  ensures (Memory_i_s.loc_includes (s1_5098 , s3_5100)) ;
  extern
  ;

function
  Memory_i_s.loc_includes_union_r
  (s_5333 : Memory_i_s.loc , s1_5334 : Memory_i_s.loc , s2_5335 : Memory_i_s.loc)
  :
  (uu____5336 : Prims.unit)
  requires
    ( Prims.l_and
      ( (Memory_i_s.loc_includes (s_5333 , s1_5334)) ,
        (Memory_i_s.loc_includes (s_5333 , s2_5335))
      )
    )
    ;
  ensures (Memory_i_s.loc_includes (s_5333 , (Memory_i_s.loc_union (s1_5334 , s2_5335)))) ;
  extern
  ;

function
  Memory_i_s.loc_includes_union_l
  (s1_5485 : Memory_i_s.loc , s2_5486 : Memory_i_s.loc , s_5487 : Memory_i_s.loc)
  :
  (uu____5488 : Prims.unit)
  requires
    ( Prims.l_or
      ( (Memory_i_s.loc_includes (s1_5485 , s_5487)) ,
        (Memory_i_s.loc_includes (s2_5486 , s_5487))
      )
    )
    ;
  ensures (Memory_i_s.loc_includes ((Memory_i_s.loc_union (s1_5485 , s2_5486)) , s_5487)) ;
  extern
  ;

unsupported: Memory_i_s.loc_includes_union_l_buffer //(reason: Memory_i_s.buffer)

function
  Memory_i_s.loc_includes_none
  (s_6003 : Memory_i_s.loc)
  :
  (uu____6004 : Prims.unit)
  requires Prims.l_True ;
  ensures (Memory_i_s.loc_includes (s_6003 , Memory_i_s.loc_none)) ;
  extern
  ;

function
  Memory_i_s.modifies_refl
  (s_6153 : Memory_i_s.loc , h_6154 : Memory_i_s.mem)
  :
  (uu____6155 : Prims.unit)
  requires Prims.l_True ;
  ensures (Memory_i_s._modifies (s_6153 , h_6154 , h_6154)) ;
  extern
  ;

function
  Memory_i_s.modifies_goal_directed_refl
  (s_6308 : Memory_i_s.loc , h_6309 : Memory_i_s.mem)
  :
  (uu____6310 : Prims.unit)
  requires Prims.l_True ;
  ensures (Memory_i_s.modifies_goal_directed (s_6308 , h_6309 , h_6309)) ;
  extern
  ;

function
  Memory_i_s.modifies_loc_includes
  ( s1_6475 : Memory_i_s.loc ,
    h_6476 : Memory_i_s.mem ,
    h'_6477 : Memory_i_s.mem ,
    s2_6478 : Memory_i_s.loc
  )
  :
  (uu____6479 : Prims.unit)
  requires
    ( Prims.l_and
      ( (Memory_i_s._modifies (s2_6478 , h_6476 , h'_6477)) ,
        (Memory_i_s.loc_includes (s1_6475 , s2_6478))
      )
    )
    ;
  ensures (Memory_i_s._modifies (s1_6475 , h_6476 , h'_6477)) ;
  extern
  ;

function
  Memory_i_s.modifies_trans
  ( s12_6689 : Memory_i_s.loc ,
    h1_6690 : Memory_i_s.mem ,
    h2_6691 : Memory_i_s.mem ,
    s23_6692 : Memory_i_s.loc ,
    h3_6693 : Memory_i_s.mem
  )
  :
  (uu____6694 : Prims.unit)
  requires
    ( Prims.l_and
      ( (Memory_i_s._modifies (s12_6689 , h1_6690 , h2_6691)) ,
        (Memory_i_s._modifies (s23_6692 , h2_6691 , h3_6693))
      )
    )
    ;
  ensures
    (Memory_i_s._modifies ((Memory_i_s.loc_union (s12_6689 , s23_6692)) , h1_6690 , h3_6693))
    ;
  extern
  ;

function
  Memory_i_s.modifies_goal_directed_trans
  ( s12_7172 : Memory_i_s.loc ,
    h1_7173 : Memory_i_s.mem ,
    h2_7174 : Memory_i_s.mem ,
    s13_7175 : Memory_i_s.loc ,
    h3_7176 : Memory_i_s.mem
  )
  :
  (uu____7177 : Prims.unit)
  requires
    ( Prims.l_and
      (
        ( Prims.l_and
          ( (Memory_i_s._modifies (s12_7172 , h1_7173 , h2_7174)) ,
            (Memory_i_s.modifies_goal_directed (s13_7175 , h2_7174 , h3_7176))
          )
        )
          ,
        (Memory_i_s.loc_includes (s13_7175 , s12_7172))
      )
    )
    ;
  ensures (Memory_i_s._modifies (s13_7175 , h1_7173 , h3_7176)) ;
  extern
  ;

function
  Memory_i_s.modifies_goal_directed_trans2
  ( s12_7678 : Memory_i_s.loc ,
    h1_7679 : Memory_i_s.mem ,
    h2_7680 : Memory_i_s.mem ,
    s13_7681 : Memory_i_s.loc ,
    h3_7682 : Memory_i_s.mem
  )
  :
  (uu____7683 : Prims.unit)
  requires
    ( Prims.l_and
      (
        ( Prims.l_and
          ( (Memory_i_s._modifies (s12_7678 , h1_7679 , h2_7680)) ,
            (Memory_i_s.modifies_goal_directed (s13_7681 , h2_7680 , h3_7682))
          )
        )
          ,
        (Memory_i_s.loc_includes (s13_7681 , s12_7678))
      )
    )
    ;
  ensures (Memory_i_s.modifies_goal_directed (s13_7681 , h1_7679 , h3_7682)) ;
  extern
  ;

unsupported: Memory_i_s.buffer_read //(reason: Memory_i_s.buffer)

unsupported: Memory_i_s.buffer_write //(reason: Memory_i_s.buffer)

const X64.Machine_s.va_qattr : Prims.unit extern ;

const X64.Machine_s.pow2_32 : Prims.int extern ;

const X64.Machine_s.pow2_64 : Prims.int extern ;

const X64.Machine_s.pow2_128 : Prims.int extern ;

type X64.Machine_s.nat64 : Type(0) extern ;

function
  X64.Machine_s.int_to_nat64
  (i_244 : Prims.int)
  :
  (n_133 : X64.Machine_s.nat64)
  ensures
    ( Prims.l_imp
      (
        ( Prims.b2t
          (
            ( Prims.op_AmpAmp
              ( (Prims.op_LessThanOrEqual (0 , i_244)) ,
                (Prims.op_LessThan (i_244 , X64.Machine_s.pow2_64))
              )
            )
          )
        )
          ,
        (Prims.eq2 (Prims.int , i_244 , n_133))
      )
    )
    ;
  extern
  ;

type X64.Machine_s.nat128 : Type(0) extern ;

type X64.Machine_s.quad32 : Type(0) extern ;

type X64.Machine_s.reg : Type(0) extern ;

const X64.Machine_s.Rax : X64.Machine_s.reg extern ;

const X64.Machine_s.Rbx : X64.Machine_s.reg extern ;

const X64.Machine_s.Rcx : X64.Machine_s.reg extern ;

const X64.Machine_s.Rdx : X64.Machine_s.reg extern ;

const X64.Machine_s.Rsi : X64.Machine_s.reg extern ;

const X64.Machine_s.Rdi : X64.Machine_s.reg extern ;

const X64.Machine_s.Rbp : X64.Machine_s.reg extern ;

const X64.Machine_s.Rsp : X64.Machine_s.reg extern ;

const X64.Machine_s.R8 : X64.Machine_s.reg extern ;

const X64.Machine_s.R9 : X64.Machine_s.reg extern ;

const X64.Machine_s.R10 : X64.Machine_s.reg extern ;

const X64.Machine_s.R11 : X64.Machine_s.reg extern ;

const X64.Machine_s.R12 : X64.Machine_s.reg extern ;

const X64.Machine_s.R13 : X64.Machine_s.reg extern ;

const X64.Machine_s.R14 : X64.Machine_s.reg extern ;

const X64.Machine_s.R15 : X64.Machine_s.reg extern ;

unsupported: X64.Machine_s.reg__uu___haseq //(reason: not vale type: (PATTERN (((Prims.hasEq X64.Machine_s.reg))) (Prims.l_imp Prims.l_True (Prims.hasEq X64.Machine_s.reg))))

function X64.Machine_s.uu___is_Rax (projectee_592 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_Rbx (projectee_644 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_Rcx (projectee_696 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_Rdx (projectee_748 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_Rsi (projectee_800 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_Rdi (projectee_852 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_Rbp (projectee_904 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_Rsp (projectee_956 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_R8 (projectee_1008 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_R9 (projectee_1060 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_R10 (projectee_1112 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_R11 (projectee_1164 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_R12 (projectee_1216 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_R13 (projectee_1268 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_R14 (projectee_1320 : X64.Machine_s.reg) : Prims.bool extern ;

function X64.Machine_s.uu___is_R15 (projectee_1372 : X64.Machine_s.reg) : Prims.bool extern ;

type X64.Machine_s.maddr : Type(0) extern ;

function X64.Machine_s.MConst (n_1828 : Prims.int) : X64.Machine_s.maddr extern ;

function
  X64.Machine_s.MReg
  (r_1829 : X64.Machine_s.reg , offset_1830 : Prims.int)
  :
  X64.Machine_s.maddr
  extern
  ;

function
  X64.Machine_s.MIndex
  ( base_1831 : X64.Machine_s.reg ,
    scale_1832 : Prims.int ,
    index_1833 : X64.Machine_s.reg ,
    offset_1834 : Prims.int
  )
  :
  X64.Machine_s.maddr
  extern
  ;

unsupported: X64.Machine_s.maddr__uu___haseq //(reason: not vale type: (PATTERN (((Prims.hasEq X64.Machine_s.maddr))) (Prims.l_imp Prims.l_True (Prims.hasEq X64.Machine_s.maddr))))

function
  X64.Machine_s.uu___is_MConst
  (projectee_1946 : X64.Machine_s.maddr)
  :
  Prims.bool
  extern
  ;

function
  X64.Machine_s.__proj__MConst__item__n
  (projectee_2026 : X64.Machine_s.maddr)
  :
  Prims.int
  requires
    ( let uu____2001 : X64.Machine_s.maddr := projectee_2026 in
      (Prims.b2t ((X64.Machine_s.uu___is_MConst (uu____2001))))
    )
    ;
  extern
  ;

function X64.Machine_s.uu___is_MReg (projectee_2106 : X64.Machine_s.maddr) : Prims.bool extern ;

function
  X64.Machine_s.__proj__MReg__item__r
  (projectee_2201 : X64.Machine_s.maddr)
  :
  X64.Machine_s.reg
  requires
    ( let uu____2176 : X64.Machine_s.maddr := projectee_2201 in
      (Prims.b2t ((X64.Machine_s.uu___is_MReg (uu____2176))))
    )
    ;
  extern
  ;

function
  X64.Machine_s.__proj__MReg__item__offset
  (projectee_2313 : X64.Machine_s.maddr)
  :
  Prims.int
  requires
    ( let uu____2288 : X64.Machine_s.maddr := projectee_2313 in
      (Prims.b2t ((X64.Machine_s.uu___is_MReg (uu____2288))))
    )
    ;
  extern
  ;

function
  X64.Machine_s.uu___is_MIndex
  (projectee_2409 : X64.Machine_s.maddr)
  :
  Prims.bool
  extern
  ;

function
  X64.Machine_s.__proj__MIndex__item__base
  (projectee_2543 : X64.Machine_s.maddr)
  :
  X64.Machine_s.reg
  requires
    ( let uu____2518 : X64.Machine_s.maddr := projectee_2543 in
      (Prims.b2t ((X64.Machine_s.uu___is_MIndex (uu____2518))))
    )
    ;
  extern
  ;

function
  X64.Machine_s.__proj__MIndex__item__scale
  (projectee_2696 : X64.Machine_s.maddr)
  :
  Prims.int
  requires
    ( let uu____2671 : X64.Machine_s.maddr := projectee_2696 in
      (Prims.b2t ((X64.Machine_s.uu___is_MIndex (uu____2671))))
    )
    ;
  extern
  ;

function
  X64.Machine_s.__proj__MIndex__item__index
  (projectee_2849 : X64.Machine_s.maddr)
  :
  X64.Machine_s.reg
  requires
    ( let uu____2824 : X64.Machine_s.maddr := projectee_2849 in
      (Prims.b2t ((X64.Machine_s.uu___is_MIndex (uu____2824))))
    )
    ;
  extern
  ;

function
  X64.Machine_s.__proj__MIndex__item__offset
  (projectee_3002 : X64.Machine_s.maddr)
  :
  Prims.int
  requires
    ( let uu____2977 : X64.Machine_s.maddr := projectee_3002 in
      (Prims.b2t ((X64.Machine_s.uu___is_MIndex (uu____2977))))
    )
    ;
  extern
  ;

type X64.Machine_s.operand : Type(0) extern ;

function X64.Machine_s.OConst (n_3309 : Prims.int) : X64.Machine_s.operand extern ;

function X64.Machine_s.OReg (r_3310 : X64.Machine_s.reg) : X64.Machine_s.operand extern ;

function X64.Machine_s.OMem (m_3311 : X64.Machine_s.maddr) : X64.Machine_s.operand extern ;

unsupported: X64.Machine_s.operand__uu___haseq //(reason: not vale type: (PATTERN (((Prims.hasEq X64.Machine_s.operand))) (Prims.l_imp Prims.l_True (Prims.hasEq X64.Machine_s.operand))))

function
  X64.Machine_s.uu___is_OConst
  (projectee_3373 : X64.Machine_s.operand)
  :
  Prims.bool
  extern
  ;

function
  X64.Machine_s.__proj__OConst__item__n
  (projectee_3453 : X64.Machine_s.operand)
  :
  Prims.int
  requires
    ( let uu____3428 : X64.Machine_s.operand := projectee_3453 in
      (Prims.b2t ((X64.Machine_s.uu___is_OConst (uu____3428))))
    )
    ;
  extern
  ;

function
  X64.Machine_s.uu___is_OReg
  (projectee_3533 : X64.Machine_s.operand)
  :
  Prims.bool
  extern
  ;

function
  X64.Machine_s.__proj__OReg__item__r
  (projectee_3613 : X64.Machine_s.operand)
  :
  X64.Machine_s.reg
  requires
    ( let uu____3588 : X64.Machine_s.operand := projectee_3613 in
      (Prims.b2t ((X64.Machine_s.uu___is_OReg (uu____3588))))
    )
    ;
  extern
  ;

function
  X64.Machine_s.uu___is_OMem
  (projectee_3693 : X64.Machine_s.operand)
  :
  Prims.bool
  extern
  ;

function
  X64.Machine_s.__proj__OMem__item__m
  (projectee_3773 : X64.Machine_s.operand)
  :
  X64.Machine_s.maddr
  requires
    ( let uu____3748 : X64.Machine_s.operand := projectee_3773 in
      (Prims.b2t ((X64.Machine_s.uu___is_OMem (uu____3748))))
    )
    ;
  extern
  ;

type X64.Machine_s.imm8 : Type(0) extern ;

type X64.Machine_s.xmm : Type(0) extern ;

type X64.Machine_s.mov128_op : Type(0) extern ;

function X64.Machine_s.Mov128Xmm (x_4061 : X64.Machine_s.xmm) : X64.Machine_s.mov128_op extern ;

function
  X64.Machine_s.Mov128Mem
  (m_4062 : X64.Machine_s.maddr)
  :
  X64.Machine_s.mov128_op
  extern
  ;

unsupported: X64.Machine_s.mov128_op__uu___haseq //(reason: not vale type: (PATTERN (((Prims.hasEq X64.Machine_s.mov128_op))) (Prims.l_imp Prims.l_True (Prims.hasEq X64.Machine_s.mov128_op))))

function
  X64.Machine_s.uu___is_Mov128Xmm
  (projectee_4112 : X64.Machine_s.mov128_op)
  :
  Prims.bool
  extern
  ;

function
  X64.Machine_s.__proj__Mov128Xmm__item__x
  (projectee_4192 : X64.Machine_s.mov128_op)
  :
  X64.Machine_s.xmm
  requires
    ( let uu____4167 : X64.Machine_s.mov128_op := projectee_4192 in
      (Prims.b2t ((X64.Machine_s.uu___is_Mov128Xmm (uu____4167))))
    )
    ;
  extern
  ;

function
  X64.Machine_s.uu___is_Mov128Mem
  (projectee_4272 : X64.Machine_s.mov128_op)
  :
  Prims.bool
  extern
  ;

function
  X64.Machine_s.__proj__Mov128Mem__item__m
  (projectee_4352 : X64.Machine_s.mov128_op)
  :
  X64.Machine_s.maddr
  requires
    ( let uu____4327 : X64.Machine_s.mov128_op := projectee_4352 in
      (Prims.b2t ((X64.Machine_s.uu___is_Mov128Mem (uu____4327))))
    )
    ;
  extern
  ;

unsupported: X64.Machine_s.precode //(reason: not vale type: (Type 0))

unsupported: X64.Machine_s.Ins //(reason: t_ins#5555)

unsupported: X64.Machine_s.Block //(reason: X64.Machine_s.precode)

unsupported: X64.Machine_s.IfElse //(reason: t_ocmp#5562)

unsupported: X64.Machine_s.While //(reason: t_ocmp#5567)

unsupported: X64.Machine_s.precode__uu___haseq //(reason: Prims.l_Forall)

unsupported: X64.Machine_s.uu___is_Ins //(reason: X64.Machine_s.precode)

unsupported: X64.Machine_s.__proj__Ins__item__ins //(reason: X64.Machine_s.precode)

unsupported: X64.Machine_s.uu___is_Block //(reason: X64.Machine_s.precode)

unsupported: X64.Machine_s.__proj__Block__item__block //(reason: X64.Machine_s.precode)

unsupported: X64.Machine_s.uu___is_IfElse //(reason: X64.Machine_s.precode)

unsupported: X64.Machine_s.__proj__IfElse__item__ifCond //(reason: X64.Machine_s.precode)

unsupported: X64.Machine_s.__proj__IfElse__item__ifTrue //(reason: X64.Machine_s.precode)

unsupported: X64.Machine_s.__proj__IfElse__item__ifFalse //(reason: X64.Machine_s.precode)

unsupported: X64.Machine_s.uu___is_While //(reason: X64.Machine_s.precode)

unsupported: X64.Machine_s.__proj__While__item__whileCond //(reason: X64.Machine_s.precode)

unsupported: X64.Machine_s.__proj__While__item__whileBody //(reason: X64.Machine_s.precode)

function X64.Machine_s.valid_dst (o_10368 : X64.Machine_s.operand) : Prims.bool extern ;

type X64.Machine_s.buffer8 : Type(0) extern ;

type X64.Machine_s.buffer16 : Type(0) extern ;

type X64.Machine_s.buffer32 : Type(0) extern ;

type X64.Machine_s.buffer64 : Type(0) extern ;

type X64.Machine_s.buffer128 : Type(0) extern ;

unsupported: X64.Machine_s.buffer_addr //(reason: Memory_i_s.buffer)

type X64.Machine_s.mem : Type(1) extern ;

function
  X64.Machine_s.valid_mem64
  (ptr_10471 : Prims.int , h_10472 : X64.Machine_s.mem)
  :
  Prims.bool
  extern
  ;

function
  X64.Machine_s.load_mem64
  (ptr_10496 : Prims.int , h_10497 : X64.Machine_s.mem)
  :
  X64.Machine_s.nat64
  extern
  ;

function
  X64.Machine_s.store_mem64
  (ptr_10529 : Prims.int , v_10530 : X64.Machine_s.nat64 , h_10531 : X64.Machine_s.mem)
  :
  X64.Machine_s.mem
  extern
  ;

function
  X64.Machine_s.valid_mem128
  (ptr_10558 : Prims.int , h_10559 : X64.Machine_s.mem)
  :
  Prims.bool
  extern
  ;

function
  X64.Machine_s.load_mem128
  (ptr_10583 : Prims.int , h_10584 : X64.Machine_s.mem)
  :
  X64.Machine_s.quad32
  extern
  ;

function
  X64.Machine_s.store_mem128
  (ptr_10616 : Prims.int , v_10617 : X64.Machine_s.quad32 , m_10618 : X64.Machine_s.mem)
  :
  X64.Machine_s.mem
  extern
  ;

unsupported: X64.Machine_s.lemma_valid_mem64 //(reason: FStar.Seq.Base.length)

unsupported: X64.Machine_s.lemma_load_mem64 //(reason: FStar.Seq.Base.length)

unsupported: X64.Machine_s.lemma_store_mem64 //(reason: FStar.Seq.Base.length)

unsupported: X64.Machine_s.lemma_valid_mem128 //(reason: FStar.Seq.Base.length)

unsupported: X64.Machine_s.lemma_load_mem128 //(reason: FStar.Seq.Base.length)

unsupported: X64.Machine_s.lemma_store_mem128 //(reason: FStar.Seq.Base.length)

unsupported: X64.Machine_s.lemma_store_load_mem64 //(reason: Prims.op_Equality)

unsupported: X64.Machine_s.lemma_frame_store_mem64 //(reason: not vale expression: (let h'#13414 : X64.Machine_s.mem = (X64.Machine_s.store_mem64 i#13410 v#13411 h#13412) in (Prims.l_Forall # Prims.int (fun i'#13415 : Prims.int -> (Prims.l_imp (Prims.l_and (Prims.l_and (Prims.b2t (Prims.op_disEquality # Prims.int i'#13415 i#13410)) (Prims.b2t (X64.Machine_s.valid_mem64 i#13410 h#13412))) (Prims.b2t (X64.Machine_s.valid_mem64 i'#13415 h#13412))) (Prims.b2t (Prims.op_Equality # X64.Machine_s.nat64 (X64.Machine_s.load_mem64 i'#13415 h#13412) (X64.Machine_s.load_mem64 i'#13415 h'#13414))))))))

unsupported: X64.Machine_s.lemma_valid_store_mem64 //(reason: not vale expression: (let h'#13606 : X64.Machine_s.mem = (X64.Machine_s.store_mem64 i#13602 v#13603 h#13604) in (Prims.l_Forall # Prims.int (fun j#13607 : Prims.int -> (Prims.l_iff (Prims.b2t (X64.Machine_s.valid_mem64 j#13607 h#13604)) (Prims.b2t (X64.Machine_s.valid_mem64 j#13607 h'#13606)))))))

unsupported: X64.Machine_s.lemma_store_load_mem128 //(reason: Prims.op_Equality)

unsupported: X64.Machine_s.lemma_frame_store_mem128 //(reason: not vale expression: (let h'#14153 : X64.Machine_s.mem = (X64.Machine_s.store_mem128 i#14149 v#14150 h#14151) in (Prims.l_Forall # Prims.int (fun i'#14154 : Prims.int -> (Prims.l_imp (Prims.l_and (Prims.l_and (Prims.b2t (Prims.op_disEquality # Prims.int i'#14154 i#14149)) (Prims.b2t (X64.Machine_s.valid_mem128 i#14149 h#14151))) (Prims.b2t (X64.Machine_s.valid_mem128 i'#14154 h#14151))) (Prims.b2t (Prims.op_Equality # X64.Machine_s.quad32 (X64.Machine_s.load_mem128 i'#14154 h#14151) (X64.Machine_s.load_mem128 i'#14154 h'#14153))))))))

unsupported: X64.Machine_s.lemma_valid_store_mem128 //(reason: not vale expression: (let h'#14345 : X64.Machine_s.mem = (X64.Machine_s.store_mem128 i#14341 v#14342 h#14343) in (Prims.l_Forall # Prims.int (fun j#14346 : Prims.int -> (Prims.l_iff (Prims.b2t (X64.Machine_s.valid_mem128 j#14346 h#14343)) (Prims.b2t (X64.Machine_s.valid_mem128 j#14346 h'#14345)))))))

type X64.Vale.Xmms_i.quad32 : Type(0) extern ;

const X64.Vale.Xmms_i.t : prop extern ;

unsupported: X64.Vale.Xmms_i.equal //(reason: X64.Vale.Xmms_i.t)

unsupported: X64.Vale.Xmms_i.lemma_equal_intro //(reason: X64.Vale.Xmms_i.t)

unsupported: X64.Vale.Xmms_i.lemma_equal_elim //(reason: X64.Vale.Xmms_i.t)

const X64.Vale.Regs_i.t : prop extern ;

unsupported: X64.Vale.Regs_i.equal //(reason: X64.Vale.Regs_i.t)

unsupported: X64.Vale.Regs_i.lemma_equal_intro //(reason: X64.Vale.Regs_i.t)

unsupported: X64.Vale.Regs_i.lemma_equal_elim //(reason: X64.Vale.Regs_i.t)

unsupported: FStar.Exn.raise //(reason: not vale type: (!! FStar.Pervasives.Exn 'a#101 Prims.l_True (fun r#103 : (uu___39#43558 : (FStar.Pervasives.result 'a#101) {Prims.l_True}) -> (Prims.eq2 # (FStar.Pervasives.result 'a#101) r#103 (FStar.Pervasives.E # 'a#101 e#102)))))

unsupported: FStar.FunctionalExtensionality.efun //(reason: not vale type: (Type 0))

unsupported: FStar.FunctionalExtensionality.feq //(reason: FStar.FunctionalExtensionality.efun)

unsupported: FStar.FunctionalExtensionality.Extensionality //(reason: bad variable index)

unsupported: FStar.FunctionalExtensionality.gfun //(reason: not vale type: (Type 0))

unsupported: FStar.FunctionalExtensionality.gfeq //(reason: FStar.FunctionalExtensionality.gfun)

unsupported: FStar.FunctionalExtensionality.GhostExtensionality //(reason: bad variable index)

unsupported: FStar.Set.set //(reason: not vale type: (Type 0))

unsupported: FStar.Set.equal //(reason: FStar.Set.set)

unsupported: FStar.Set.mem //(reason: a#413)

unsupported: FStar.Set.empty //(reason: FStar.Set.set)

unsupported: FStar.Set.singleton //(reason: a#512)

unsupported: FStar.Set.union //(reason: FStar.Set.set)

unsupported: FStar.Set.intersect //(reason: FStar.Set.set)

unsupported: FStar.Set.complement //(reason: FStar.Set.set)

unsupported: FStar.Set.disjoint //(reason: FStar.Set.set)

unsupported: FStar.Set.subset //(reason: FStar.Set.set)

unsupported: FStar.Set.mem_empty //(reason: a#1578)

unsupported: FStar.Set.mem_singleton //(reason: a#1967)

unsupported: FStar.Set.mem_union //(reason: a#2451)

unsupported: FStar.Set.mem_intersect //(reason: a#2936)

unsupported: FStar.Set.mem_complement //(reason: a#3276)

unsupported: FStar.Set.mem_subset //(reason: FStar.Set.set)

unsupported: FStar.Set.subset_mem //(reason: FStar.Set.set)

unsupported: FStar.Set.lemma_equal_intro //(reason: FStar.Set.set)

unsupported: FStar.Set.lemma_equal_elim //(reason: FStar.Set.set)

unsupported: FStar.Set.lemma_equal_refl //(reason: FStar.Set.set)

unsupported: FStar.Set.disjoint_not_in_both //(reason: FStar.Set.set)

type FStar.Set.eqtype : Type(1) extern ;

unsupported: FStar.Set.as_set' //(reason: a#6410)

unsupported: FStar.Set.as_set //(reason: a#7001)

unsupported: FStar.Set.lemma_disjoint_subset //(reason: FStar.Set.set)

unsupported: FStar.Preorder.relation //(reason: not vale type: (Type 1))

unsupported: FStar.Preorder.predicate //(reason: not vale type: (Type 1))

unsupported: FStar.Preorder.preorder_rel //(reason: FStar.Preorder.relation)

unsupported: FStar.Preorder.preorder //(reason: not vale type: (Type 1))

unsupported: FStar.Preorder.stable //(reason: FStar.Preorder.predicate)

unsupported: FStar.Monotonic.Witnessed.witnessed //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Witnessed.lemma_witnessed_weakening //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Witnessed.lemma_witnessed_constant //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Witnessed.lemma_witnessed_nested //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Witnessed.lemma_witnessed_and //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Witnessed.lemma_witnessed_or //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Witnessed.lemma_witnessed_impl //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Witnessed.lemma_witnessed_forall //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Witnessed.lemma_witnessed_exists //(reason: FStar.Preorder.preorder)

//unsupported: FStar.PropositionalExtensionality.axiom //(reason: not vale expression: (fun p1#172 : Prims.prop -> (Prims.l_Forall # Prims.prop (fun p2#173 : Prims.prop -> (Prims.l_iff (Prims.l_iff p1#172 p2#173) (Prims.eq2 # Prims.prop p1#172 p2#173))))))

function
  FStar.PropositionalExtensionality.apply
  (p1_324 : prop , p2_325 : prop)
  :
  (uu____326 : Prims.unit)
  requires Prims.l_True ;
  ensures
    (Prims.l_iff ((Prims.l_iff (p1_324 , p2_325)) , (Prims.eq2 (prop , p1_324 , p2_325))))
    ;
  extern
  ;

unsupported: FStar.PredicateExtensionality.predicate //(reason: not vale type: (Type 1))

unsupported: FStar.PredicateExtensionality.peq //(reason: FStar.PredicateExtensionality.predicate)

unsupported: FStar.PredicateExtensionality.predicateExtensionality //(reason: FStar.PredicateExtensionality.predicate)

unsupported: FStar.TSet.set //(reason: not vale type: (Type 1))

unsupported: FStar.TSet.equal //(reason: FStar.TSet.set)

unsupported: FStar.TSet.mem //(reason: FStar.TSet.set)

unsupported: FStar.TSet.empty //(reason: FStar.TSet.set)

unsupported: FStar.TSet.singleton //(reason: FStar.TSet.set)

unsupported: FStar.TSet.union //(reason: FStar.TSet.set)

unsupported: FStar.TSet.intersect //(reason: FStar.TSet.set)

unsupported: FStar.TSet.complement //(reason: FStar.TSet.set)

unsupported: FStar.TSet.subset //(reason: FStar.TSet.set)

unsupported: FStar.TSet.mem_empty //(reason: FStar.TSet.mem)

unsupported: FStar.TSet.mem_singleton //(reason: FStar.TSet.mem)

unsupported: FStar.TSet.mem_union //(reason: FStar.TSet.set)

unsupported: FStar.TSet.mem_intersect //(reason: FStar.TSet.set)

unsupported: FStar.TSet.mem_complement //(reason: FStar.TSet.set)

unsupported: FStar.TSet.mem_subset //(reason: FStar.TSet.set)

unsupported: FStar.TSet.subset_mem //(reason: FStar.TSet.set)

unsupported: FStar.TSet.lemma_equal_intro //(reason: FStar.TSet.set)

unsupported: FStar.TSet.lemma_equal_elim //(reason: FStar.TSet.set)

unsupported: FStar.TSet.lemma_equal_refl //(reason: FStar.TSet.set)

unsupported: FStar.TSet.tset_of_set //(reason: FStar.Set.set)

unsupported: FStar.TSet.lemma_mem_tset_of_set //(reason: FStar.Set.set)

unsupported: FStar.TSet.filter //(reason: FStar.TSet.set)

unsupported: FStar.TSet.lemma_mem_filter //(reason: FStar.TSet.set)

unsupported: FStar.TSet.exists_y_in_s //(reason: FStar.TSet.set)

unsupported: FStar.TSet.map //(reason: FStar.TSet.set)

unsupported: FStar.TSet.lemma_mem_map //(reason: FStar.TSet.set)

unsupported: FStar.TSet.as_set' //(reason: FStar.TSet.set)

unsupported: FStar.Monotonic.Heap.set //(reason: not vale type: (Type 0))

unsupported: FStar.Monotonic.Heap.tset //(reason: not vale type: (Type 1))

type FStar.Monotonic.Heap.heap : Type(1) extern ;

function
  FStar.Monotonic.Heap.equal
  (uu____458 : FStar.Monotonic.Heap.heap , uu____459 : FStar.Monotonic.Heap.heap)
  :
  prop
  extern
  ;

function
  FStar.Monotonic.Heap.equal_extensional
  (h1_631 : FStar.Monotonic.Heap.heap , h2_632 : FStar.Monotonic.Heap.heap)
  :
  (uu____633 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_iff
      ( (FStar.Monotonic.Heap.equal (h1_631 , h2_632)) ,
        (Prims.eq2 (FStar.Monotonic.Heap.heap , h1_631 , h2_632))
      )
    )
    ;
  extern
  ;

const FStar.Monotonic.Heap.emp : FStar.Monotonic.Heap.heap extern ;

unsupported: FStar.Monotonic.Heap.mref //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.addr_of //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.is_mm //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.compare_addrs //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.contains //(reason: FStar.Preorder.preorder)

function
  FStar.Monotonic.Heap.addr_unused_in
  (uu____1366 : Prims.nat , uu____1367 : FStar.Monotonic.Heap.heap)
  :
  prop
  extern
  ;

unsupported: FStar.Monotonic.Heap.unused_in //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.fresh //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.only_t //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.only //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.op_Hat_Plus_Plus //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.op_Plus_Plus_Hat //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.op_Hat_Plus_Hat //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.sel_tot //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.sel //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.upd_tot //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.upd //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.alloc //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.free_mm //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.modifies_t //(reason: FStar.Monotonic.Heap.tset)

//unsupported: FStar.Monotonic.Heap.modifies //(reason: FStar.Monotonic.Heap.set)

function
  FStar.Monotonic.Heap.equal_dom
  (h1_5801 : FStar.Monotonic.Heap.heap , h2_5802 : FStar.Monotonic.Heap.heap)
  :
  prop
  extern
  ;

unsupported: FStar.Monotonic.Heap.lemma_ref_unused_iff_addr_unused //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_contains_implies_used //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_distinct_addrs_distinct_types //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_distinct_addrs_distinct_preorders //(reason: not vale expression: (fun a#9784 : (Type 0) -> (Prims.l_Forall # (FStar.Preorder.preorder a#9784) (fun rel1#9785 : (FStar.Preorder.preorder a#9784) -> (Prims.l_Forall # (FStar.Preorder.preorder a#9784) (fun rel2#9786 : (FStar.Preorder.preorder a#9784) -> (Prims.l_Forall # (FStar.Monotonic.Heap.mref a#9784 rel1#9785) (fun r1#9787 : (FStar.Monotonic.Heap.mref a#9784 rel1#9785) -> (Prims.l_Forall # (FStar.Monotonic.Heap.mref a#9784 rel2#9786) (fun r2#9788 : (FStar.Monotonic.Heap.mref a#9784 rel2#9786) -> (Prims.l_Forall # FStar.Monotonic.Heap.heap (fun h#9789 : FStar.Monotonic.Heap.heap -> (PATTERN (((FStar.Monotonic.Heap.contains # a#9784 # rel1#9785 h#9789 r1#9787) (FStar.Monotonic.Heap.contains # a#9784 # rel2#9786 h#9789 r2#9788))) (Prims.l_imp (Prims.l_and (Prims.l_and (FStar.Monotonic.Heap.contains # a#9784 # rel1#9785 h#9789 r1#9787) (FStar.Monotonic.Heap.contains # a#9784 # rel2#9786 h#9789 r2#9788)) (Prims.l_not (Prims.eq2 # (rel#949 : (FStar.Preorder.relation a#9784) {(Prims.l_or (FStar.Preorder.preorder_rel # a#9784 rel#949) (FStar.Preorder.preorder_rel # a#9784 rel#949))}) rel1#9785 rel2#9786))) (Prims.b2t (Prims.op_disEquality # Prims.nat (FStar.Monotonic.Heap.addr_of # a#9784 # rel1#9785 r1#9787) (FStar.Monotonic.Heap.addr_of # a#9784 # rel2#9786 r2#9788)))))))))))))))))

unsupported: FStar.Monotonic.Heap.lemma_distinct_addrs_distinct_mm //(reason: not vale expression: (fun a#11178 : (Type 0) -> (Prims.l_Forall # PROP (fun b#11179 : (Type 0) -> (Prims.l_Forall # (FStar.Preorder.preorder a#11178) (fun rel1#11180 : (FStar.Preorder.preorder a#11178) -> (Prims.l_Forall # (FStar.Preorder.preorder b#11179) (fun rel2#11181 : (FStar.Preorder.preorder b#11179) -> (Prims.l_Forall # (FStar.Monotonic.Heap.mref a#11178 rel1#11180) (fun r1#11182 : (FStar.Monotonic.Heap.mref a#11178 rel1#11180) -> (Prims.l_Forall # (FStar.Monotonic.Heap.mref b#11179 rel2#11181) (fun r2#11183 : (FStar.Monotonic.Heap.mref b#11179 rel2#11181) -> (Prims.l_Forall # FStar.Monotonic.Heap.heap (fun h#11184 : FStar.Monotonic.Heap.heap -> (PATTERN (((FStar.Monotonic.Heap.contains # a#11178 # rel1#11180 h#11184 r1#11182) (FStar.Monotonic.Heap.contains # b#11179 # rel2#11181 h#11184 r2#11183))) (Prims.l_imp (Prims.l_and (Prims.l_and (FStar.Monotonic.Heap.contains # a#11178 # rel1#11180 h#11184 r1#11182) (FStar.Monotonic.Heap.contains # b#11179 # rel2#11181 h#11184 r2#11183)) (Prims.l_not (Prims.eq2 # Prims.bool (FStar.Monotonic.Heap.is_mm # a#11178 # rel1#11180 r1#11182) (FStar.Monotonic.Heap.is_mm # b#11179 # rel2#11181 r2#11183)))) (Prims.b2t (Prims.op_disEquality # Prims.nat (FStar.Monotonic.Heap.addr_of # a#11178 # rel1#11180 r1#11182) (FStar.Monotonic.Heap.addr_of # b#11179 # rel2#11181 r2#11183)))))))))))))))))))

unsupported: FStar.Monotonic.Heap.lemma_distinct_addrs_unused //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_alloc //(reason: MATCH)

unsupported: FStar.Monotonic.Heap.lemma_free_mm_sel //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_free_mm_contains //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_free_mm_unused //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_sel_same_addr //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_sel_upd1 //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_sel_upd2 //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_mref_injectivity //(reason: not vale type: (u#22237 : Prims.unit {(Prims.l_Forall # PROP (fun a#22704 : (Type 0) -> (Prims.l_Forall # PROP (fun b#22705 : (Type 0) -> (Prims.l_Forall # (FStar.Preorder.preorder a#22704) (fun rel1#22706 : (FStar.Preorder.preorder a#22704) -> (Prims.l_Forall # (FStar.Preorder.preorder b#22705) (fun rel2#22707 : (FStar.Preorder.preorder b#22705) -> (Prims.l_Forall # (FStar.Monotonic.Heap.mref a#22704 rel1#22706) (fun r1#22708 : (FStar.Monotonic.Heap.mref a#22704 rel1#22706) -> (Prims.l_Forall # (FStar.Monotonic.Heap.mref b#22705 rel2#22707) (fun r2#22709 : (FStar.Monotonic.Heap.mref b#22705 rel2#22707) -> (Prims.l_imp (Prims.l_not (Prims.eq2 # PROP a#22704 b#22705)) (Prims.l_not (Prims.eq3 # (FStar.Monotonic.Heap.mref a#22704 rel1#22706) # (FStar.Monotonic.Heap.mref b#22705 rel2#22707) r1#22708 r2#22709)))))))))))))))}))

unsupported: FStar.Monotonic.Heap.lemma_in_dom_emp //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_upd_contains //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_well_typed_upd_contains //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_unused_upd_contains //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_upd_contains_different_addr //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_upd_unused //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_contains_upd_modifies //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_unused_upd_modifies //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_sel_equals_sel_tot_for_contained_refs //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_upd_equals_upd_tot_for_contained_refs //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_modifies_and_equal_dom_sel_diff_addr //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_heap_equality_upd_same_addr //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_heap_equality_cancel_same_mref_upd //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_heap_equality_upd_with_sel //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.lemma_heap_equality_commute_distinct_upds //(reason: FStar.Preorder.preorder)

type FStar.Monotonic.Heap.aref : Type(0) extern ;

const FStar.Monotonic.Heap.dummy_aref : FStar.Monotonic.Heap.aref extern ;

unsupported: FStar.Monotonic.Heap.aref_equal //(reason: true)

unsupported: FStar.Monotonic.Heap.aref_of //(reason: FStar.Preorder.preorder)

function
  FStar.Monotonic.Heap.addr_of_aref
  (a_34802 : FStar.Monotonic.Heap.aref)
  :
  Prims.nat
  extern
  ;

unsupported: FStar.Monotonic.Heap.addr_of_aref_of //(reason: FStar.Preorder.preorder)

function
  FStar.Monotonic.Heap.aref_is_mm
  (uu____35182 : FStar.Monotonic.Heap.aref)
  :
  Prims.bool
  extern
  ;

unsupported: FStar.Monotonic.Heap.is_mm_aref_of //(reason: FStar.Preorder.preorder)

function
  FStar.Monotonic.Heap.aref_unused_in
  (uu____35553 : FStar.Monotonic.Heap.aref , uu____35554 : FStar.Monotonic.Heap.heap)
  :
  prop
  extern
  ;

unsupported: FStar.Monotonic.Heap.unused_in_aref_of //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.contains_aref_unused_in //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.aref_live_at //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.gref_of //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.ref_of //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.aref_live_at_aref_of //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.contains_gref_of //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.aref_of_gref_of //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.addr_of_gref_of //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.is_mm_gref_of //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.unused_in_gref_of //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.sel_ref_of //(reason: FStar.Preorder.preorder)

unsupported: FStar.Monotonic.Heap.upd_ref_of //(reason: FStar.Preorder.preorder)

unsupported: FStar.Heap.trivial_rel //(reason: FStar.Preorder.relation)

unsupported: FStar.Heap.trivial_preorder //(reason: FStar.Preorder.preorder)

function FStar.Heap.ref (a_126 : prop) : prop extern ;

type FStar.ST.gst_pre : Type(1) extern ;

unsupported: FStar.ST.gst_post' //(reason: not vale type: (Type 1))

unsupported: FStar.ST.gst_post //(reason: not vale type: (Type 1))

unsupported: FStar.ST.gst_wp //(reason: not vale type: (Type 1))

unsupported: FStar.ST.lift_div_gst //(reason: Prims.pure_wp)

function
  FStar.ST.heap_rel
  (h1_1592 : FStar.Monotonic.Heap.heap , h2_1593 : FStar.Monotonic.Heap.heap)
  :
  prop
  extern
  ;

unsupported: FStar.ST.gst_get //(reason: not vale type: (!! FStar.ST.GST FStar.Monotonic.Heap.heap (fun p#1678 : (FStar.Pervasives.st_post_h FStar.Monotonic.Heap.heap FStar.Monotonic.Heap.heap) h0#1679 : FStar.Monotonic.Heap.heap -> (p#1678 h0#1679 h0#1679))))

unsupported: FStar.ST.gst_put //(reason: not vale type: (!! FStar.ST.GST Prims.unit (fun p#1756 : (FStar.Pervasives.st_post_h FStar.Monotonic.Heap.heap Prims.unit) h0#1757 : FStar.Monotonic.Heap.heap -> (Prims.l_and (FStar.ST.heap_rel h0#1757 h1#1755) (p#1756 UNIT_VALUE h1#1755)))))

type FStar.ST.heap_predicate : Type(1) extern ;

function FStar.ST.stable (p_1861 : FStar.ST.heap_predicate) : prop extern ;

function
  FStar.ST.witnessed
  (p_1946 : FStar.ST.heap_predicate)
  :
  prop
  requires (let p_1874 : FStar.ST.heap_predicate := p_1946 in (FStar.ST.stable (p_1874))) ;
  extern
  ;

unsupported: FStar.ST.gst_witness //(reason: not vale type: (!! FStar.ST.GST Prims.unit (fun post#2074 : (FStar.Pervasives.st_post_h FStar.Monotonic.Heap.heap Prims.unit) h0#2075 : FStar.Monotonic.Heap.heap -> (Prims.l_and (Prims.l_and (FStar.ST.stable p#2073) (p#2073 h0#2075)) (Prims.l_imp (FStar.ST.witnessed p#2073) (post#2074 UNIT_VALUE h0#2075))))))

unsupported: FStar.ST.gst_recall //(reason: not vale type: (!! FStar.ST.GST Prims.unit (fun post#2187 : (FStar.Pervasives.st_post_h FStar.Monotonic.Heap.heap Prims.unit) h0#2188 : FStar.Monotonic.Heap.heap -> (Prims.l_and (Prims.l_and (FStar.ST.stable p#2186) (FStar.ST.witnessed p#2186)) (Prims.l_imp (p#2186 h0#2188) (post#2187 UNIT_VALUE h0#2188))))))

unsupported: FStar.ST.lemma_functoriality //(reason: not vale expression: (fun h#2361 : FStar.Monotonic.Heap.heap -> (Prims.l_imp ((p#2356 : Tm_refine) h#2361) (q#2222 h#2361))))

type FStar.ST.st_pre : Type(1) extern ;

unsupported: FStar.ST.st_post' //(reason: not vale type: (Type 1))

unsupported: FStar.ST.st_post //(reason: not vale type: (Type 1))

unsupported: FStar.ST.st_wp //(reason: not vale type: (Type 1))

unsupported: FStar.ST.lift_gst_state //(reason: FStar.ST.gst_wp)

unsupported: FStar.ST.contains_pred //(reason: FStar.Preorder.preorder)

unsupported: FStar.ST.mref //(reason: FStar.Preorder.preorder)

unsupported: FStar.ST.recall //(reason: FStar.Preorder.preorder)

unsupported: FStar.ST.alloc //(reason: FStar.Preorder.preorder)

unsupported: FStar.ST.read //(reason: FStar.Preorder.preorder)

unsupported: FStar.ST.write //(reason: FStar.Preorder.preorder)

unsupported: FStar.ST.get //(reason: not vale type: (!! FStar.ST.ST FStar.Monotonic.Heap.heap (fun h#7337 : FStar.Monotonic.Heap.heap -> Prims.l_True) (fun h0#7338 : FStar.Monotonic.Heap.heap h#7339 : FStar.Monotonic.Heap.heap h1#7340 : (uu___38#38974 : FStar.Monotonic.Heap.heap {Prims.l_True}) -> (Prims.l_and (Prims.eq2 # FStar.Monotonic.Heap.heap h0#7338 h1#7340) (Prims.eq2 # FStar.Monotonic.Heap.heap h#7339 h1#7340)))))

unsupported: FStar.ST.op_Bang //(reason: FStar.Preorder.preorder)

unsupported: FStar.ST.op_Colon_Equals //(reason: FStar.Preorder.preorder)

function FStar.ST.ref (a_8459 : prop) : prop extern ;

function
  FStar.ST.modifies_none
  (h0_8511 : FStar.Monotonic.Heap.heap , h1_8512 : FStar.Monotonic.Heap.heap)
  :
  prop
  extern
  ;

type FStar.All.all_pre : Type(1) extern ;

unsupported: FStar.All.all_post' //(reason: not vale type: (Type 1))

unsupported: FStar.All.all_post //(reason: not vale type: (Type 1))

unsupported: FStar.All.all_wp //(reason: not vale type: (Type 1))

unsupported: FStar.All.lift_state_all //(reason: FStar.ST.st_wp)

unsupported: FStar.All.lift_exn_all //(reason: FStar.Pervasives.ex_wp)

unsupported: FStar.All.pipe_right //(reason: not vale type: (!! FStar.All.ML 'b#1766))

unsupported: FStar.All.pipe_left //(reason: not vale type: (!! FStar.All.ML 'b#1837))

unsupported: FStar.All.exit //(reason: not vale type: (!! FStar.All.ML 'a#1869))

unsupported: FStar.All.try_with //(reason: not vale type: (!! FStar.All.ML 'a#1938))

function FStar.All.Failure (uu____1963 : Prims.string) : Prims.exn extern ;

function FStar.All.uu___is_Failure (projectee_1985 : Prims.exn) : Prims.bool extern ;

function
  FStar.All.__proj__Failure__item__uu___
  (projectee_2065 : Prims.exn)
  :
  Prims.string
  requires
    ( let uu____2040 : Prims.exn := projectee_2065 in
      (Prims.b2t ((FStar.All.uu___is_Failure (uu____2040))))
    )
    ;
  extern
  ;

unsupported: FStar.All.failwith //(reason: not vale type: (!! FStar.All.All 'a#2282 (fun h#2284 : FStar.Monotonic.Heap.heap -> Prims.l_True) (fun h#2285 : FStar.Monotonic.Heap.heap a#2286 : (FStar.Pervasives.result 'a#2282) h'#2287 : (uu___41#47206 : FStar.Monotonic.Heap.heap {Prims.l_True}) -> (Prims.l_and (Prims.b2t (FStar.Pervasives.uu___is_Err # 'a#2282 a#2286)) (Prims.eq2 # FStar.Monotonic.Heap.heap h#2285 h'#2287)))))

function Opaque_i.make_opaque #[# a_23 : Type(0)] (uu____24 : a_23) : a_23 extern ;

function
  Opaque_i.reveal_opaque
  #[# a_125 : Type(0)]
  (x_126 : a_125)
  :
  (uu____127 : Prims.unit)
  requires Prims.l_True ;
  ensures (Prims.eq2 (a_125 , x_126 , (Opaque_i.make_opaque (a_125 , x_126)))) ;
  extern
  ;

unsupported: FStar.Map.t //(reason: type parameters must be in outermost position: value#346)

unsupported: FStar.Map.sel //(reason: type parameters must be in outermost position: value#1041)

unsupported: FStar.Map.upd //(reason: type parameters must be in outermost position: value#1121)

//unsupported: FStar.Map.const //(reason: type parameters must be in outermost position: value#1164)

unsupported: FStar.Map.concat //(reason: type parameters must be in outermost position: value#1238)

unsupported: FStar.Map.contains //(reason: type parameters must be in outermost position: value#1292)

unsupported: FStar.Map.restrict //(reason: type parameters must be in outermost position: value#1366)

unsupported: FStar.Map.domain //(reason: type parameters must be in outermost position: value#1417)

unsupported: FStar.Map.lemma_SelUpd1 //(reason: type parameters must be in outermost position: value#3786)

unsupported: FStar.Map.lemma_SelUpd2 //(reason: type parameters must be in outermost position: value#4537)

unsupported: FStar.Map.lemma_SelConst //(reason: type parameters must be in outermost position: value#5070)

unsupported: FStar.Map.lemma_SelRestrict //(reason: type parameters must be in outermost position: value#5723)

unsupported: FStar.Map.lemma_SelConcat1 //(reason: type parameters must be in outermost position: value#6405)

unsupported: FStar.Map.lemma_SelConcat2 //(reason: type parameters must be in outermost position: value#7096)

unsupported: FStar.Map.lemma_InDomUpd1 //(reason: type parameters must be in outermost position: value#7837)

unsupported: FStar.Map.lemma_InDomUpd2 //(reason: type parameters must be in outermost position: value#8589)

unsupported: FStar.Map.lemma_InDomConstMap //(reason: type parameters must be in outermost position: value#9087)

unsupported: FStar.Map.lemma_InDomConcat //(reason: type parameters must be in outermost position: value#9768)

unsupported: FStar.Map.lemma_InDomRestrict //(reason: type parameters must be in outermost position: value#10422)

unsupported: FStar.Map.lemma_ContainsDom //(reason: type parameters must be in outermost position: value#11262)

unsupported: FStar.Map.lemma_UpdDomain //(reason: type parameters must be in outermost position: value#11931)

unsupported: FStar.Map.equal //(reason: type parameters must be in outermost position: value#13579)

unsupported: FStar.Map.lemma_equal_intro //(reason: type parameters must be in outermost position: value#14319)

unsupported: FStar.Map.lemma_equal_elim //(reason: type parameters must be in outermost position: value#14678)

unsupported: FStar.Map.lemma_equal_refl //(reason: type parameters must be in outermost position: value#15043)

unsupported: FStar.Map.const_on //(reason: type parameters must be in outermost position: value#15442)

unsupported: FStar.Map.disjoint_dom //(reason: type parameters must be in outermost position: value#15828)

unsupported: FStar.Map.has_dom //(reason: type parameters must be in outermost position: value#16148)

type X64.Vale.State_i.state : Type(1) extern ;

unsupported: X64.Vale.State_i.Mkstate //(reason: X64.Vale.Regs_i.t)

function
  X64.Vale.State_i.__proj__Mkstate__item__ok
  (projectee_235 : X64.Vale.State_i.state)
  :
  Prims.bool
  extern
  ;

unsupported: X64.Vale.State_i.__proj__Mkstate__item__regs //(reason: X64.Vale.Regs_i.t)

unsupported: X64.Vale.State_i.__proj__Mkstate__item__xmms //(reason: X64.Vale.Xmms_i.t)

function
  X64.Vale.State_i.__proj__Mkstate__item__flags
  (projectee_610 : X64.Vale.State_i.state)
  :
  X64.Machine_s.nat64
  extern
  ;

function
  X64.Vale.State_i.__proj__Mkstate__item__mem
  (projectee_735 : X64.Vale.State_i.state)
  :
  X64.Machine_s.mem
  extern
  ;

function X64.Vale.State_i.reg_to_int (r_1010 : X64.Machine_s.reg) : Prims.int extern ;

function
  X64.Vale.State_i.eval_reg
  (r_1047 : X64.Machine_s.reg , s_1048 : X64.Vale.State_i.state)
  :
  X64.Machine_s.nat64
  extern
  ;

function
  X64.Vale.State_i.eval_xmm
  (x_1091 : X64.Machine_s.xmm , s_1092 : X64.Vale.State_i.state)
  :
  Types_s.quad32
  extern
  ;

function
  X64.Vale.State_i.eval_mem
  (ptr_1140 : Prims.int , s_1141 : X64.Vale.State_i.state)
  :
  X64.Machine_s.nat64
  extern
  ;

function
  X64.Vale.State_i.eval_maddr
  (m_1461 : X64.Machine_s.maddr , s_1462 : X64.Vale.State_i.state)
  :
  Prims.int
  extern
  ;

function X64.Vale.State_i.to_nat64 (i_1614 : Prims.int) : X64.Machine_s.nat64 extern ;

function
  X64.Vale.State_i.eval_operand
  (o_1768 : X64.Machine_s.operand , s_1769 : X64.Vale.State_i.state)
  :
  X64.Machine_s.nat64
  extern
  ;

function
  X64.Vale.State_i.update_reg
  (r_2044 : X64.Machine_s.reg , v_2045 : X64.Machine_s.nat64 , s_2046 : X64.Vale.State_i.state)
  :
  X64.Vale.State_i.state
  extern
  ;

function
  X64.Vale.State_i.update_xmm
  (x_2327 : X64.Machine_s.xmm , v_2328 : Types_s.quad32 , s_2329 : X64.Vale.State_i.state)
  :
  X64.Vale.State_i.state
  extern
  ;

function
  X64.Vale.State_i.update_mem
  (ptr_2489 : Prims.int , v_2490 : X64.Machine_s.nat64 , s_2491 : X64.Vale.State_i.state)
  :
  X64.Vale.State_i.state
  extern
  ;

function
  X64.Vale.State_i.update_operand
  ( o_2700 : X64.Machine_s.operand ,
    v_2701 : X64.Machine_s.nat64 ,
    sM_2702 : X64.Vale.State_i.state
  )
  :
  X64.Vale.State_i.state
  extern
  ;

function
  X64.Vale.State_i.valid_maddr
  (m_2784 : X64.Machine_s.maddr , s_2785 : X64.Vale.State_i.state)
  :
  prop
  extern
  ;

function
  X64.Vale.State_i.valid_operand
  (o_2947 : X64.Machine_s.operand , s_2948 : X64.Vale.State_i.state)
  :
  prop
  extern
  ;

function
  X64.Vale.State_i.state_eq
  (s0_3181 : X64.Vale.State_i.state , s1_3182 : X64.Vale.State_i.state)
  :
  prop
  extern
  ;

type X64.Vale.Decls_i.quad32 : Type(0) extern ;

function X64.Vale.Decls_i.cf (flags_479 : Prims.int) : Prims.bool extern ;

function X64.Vale.Decls_i.overflow (flags_493 : Prims.int) : Prims.bool extern ;

function
  X64.Vale.Decls_i.update_cf
  (flags_514 : Prims.int , new_cf_515 : Prims.bool)
  :
  Prims.int
  extern
  ;

function
  X64.Vale.Decls_i.update_of
  (flags_539 : Prims.int , new_of_540 : Prims.bool)
  :
  Prims.int
  extern
  ;

unsupported: X64.Vale.Decls_i.va_subscript //(reason: type parameters must be in outermost position: b#674)

unsupported: X64.Vale.Decls_i.va_update //(reason: type parameters must be in outermost position: uu___#734)

function
  X64.Vale.Decls_i.va_make_opaque
  #[# uu____789 : Type(0)]
  (uu____790 : uu____789)
  :
  uu____789
  extern
  ;

function
  X64.Vale.Decls_i.va_reveal_opaque
  #[# uu____817 : Type(0)]
  (x_818 : uu____817)
  :
  (uu____819 : Prims.unit)
  requires Prims.l_True ;
  ensures (Prims.eq2 (uu____817 , x_818 , (Opaque_i.make_opaque (uu____817 , x_818)))) ;
  extern
  ;

function
  X64.Vale.Decls_i.va_hd
  #[# uu____842 : Type(0)]
  (projectee_843 : (Prims.list (uu____842)))
  :
  uu____842
  requires
    ( let uu____16040 : (Prims.list (uu____842)) := projectee_843 in
      (Prims.b2t ((Prims.uu___is_Cons (uu____842 , uu____16040))))
    )
    ;
  extern
  ;

unsupported: X64.Vale.Decls_i.va_if //(reason: not vale type: (uu___64#887 : Prims.unit {(Prims.b2t b#1092)}))

type X64.Vale.Decls_i.va_bool : Type(0) extern ;

type X64.Vale.Decls_i.va_int : Type(0) extern ;

type X64.Vale.Decls_i.ins : Type(0) extern ;

type X64.Vale.Decls_i.ocmp : Type(0) extern ;

type X64.Vale.Decls_i.va_code : Type(0) extern ;

type X64.Vale.Decls_i.va_codes : Type(0) extern ;

function
  X64.Vale.Decls_i.va_tl
  (cs_1297 : X64.Vale.Decls_i.va_codes)
  :
  (tl_1298 : X64.Vale.Decls_i.va_codes)
  requires (Prims.b2t ((Prims.uu___is_Cons (X64.Vale.Decls_i.va_code , cs_1297)))) ;
  ensures
    ( Prims.eq2
      ( (Prims.list (X64.Vale.Decls_i.va_code)) ,
        tl_1298 ,
        (Prims.__proj__Cons__item__tl (X64.Vale.Decls_i.va_code , cs_1297))
      )
    )
    ;
  extern
  ;

type X64.Vale.Decls_i.va_state : Type(1) extern ;

type X64.Vale.Decls_i.va_fuel : Type(0) extern ;

type X64.Vale.Decls_i.va_operand : Type(0) extern ;

type X64.Vale.Decls_i.va_operand_opr64 : Type(0) extern ;

type X64.Vale.Decls_i.va_reg_operand : Type(0) extern ;

type X64.Vale.Decls_i.va_operand_reg_opr64 : Type(0) extern ;

type X64.Vale.Decls_i.va_dst_operand : Type(0) extern ;

type X64.Vale.Decls_i.va_operand_dst_opr64 : Type(0) extern ;

type X64.Vale.Decls_i.va_shift_amt : Type(0) extern ;

type X64.Vale.Decls_i.va_operand_shift_amt64 : Type(0) extern ;

type X64.Vale.Decls_i.va_cmp : Type(0) extern ;

type X64.Vale.Decls_i.va_register : Type(0) extern ;

type X64.Vale.Decls_i.va_operand_xmm : Type(0) extern ;

function
  X64.Vale.Decls_i.get_reg
  (o_1399 : X64.Vale.Decls_i.va_reg_operand)
  :
  X64.Machine_s.reg
  extern
  ;

unsupported: X64.Vale.Decls_i.buffer_readable //(reason: Memory_i_s.buffer)

unsupported: X64.Vale.Decls_i.buffer_length //(reason: Memory_i_s.buffer)

unsupported: X64.Vale.Decls_i.buffer64_as_seq //(reason: FStar.Seq.Base.seq)

unsupported: X64.Vale.Decls_i.buffer128_as_seq //(reason: FStar.Seq.Base.seq)

unsupported: X64.Vale.Decls_i.valid_src_addr //(reason: Memory_i_s.buffer)

unsupported: X64.Vale.Decls_i.valid_dst_addr //(reason: Memory_i_s.buffer)

function
  X64.Vale.Decls_i.buffer64_read
  (b_2214 : X64.Machine_s.buffer64 , i_2215 : Prims.int , m_2216 : X64.Machine_s.mem)
  :
  Types_s.nat64
  extern
  ;

function
  X64.Vale.Decls_i.buffer64_write
  ( b_2346 : X64.Machine_s.buffer64 ,
    i_2347 : Prims.int ,
    v_2348 : Types_s.nat64 ,
    m_2349 : X64.Machine_s.mem
  )
  :
  X64.Machine_s.mem
  extern
  ;

function
  X64.Vale.Decls_i.buffer128_read
  (b_2465 : X64.Machine_s.buffer128 , i_2466 : Prims.int , m_2467 : X64.Machine_s.mem)
  :
  X64.Vale.Decls_i.quad32
  extern
  ;

function
  X64.Vale.Decls_i.buffer128_write
  ( b_2597 : X64.Machine_s.buffer128 ,
    i_2598 : Prims.int ,
    v_2599 : X64.Vale.Decls_i.quad32 ,
    m_2600 : X64.Machine_s.mem
  )
  :
  X64.Machine_s.mem
  extern
  ;

function
  X64.Vale.Decls_i.modifies_mem
  (s_2682 : Memory_i_s.loc , h1_2683 : X64.Machine_s.mem , h2_2684 : X64.Machine_s.mem)
  :
  prop
  extern
  ;

unsupported: X64.Vale.Decls_i.loc_buffer //(reason: Memory_i_s.buffer)

function
  X64.Vale.Decls_i.locs_disjoint
  (ls_2748 : (Prims.list (Memory_i_s.loc)))
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.loc_union
  (s1_2792 : Memory_i_s.loc , s2_2793 : Memory_i_s.loc)
  :
  Memory_i_s.loc
  extern
  ;

function
  X64.Vale.Decls_i.va_fuel_default
  (uu____2812 : Prims.unit)
  :
  X64.Vale.Decls_i.va_fuel
  extern
  ;

function
  X64.Vale.Decls_i.va_op_operand_reg
  (r_2832 : X64.Machine_s.reg)
  :
  X64.Vale.Decls_i.va_operand
  extern
  ;

function
  X64.Vale.Decls_i.va_op_xmm_xmm
  (x_2851 : X64.Machine_s.xmm)
  :
  X64.Vale.Decls_i.va_operand_xmm
  extern
  ;

function
  X64.Vale.Decls_i.va_op_opr_reg
  (r_2873 : X64.Machine_s.reg)
  :
  X64.Vale.Decls_i.va_operand
  extern
  ;

function
  X64.Vale.Decls_i.va_op_opr64_reg
  (r_2896 : X64.Machine_s.reg)
  :
  X64.Vale.Decls_i.va_operand
  extern
  ;

function X64.Vale.Decls_i.va_const_operand (n_2912 : Prims.int) : X64.Machine_s.operand extern ;

function X64.Vale.Decls_i.va_const_opr64 (n_2928 : Prims.int) : X64.Machine_s.operand extern ;

function
  X64.Vale.Decls_i.va_const_shift_amt
  (n_2951 : Prims.int)
  :
  X64.Vale.Decls_i.va_shift_amt
  extern
  ;

function
  X64.Vale.Decls_i.va_const_shift_amt64
  (n_2974 : Prims.int)
  :
  X64.Vale.Decls_i.va_shift_amt
  extern
  ;

function
  X64.Vale.Decls_i.va_op_shift_amt_reg
  (r_2997 : X64.Machine_s.reg)
  :
  X64.Vale.Decls_i.va_shift_amt
  extern
  ;

function
  X64.Vale.Decls_i.va_op_shift_amt64_reg
  (r_3020 : X64.Machine_s.reg)
  :
  X64.Vale.Decls_i.va_shift_amt
  extern
  ;

function
  X64.Vale.Decls_i.va_op_cmp_reg
  (r_3043 : X64.Machine_s.reg)
  :
  X64.Vale.Decls_i.va_cmp
  extern
  ;

function X64.Vale.Decls_i.va_const_cmp (n_3066 : Prims.int) : X64.Vale.Decls_i.va_cmp extern ;

function
  X64.Vale.Decls_i.va_coerce_register_to_operand
  (r_3089 : X64.Vale.Decls_i.va_register)
  :
  X64.Vale.Decls_i.va_operand
  extern
  ;

function
  X64.Vale.Decls_i.va_coerce_operand_to_reg_operand
  (o_3123 : X64.Vale.Decls_i.va_operand)
  :
  X64.Vale.Decls_i.va_reg_operand
  requires
    ( let o_3097 : X64.Vale.Decls_i.va_operand := o_3123 in
      (Prims.b2t ((X64.Machine_s.uu___is_OReg (o_3097))))
    )
    ;
  extern
  ;

function
  X64.Vale.Decls_i.va_coerce_dst_operand_to_reg_operand
  (o_3170 : X64.Vale.Decls_i.va_dst_operand)
  :
  X64.Vale.Decls_i.va_reg_operand
  requires
    ( let o_3144 : X64.Vale.Decls_i.va_dst_operand := o_3170 in
      (Prims.b2t ((X64.Machine_s.uu___is_OReg (o_3144))))
    )
    ;
  extern
  ;

function
  X64.Vale.Decls_i.va_coerce_reg_opr64_to_dst_opr64
  (o_3205 : X64.Vale.Decls_i.va_operand_reg_opr64)
  :
  X64.Vale.Decls_i.va_operand_dst_opr64
  extern
  ;

function
  X64.Vale.Decls_i.va_coerce_reg_opr64_to_opr64
  (o_3226 : X64.Vale.Decls_i.va_operand_reg_opr64)
  :
  X64.Vale.Decls_i.va_operand_opr64
  extern
  ;

function
  X64.Vale.Decls_i.va_coerce_operand_to_cmp
  (o_3244 : X64.Vale.Decls_i.va_operand)
  :
  X64.Vale.Decls_i.va_cmp
  extern
  ;

function
  X64.Vale.Decls_i.va_coerce_opr64_to_cmp
  (o_3262 : X64.Vale.Decls_i.va_operand)
  :
  X64.Vale.Decls_i.va_cmp
  extern
  ;

function
  X64.Vale.Decls_i.va_op_register
  (r_3280 : X64.Machine_s.reg)
  :
  X64.Vale.Decls_i.va_register
  extern
  ;

function
  X64.Vale.Decls_i.va_op_reg_oprerand_reg
  (r_3309 : X64.Machine_s.reg)
  :
  X64.Vale.Decls_i.va_reg_operand
  extern
  ;

function
  X64.Vale.Decls_i.va_op_reg_opr64_reg
  (r_3339 : X64.Machine_s.reg)
  :
  X64.Vale.Decls_i.va_reg_operand
  extern
  ;

function
  X64.Vale.Decls_i.va_op_dst_operand_reg
  (r_3362 : X64.Machine_s.reg)
  :
  X64.Vale.Decls_i.va_dst_operand
  extern
  ;

function
  X64.Vale.Decls_i.va_op_dst_opr64_reg
  (r_3385 : X64.Machine_s.reg)
  :
  X64.Vale.Decls_i.va_dst_operand
  extern
  ;

function
  X64.Vale.Decls_i.va_coerce_operand_to_dst_operand
  (o_3404 : X64.Vale.Decls_i.va_operand)
  :
  X64.Vale.Decls_i.va_dst_operand
  extern
  ;

function
  X64.Vale.Decls_i.va_coerce_dst_operand_to_operand
  (o_3422 : X64.Vale.Decls_i.va_dst_operand)
  :
  X64.Vale.Decls_i.va_operand
  extern
  ;

function
  X64.Vale.Decls_i.va_coerce_dst_opr64_to_opr64
  (o_3440 : X64.Vale.Decls_i.va_dst_operand)
  :
  X64.Vale.Decls_i.va_operand
  extern
  ;

function
  X64.Vale.Decls_i.va_opr_code_Mem
  (o_3578 : X64.Machine_s.operand , offset_3579 : Prims.int)
  :
  X64.Machine_s.operand
  extern
  ;

unsupported: X64.Vale.Decls_i.va_opr_lemma_Mem //(reason: X64.Vale.Decls_i.valid_src_addr)

function
  X64.Vale.Decls_i.va_eval_opr64
  (s_4115 : X64.Vale.Decls_i.va_state , o_4116 : X64.Vale.Decls_i.va_operand)
  :
  Types_s.nat64
  extern
  ;

function
  X64.Vale.Decls_i.va_eval_dst_opr64
  (s_4160 : X64.Vale.Decls_i.va_state , o_4161 : X64.Vale.Decls_i.va_dst_operand)
  :
  Types_s.nat64
  extern
  ;

function
  X64.Vale.Decls_i.va_eval_shift_amt64
  (s_4205 : X64.Vale.Decls_i.va_state , o_4206 : X64.Vale.Decls_i.va_shift_amt)
  :
  Types_s.nat64
  extern
  ;

function
  X64.Vale.Decls_i.va_eval_cmp_uint64
  (s_4250 : X64.Vale.Decls_i.va_state , r_4251 : X64.Vale.Decls_i.va_cmp)
  :
  Types_s.nat64
  extern
  ;

function
  X64.Vale.Decls_i.va_eval_reg64
  (s_4295 : X64.Vale.Decls_i.va_state , r_4296 : X64.Vale.Decls_i.va_register)
  :
  Types_s.nat64
  extern
  ;

function
  X64.Vale.Decls_i.va_eval_reg_opr64
  (s_4339 : X64.Vale.Decls_i.va_state , o_4340 : X64.Vale.Decls_i.va_operand)
  :
  Types_s.nat64
  extern
  ;

function
  X64.Vale.Decls_i.va_eval_xmm
  (s_4384 : X64.Vale.Decls_i.va_state , x_4385 : X64.Machine_s.xmm)
  :
  X64.Vale.Decls_i.quad32
  extern
  ;

function
  X64.Vale.Decls_i.va_is_src_opr64
  (o_4418 : X64.Machine_s.operand , s_4419 : X64.Vale.Decls_i.va_state)
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.va_is_dst_opr64
  (o_4516 : X64.Machine_s.operand , s_4517 : X64.Vale.Decls_i.va_state)
  :
  Prims.bool
  extern
  ;

function
  X64.Vale.Decls_i.va_is_dst_dst_opr64
  (o_4557 : X64.Vale.Decls_i.va_dst_operand , s_4558 : X64.Vale.Decls_i.va_state)
  :
  Prims.bool
  extern
  ;

function
  X64.Vale.Decls_i.va_is_src_reg
  (r_4582 : X64.Machine_s.reg , s_4583 : X64.Vale.Decls_i.va_state)
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.va_is_dst_reg
  (r_4605 : X64.Machine_s.reg , s_4606 : X64.Vale.Decls_i.va_state)
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.va_is_src_shift_amt64
  (o_4672 : X64.Machine_s.operand , s_4673 : X64.Vale.Decls_i.va_state)
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.va_is_src_reg_opr64
  (o_4707 : X64.Machine_s.operand , s_4708 : X64.Vale.Decls_i.va_state)
  :
  Prims.bool
  extern
  ;

function
  X64.Vale.Decls_i.va_is_dst_reg_opr64
  (o_4765 : X64.Machine_s.operand , s_4766 : X64.Vale.Decls_i.va_state)
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.va_is_src_xmm
  (x_4794 : X64.Machine_s.xmm , s_4795 : X64.Vale.Decls_i.va_state)
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.va_is_dst_xmm
  (x_4817 : X64.Machine_s.xmm , s_4818 : X64.Vale.Decls_i.va_state)
  :
  prop
  extern
  ;

function X64.Vale.Decls_i.va_get_ok (s_4845 : X64.Vale.Decls_i.va_state) : Prims.bool extern ;

function X64.Vale.Decls_i.va_get_flags (s_4875 : X64.Vale.Decls_i.va_state) : Prims.int extern ;

function
  X64.Vale.Decls_i.va_get_reg
  (r_4913 : X64.Machine_s.reg , s_4914 : X64.Vale.Decls_i.va_state)
  :
  Types_s.nat64
  extern
  ;

function
  X64.Vale.Decls_i.va_get_xmm
  (x_4957 : X64.Machine_s.xmm , s_4958 : X64.Vale.Decls_i.va_state)
  :
  X64.Vale.Decls_i.quad32
  extern
  ;

function
  X64.Vale.Decls_i.va_get_mem
  (s_4986 : X64.Vale.Decls_i.va_state)
  :
  X64.Machine_s.mem
  extern
  ;

function
  X64.Vale.Decls_i.va_upd_ok
  (ok_5070 : Prims.bool , s_5071 : X64.Vale.State_i.state)
  :
  X64.Vale.State_i.state
  extern
  ;

function
  X64.Vale.Decls_i.va_upd_flags
  (flags_5170 : Types_s.nat64 , s_5171 : X64.Vale.State_i.state)
  :
  X64.Vale.State_i.state
  extern
  ;

function
  X64.Vale.Decls_i.va_upd_mem
  (mem_5270 : X64.Machine_s.mem , s_5271 : X64.Vale.State_i.state)
  :
  X64.Vale.State_i.state
  extern
  ;

function
  X64.Vale.Decls_i.va_upd_reg
  (r_5342 : X64.Machine_s.reg , v_5343 : Types_s.nat64 , s_5344 : X64.Vale.State_i.state)
  :
  X64.Vale.State_i.state
  extern
  ;

function
  X64.Vale.Decls_i.va_upd_xmm
  ( x_5412 : X64.Machine_s.xmm ,
    v_5413 : X64.Vale.Decls_i.quad32 ,
    s_5414 : X64.Vale.State_i.state
  )
  :
  X64.Vale.State_i.state
  extern
  ;

function
  X64.Vale.Decls_i.va_update_ok
  (sM_5469 : X64.Vale.Decls_i.va_state , sK_5470 : X64.Vale.Decls_i.va_state)
  :
  X64.Vale.Decls_i.va_state
  extern
  ;

function
  X64.Vale.Decls_i.va_update_flags
  (sM_5520 : X64.Vale.Decls_i.va_state , sK_5521 : X64.Vale.Decls_i.va_state)
  :
  X64.Vale.Decls_i.va_state
  extern
  ;

function
  X64.Vale.Decls_i.va_update_reg
  ( r_5596 : X64.Machine_s.reg ,
    sM_5597 : X64.Vale.Decls_i.va_state ,
    sK_5598 : X64.Vale.Decls_i.va_state
  )
  :
  X64.Vale.Decls_i.va_state
  extern
  ;

function
  X64.Vale.Decls_i.va_update_mem
  (sM_5654 : X64.Vale.Decls_i.va_state , sK_5655 : X64.Vale.Decls_i.va_state)
  :
  X64.Vale.Decls_i.va_state
  extern
  ;

function
  X64.Vale.Decls_i.va_update_xmm
  ( x_5730 : X64.Machine_s.xmm ,
    sM_5731 : X64.Vale.Decls_i.va_state ,
    sK_5732 : X64.Vale.Decls_i.va_state
  )
  :
  X64.Vale.Decls_i.va_state
  extern
  ;

function
  X64.Vale.Decls_i.va_update_operand
  ( o_5909 : X64.Machine_s.operand ,
    sM_5910 : X64.Vale.Decls_i.va_state ,
    sK_5911 : X64.Vale.Decls_i.va_state
  )
  :
  X64.Vale.Decls_i.va_state
  extern
  ;

function
  X64.Vale.Decls_i.va_update_dst_operand
  ( o_5995 : X64.Machine_s.operand ,
    sM_5996 : X64.Vale.Decls_i.va_state ,
    sK_5997 : X64.Vale.Decls_i.va_state
  )
  :
  X64.Vale.Decls_i.va_state
  extern
  ;

function
  X64.Vale.Decls_i.va_update_operand_dst_opr64
  ( o_6065 : X64.Machine_s.operand ,
    sM_6066 : X64.Vale.Decls_i.va_state ,
    sK_6067 : X64.Vale.Decls_i.va_state
  )
  :
  X64.Vale.Decls_i.va_state
  extern
  ;

function
  X64.Vale.Decls_i.va_update_operand_opr64
  ( o_6135 : X64.Machine_s.operand ,
    sM_6136 : X64.Vale.Decls_i.va_state ,
    sK_6137 : X64.Vale.Decls_i.va_state
  )
  :
  X64.Vale.Decls_i.va_state
  extern
  ;

function
  X64.Vale.Decls_i.va_update_register
  ( r_6205 : X64.Machine_s.reg ,
    sM_6206 : X64.Vale.Decls_i.va_state ,
    sK_6207 : X64.Vale.Decls_i.va_state
  )
  :
  X64.Vale.Decls_i.va_state
  extern
  ;

function
  X64.Vale.Decls_i.va_update_operand_reg_opr64
  ( o_6276 : X64.Machine_s.operand ,
    sM_6277 : X64.Vale.Decls_i.va_state ,
    sK_6278 : X64.Vale.Decls_i.va_state
  )
  :
  X64.Vale.Decls_i.va_state
  extern
  ;

function
  X64.Vale.Decls_i.va_update_operand_xmm
  ( x_6358 : X64.Machine_s.xmm ,
    sM_6359 : X64.Vale.Decls_i.va_state ,
    sK_6360 : X64.Vale.Decls_i.va_state
  )
  :
  X64.Vale.Decls_i.va_state
  extern
  ;

type X64.Vale.Decls_i.va_value_opr64 : Type(0) extern ;

type X64.Vale.Decls_i.va_value_dst_opr64 : Type(0) extern ;

type X64.Vale.Decls_i.va_value_reg_opr64 : Type(0) extern ;

type X64.Vale.Decls_i.va_value_xmm : Type(0) extern ;

function
  X64.Vale.Decls_i.va_upd_operand_xmm
  ( x_6429 : X64.Machine_s.xmm ,
    v_6430 : X64.Vale.Decls_i.quad32 ,
    s_6431 : X64.Vale.State_i.state
  )
  :
  X64.Vale.State_i.state
  extern
  ;

function
  X64.Vale.Decls_i.va_upd_operand_dst_opr64
  (o_6595 : X64.Machine_s.operand , v_6596 : Types_s.nat64 , s_6597 : X64.Vale.State_i.state)
  :
  X64.Vale.State_i.state
  extern
  ;

function
  X64.Vale.Decls_i.va_upd_operand_reg_opr64
  (o_6773 : X64.Machine_s.operand , v_6774 : Types_s.nat64 , s_6775 : X64.Vale.State_i.state)
  :
  X64.Vale.State_i.state
  extern
  ;

unsupported: X64.Vale.Decls_i.va_lemma_upd_update //(reason: not vale expression: (fun sK#7415 : X64.Vale.State_i.state -> (Prims.l_Forall # X64.Machine_s.operand (fun o#7416 : X64.Machine_s.operand -> (PATTERN (((X64.Vale.Decls_i.va_update_operand_dst_opr64 o#7416 sM#7413 sK#7415))) (Prims.l_imp (Prims.b2t (X64.Vale.Decls_i.va_is_dst_dst_opr64 o#7416 sK#7415)) (Prims.eq2 # X64.Vale.State_i.state (X64.Vale.Decls_i.va_update_operand_dst_opr64 o#7416 sM#7413 sK#7415) (X64.Vale.Decls_i.va_upd_operand_dst_opr64 o#7416 (X64.Vale.State_i.eval_operand o#7416 sM#7413) sK#7415))))))))

function X64.Vale.Decls_i.va_CNil (uu____7458 : Prims.unit) : X64.Vale.Decls_i.va_codes extern ;

function
  X64.Vale.Decls_i.va_CCons
  (hd_7519 : X64.Vale.Decls_i.va_code , tl_7520 : X64.Vale.Decls_i.va_codes)
  :
  X64.Vale.Decls_i.va_codes
  extern
  ;

function
  X64.Vale.Decls_i.va_Block
  (block_7593 : X64.Vale.Decls_i.va_codes)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

function
  X64.Vale.Decls_i.va_IfElse
  ( ifCond_7706 : X64.Vale.Decls_i.ocmp ,
    ifTrue_7707 : X64.Vale.Decls_i.va_code ,
    ifFalse_7708 : X64.Vale.Decls_i.va_code
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

function
  X64.Vale.Decls_i.va_While
  (whileCond_7802 : X64.Vale.Decls_i.ocmp , whileBody_7803 : X64.Vale.Decls_i.va_code)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

function
  X64.Vale.Decls_i.va_cmp_eq
  (o1_7845 : X64.Vale.Decls_i.va_operand , o2_7846 : X64.Vale.Decls_i.va_operand)
  :
  X64.Vale.Decls_i.ocmp
  extern
  ;

function
  X64.Vale.Decls_i.va_cmp_ne
  (o1_7870 : X64.Vale.Decls_i.va_operand , o2_7871 : X64.Vale.Decls_i.va_operand)
  :
  X64.Vale.Decls_i.ocmp
  extern
  ;

function
  X64.Vale.Decls_i.va_cmp_le
  (o1_7895 : X64.Vale.Decls_i.va_operand , o2_7896 : X64.Vale.Decls_i.va_operand)
  :
  X64.Vale.Decls_i.ocmp
  extern
  ;

function
  X64.Vale.Decls_i.va_cmp_ge
  (o1_7920 : X64.Vale.Decls_i.va_operand , o2_7921 : X64.Vale.Decls_i.va_operand)
  :
  X64.Vale.Decls_i.ocmp
  extern
  ;

function
  X64.Vale.Decls_i.va_cmp_lt
  (o1_7945 : X64.Vale.Decls_i.va_operand , o2_7946 : X64.Vale.Decls_i.va_operand)
  :
  X64.Vale.Decls_i.ocmp
  extern
  ;

function
  X64.Vale.Decls_i.va_cmp_gt
  (o1_7970 : X64.Vale.Decls_i.va_operand , o2_7971 : X64.Vale.Decls_i.va_operand)
  :
  X64.Vale.Decls_i.ocmp
  extern
  ;

unsupported: X64.Vale.Decls_i.va_get_block //(reason: X64.Machine_s.uu___is_Block)

unsupported: X64.Vale.Decls_i.va_get_ifCond //(reason: X64.Machine_s.uu___is_IfElse)

unsupported: X64.Vale.Decls_i.va_get_ifTrue //(reason: X64.Machine_s.uu___is_IfElse)

unsupported: X64.Vale.Decls_i.va_get_ifFalse //(reason: X64.Machine_s.uu___is_IfElse)

unsupported: X64.Vale.Decls_i.va_get_whileCond //(reason: X64.Machine_s.uu___is_While)

unsupported: X64.Vale.Decls_i.va_get_whileBody //(reason: X64.Machine_s.uu___is_While)

unsupported: X64.Vale.Decls_i.map //(reason: type parameters must be in outermost position: value#8643)

unsupported: X64.Vale.Decls_i.op_String_Access //(reason: type parameters must be in outermost position: uu___#8678)

unsupported: X64.Vale.Decls_i.op_String_Assignment //(reason: type parameters must be in outermost position: uu___#8738)

unsupported: X64.Vale.Decls_i.buffers_readable //(reason: Memory_i_s.buffer)

function
  X64.Vale.Decls_i.modifies_buffer
  (b_9307 : X64.Machine_s.buffer64 , h1_9308 : X64.Machine_s.mem , h2_9309 : X64.Machine_s.mem)
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.modifies_buffer_2
  ( b1_9458 : X64.Machine_s.buffer64 ,
    b2_9459 : X64.Machine_s.buffer64 ,
    h1_9460 : X64.Machine_s.mem ,
    h2_9461 : X64.Machine_s.mem
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.modifies_buffer128
  ( b_9566 : X64.Machine_s.buffer128 ,
    h1_9567 : X64.Machine_s.mem ,
    h2_9568 : X64.Machine_s.mem
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.modifies_buffer128_2
  ( b1_9717 : X64.Machine_s.buffer128 ,
    b2_9718 : X64.Machine_s.buffer128 ,
    h1_9719 : X64.Machine_s.mem ,
    h2_9720 : X64.Machine_s.mem
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.validSrcAddrs64
  ( m_9971 : X64.Machine_s.mem ,
    addr_9972 : Prims.int ,
    b_9973 : X64.Machine_s.buffer64 ,
    len_9974 : Prims.int
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.validDstAddrs64
  ( m_10026 : X64.Machine_s.mem ,
    addr_10027 : Prims.int ,
    b_10028 : X64.Machine_s.buffer64 ,
    len_10029 : Prims.int
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.validSrcAddrs128
  ( m_10259 : X64.Machine_s.mem ,
    addr_10260 : Prims.int ,
    b_10261 : X64.Machine_s.buffer128 ,
    len_10262 : Prims.int
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.validDstAddrs128
  ( m_10509 : X64.Machine_s.mem ,
    addr_10510 : Prims.int ,
    b_10511 : X64.Machine_s.buffer128 ,
    len_10512 : Prims.int
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.valid_stack_slots
  ( m_10871 : X64.Machine_s.mem ,
    rsp_10872 : Prims.int ,
    b_10873 : X64.Machine_s.buffer64 ,
    num_slots_10874 : Prims.int
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.modifies_buffer_specific128
  ( b_11535 : X64.Machine_s.buffer128 ,
    h1_11536 : X64.Machine_s.mem ,
    h2_11537 : X64.Machine_s.mem ,
    start_11538 : Prims.nat ,
    last_11539 : Prims.nat
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.modifies_buffer_specific
  ( b_12229 : X64.Machine_s.buffer64 ,
    h1_12230 : X64.Machine_s.mem ,
    h2_12231 : X64.Machine_s.mem ,
    start_12232 : Prims.nat ,
    last_12233 : Prims.nat
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.buffers_disjoint
  (b1_12443 : X64.Machine_s.buffer64 , b2_12444 : X64.Machine_s.buffer64)
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.buffers_disjoint128
  (b1_12634 : X64.Machine_s.buffer128 , b2_12635 : X64.Machine_s.buffer128)
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.buffers3_disjoint128
  ( b1_12938 : X64.Machine_s.buffer128 ,
    b2_12939 : X64.Machine_s.buffer128 ,
    b3_12940 : X64.Machine_s.buffer128
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.eval_code
  ( c_13092 : X64.Vale.Decls_i.va_code ,
    s0_13093 : X64.Vale.Decls_i.va_state ,
    f0_13094 : X64.Vale.Decls_i.va_fuel ,
    sN_13095 : X64.Vale.Decls_i.va_state
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.eval_while_inv
  ( c_13146 : X64.Vale.Decls_i.va_code ,
    s0_13147 : X64.Vale.Decls_i.va_state ,
    fW_13148 : X64.Vale.Decls_i.va_fuel ,
    sW_13149 : X64.Vale.Decls_i.va_state
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.va_state_eq
  (s0_13197 : X64.Vale.Decls_i.va_state , s1_13198 : X64.Vale.Decls_i.va_state)
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.va_require_total
  ( c0_13266 : X64.Vale.Decls_i.va_code ,
    c1_13267 : X64.Vale.Decls_i.va_code ,
    s0_13268 : X64.Vale.Decls_i.va_state
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.va_ensure_total
  ( c0_13371 : X64.Vale.Decls_i.va_code ,
    s0_13372 : X64.Vale.Decls_i.va_state ,
    s1_13373 : X64.Vale.Decls_i.va_state ,
    f1_13374 : X64.Vale.Decls_i.va_fuel
  )
  :
  prop
  extern
  ;

function
  X64.Vale.Decls_i.eval_ocmp
  (s_13422 : X64.Vale.Decls_i.va_state , c_13423 : X64.Vale.Decls_i.ocmp)
  :
  Prims.bool
  extern
  ;

function
  X64.Vale.Decls_i.va_evalCond
  (b_13461 : X64.Vale.Decls_i.ocmp , s_13462 : X64.Vale.Decls_i.va_state)
  :
  Prims.bool
  extern
  ;

function
  X64.Vale.Decls_i.valid_ocmp
  (c_13492 : X64.Vale.Decls_i.ocmp , s_13493 : X64.Vale.Decls_i.va_state)
  :
  Prims.bool
  extern
  ;

function
  X64.Vale.Decls_i.lemma_cmp_eq
  ( s_13767 : X64.Vale.Decls_i.va_state ,
    o1_13768 : X64.Vale.Decls_i.va_operand ,
    o2_13769 : X64.Vale.Decls_i.va_operand
  )
  :
  (uu____13770 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_iff
      (
        ( Prims.b2t
          ( (X64.Vale.Decls_i.eval_ocmp (s_13767 , (X64.Vale.Decls_i.va_cmp_eq (o1_13768 , o2_13769))))
          )
        )
          ,
        ( Prims.eq2
          ( Types_s.nat64 ,
            (X64.Vale.Decls_i.va_eval_opr64 (s_13767 , o1_13768)) ,
            (X64.Vale.Decls_i.va_eval_opr64 (s_13767 , o2_13769))
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: X64.Vale.Decls_i.lemma_cmp_ne //(reason: Prims.op_disEquality)

function
  X64.Vale.Decls_i.lemma_cmp_le
  ( s_14368 : X64.Vale.Decls_i.va_state ,
    o1_14369 : X64.Vale.Decls_i.va_operand ,
    o2_14370 : X64.Vale.Decls_i.va_operand
  )
  :
  (uu____14371 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_iff
      (
        ( Prims.b2t
          ( (X64.Vale.Decls_i.eval_ocmp (s_14368 , (X64.Vale.Decls_i.va_cmp_le (o1_14369 , o2_14370))))
          )
        )
          ,
        ( Prims.b2t
          (
            ( Prims.op_LessThanOrEqual
              ( (X64.Vale.Decls_i.va_eval_opr64 (s_14368 , o1_14369)) ,
                (X64.Vale.Decls_i.va_eval_opr64 (s_14368 , o2_14370))
              )
            )
          )
        )
      )
    )
    ;
  extern
  ;

function
  X64.Vale.Decls_i.lemma_cmp_ge
  ( s_14658 : X64.Vale.Decls_i.va_state ,
    o1_14659 : X64.Vale.Decls_i.va_operand ,
    o2_14660 : X64.Vale.Decls_i.va_operand
  )
  :
  (uu____14661 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_iff
      (
        ( Prims.b2t
          ( (X64.Vale.Decls_i.eval_ocmp (s_14658 , (X64.Vale.Decls_i.va_cmp_ge (o1_14659 , o2_14660))))
          )
        )
          ,
        ( Prims.b2t
          (
            ( Prims.op_GreaterThanOrEqual
              ( (X64.Vale.Decls_i.va_eval_opr64 (s_14658 , o1_14659)) ,
                (X64.Vale.Decls_i.va_eval_opr64 (s_14658 , o2_14660))
              )
            )
          )
        )
      )
    )
    ;
  extern
  ;

function
  X64.Vale.Decls_i.lemma_cmp_lt
  ( s_14948 : X64.Vale.Decls_i.va_state ,
    o1_14949 : X64.Vale.Decls_i.va_operand ,
    o2_14950 : X64.Vale.Decls_i.va_operand
  )
  :
  (uu____14951 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_iff
      (
        ( Prims.b2t
          ( (X64.Vale.Decls_i.eval_ocmp (s_14948 , (X64.Vale.Decls_i.va_cmp_lt (o1_14949 , o2_14950))))
          )
        )
          ,
        ( Prims.b2t
          (
            ( Prims.op_LessThan
              ( (X64.Vale.Decls_i.va_eval_opr64 (s_14948 , o1_14949)) ,
                (X64.Vale.Decls_i.va_eval_opr64 (s_14948 , o2_14950))
              )
            )
          )
        )
      )
    )
    ;
  extern
  ;

function
  X64.Vale.Decls_i.lemma_cmp_gt
  ( s_15238 : X64.Vale.Decls_i.va_state ,
    o1_15239 : X64.Vale.Decls_i.va_operand ,
    o2_15240 : X64.Vale.Decls_i.va_operand
  )
  :
  (uu____15241 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_iff
      (
        ( Prims.b2t
          ( (X64.Vale.Decls_i.eval_ocmp (s_15238 , (X64.Vale.Decls_i.va_cmp_gt (o1_15239 , o2_15240))))
          )
        )
          ,
        ( Prims.b2t
          (
            ( Prims.op_GreaterThan
              ( (X64.Vale.Decls_i.va_eval_opr64 (s_15238 , o1_15239)) ,
                (X64.Vale.Decls_i.va_eval_opr64 (s_15238 , o2_15240))
              )
            )
          )
        )
      )
    )
    ;
  extern
  ;

function
  X64.Vale.Decls_i.lemma_valid_cmp_eq
  ( s_15516 : X64.Vale.Decls_i.va_state ,
    o1_15517 : X64.Vale.Decls_i.va_operand ,
    o2_15518 : X64.Vale.Decls_i.va_operand
  )
  :
  (uu____15519 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_imp
      (
        ( Prims.l_and
          ( (X64.Vale.State_i.valid_operand (o1_15517 , s_15516)) ,
            (X64.Vale.State_i.valid_operand (o2_15518 , s_15516))
          )
        )
          ,
        ( Prims.b2t
          ( (X64.Vale.Decls_i.valid_ocmp ((X64.Vale.Decls_i.va_cmp_eq (o1_15517 , o2_15518)) , s_15516))
          )
        )
      )
    )
    ;
  extern
  ;

function
  X64.Vale.Decls_i.lemma_valid_cmp_ne
  ( s_15791 : X64.Vale.Decls_i.va_state ,
    o1_15792 : X64.Vale.Decls_i.va_operand ,
    o2_15793 : X64.Vale.Decls_i.va_operand
  )
  :
  (uu____15794 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_imp
      (
        ( Prims.l_and
          ( (X64.Vale.State_i.valid_operand (o1_15792 , s_15791)) ,
            (X64.Vale.State_i.valid_operand (o2_15793 , s_15791))
          )
        )
          ,
        ( Prims.b2t
          ( (X64.Vale.Decls_i.valid_ocmp ((X64.Vale.Decls_i.va_cmp_ne (o1_15792 , o2_15793)) , s_15791))
          )
        )
      )
    )
    ;
  extern
  ;

function
  X64.Vale.Decls_i.lemma_valid_cmp_le
  ( s_16066 : X64.Vale.Decls_i.va_state ,
    o1_16067 : X64.Vale.Decls_i.va_operand ,
    o2_16068 : X64.Vale.Decls_i.va_operand
  )
  :
  (uu____16069 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_imp
      (
        ( Prims.l_and
          ( (X64.Vale.State_i.valid_operand (o1_16067 , s_16066)) ,
            (X64.Vale.State_i.valid_operand (o2_16068 , s_16066))
          )
        )
          ,
        ( Prims.b2t
          ( (X64.Vale.Decls_i.valid_ocmp ((X64.Vale.Decls_i.va_cmp_le (o1_16067 , o2_16068)) , s_16066))
          )
        )
      )
    )
    ;
  extern
  ;

function
  X64.Vale.Decls_i.lemma_valid_cmp_ge
  ( s_16341 : X64.Vale.Decls_i.va_state ,
    o1_16342 : X64.Vale.Decls_i.va_operand ,
    o2_16343 : X64.Vale.Decls_i.va_operand
  )
  :
  (uu____16344 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_imp
      (
        ( Prims.l_and
          ( (X64.Vale.State_i.valid_operand (o1_16342 , s_16341)) ,
            (X64.Vale.State_i.valid_operand (o2_16343 , s_16341))
          )
        )
          ,
        ( Prims.b2t
          ( (X64.Vale.Decls_i.valid_ocmp ((X64.Vale.Decls_i.va_cmp_ge (o1_16342 , o2_16343)) , s_16341))
          )
        )
      )
    )
    ;
  extern
  ;

function
  X64.Vale.Decls_i.lemma_valid_cmp_lt
  ( s_16616 : X64.Vale.Decls_i.va_state ,
    o1_16617 : X64.Vale.Decls_i.va_operand ,
    o2_16618 : X64.Vale.Decls_i.va_operand
  )
  :
  (uu____16619 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_imp
      (
        ( Prims.l_and
          ( (X64.Vale.State_i.valid_operand (o1_16617 , s_16616)) ,
            (X64.Vale.State_i.valid_operand (o2_16618 , s_16616))
          )
        )
          ,
        ( Prims.b2t
          ( (X64.Vale.Decls_i.valid_ocmp ((X64.Vale.Decls_i.va_cmp_lt (o1_16617 , o2_16618)) , s_16616))
          )
        )
      )
    )
    ;
  extern
  ;

function
  X64.Vale.Decls_i.lemma_valid_cmp_gt
  ( s_16891 : X64.Vale.Decls_i.va_state ,
    o1_16892 : X64.Vale.Decls_i.va_operand ,
    o2_16893 : X64.Vale.Decls_i.va_operand
  )
  :
  (uu____16894 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_imp
      (
        ( Prims.l_and
          ( (X64.Vale.State_i.valid_operand (o1_16892 , s_16891)) ,
            (X64.Vale.State_i.valid_operand (o2_16893 , s_16891))
          )
        )
          ,
        ( Prims.b2t
          ( (X64.Vale.Decls_i.valid_ocmp ((X64.Vale.Decls_i.va_cmp_gt (o1_16892 , o2_16893)) , s_16891))
          )
        )
      )
    )
    ;
  extern
  ;

function
  X64.Vale.Decls_i.va_compute_merge_total
  (f0_16933 : X64.Vale.Decls_i.va_fuel , fM_16934 : X64.Vale.Decls_i.va_fuel)
  :
  X64.Vale.Decls_i.va_fuel
  extern
  ;

function
  X64.Vale.Decls_i.va_lemma_merge_total
  ( b0_17428 : X64.Vale.Decls_i.va_codes ,
    s0_17429 : X64.Vale.Decls_i.va_state ,
    f0_17430 : X64.Vale.Decls_i.va_fuel ,
    sM_17431 : X64.Vale.Decls_i.va_state ,
    fM_17432 : X64.Vale.Decls_i.va_fuel ,
    sN_17433 : X64.Vale.Decls_i.va_state
  )
  :
  (fN_17434 : X64.Vale.Decls_i.va_fuel)
  requires
    ( Prims.l_and
      (
        ( Prims.l_and
          ( (Prims.b2t ((Prims.uu___is_Cons (X64.Vale.Decls_i.va_code , b0_17428)))) ,
            ( X64.Vale.Decls_i.eval_code
              ( (Prims.__proj__Cons__item__hd (X64.Vale.Decls_i.va_code , b0_17428)) ,
                s0_17429 ,
                f0_17430 ,
                sM_17431
              )
            )
          )
        )
          ,
        ( X64.Vale.Decls_i.eval_code
          (
            ( X64.Vale.Decls_i.va_Block
              ((Prims.__proj__Cons__item__tl (X64.Vale.Decls_i.va_code , b0_17428)))
            )
              ,
            sM_17431 ,
            fM_17432 ,
            sN_17433
          )
        )
      )
    )
    ;
  ensures
    ( Prims.l_and
      (
        ( Prims.eq2
          ( X64.Vale.Decls_i.va_fuel ,
            fN_17434 ,
            (X64.Vale.Decls_i.va_compute_merge_total (f0_17430 , fM_17432))
          )
        )
          ,
        ( X64.Vale.Decls_i.eval_code
          ((X64.Vale.Decls_i.va_Block (b0_17428)) , s0_17429 , fN_17434 , sN_17433)
        )
      )
    )
    ;
  extern
  ;

unsupported: X64.Vale.Decls_i.va_lemma_empty_total //(reason: MATCH)

unsupported: X64.Vale.Decls_i.va_lemma_ifElse_total //(reason: MATCH)

unsupported: X64.Vale.Decls_i.va_lemma_ifElseTrue_total //(reason: X64.Machine_s.IfElse)

unsupported: X64.Vale.Decls_i.va_lemma_ifElseFalse_total //(reason: X64.Machine_s.IfElse)

function
  X64.Vale.Decls_i.va_whileInv_total
  ( b_20378 : X64.Vale.Decls_i.ocmp ,
    c_20379 : X64.Vale.Decls_i.va_code ,
    s0_20380 : X64.Vale.Decls_i.va_state ,
    sN_20381 : X64.Vale.Decls_i.va_state ,
    f0_20382 : X64.Vale.Decls_i.va_fuel
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.Decls_i.va_lemma_while_total //(reason: MATCH)

unsupported: X64.Vale.Decls_i.va_lemma_whileTrue_total //(reason: MATCH)

unsupported: X64.Vale.Decls_i.va_lemma_whileFalse_total //(reason: MATCH)

unsupported: X64.Vale.Decls_i.va_lemma_whileMerge_total //(reason: X64.Machine_s.uu___is_While)

type X64.Vale.Decls_i.printer : Type(0) extern ;

unsupported: X64.Vale.Decls_i.print_string //(reason: not vale type: (!! FStar.All.ML Prims.unit))

unsupported: X64.Vale.Decls_i.print_header //(reason: not vale type: (!! FStar.All.ML Prims.unit))

unsupported: X64.Vale.Decls_i.print_proc //(reason: not vale type: (!! FStar.All.ML Prims.unit))

unsupported: X64.Vale.Decls_i.print_footer //(reason: not vale type: (!! FStar.All.ML Prims.unit))

const X64.Vale.Decls_i.masm : X64.Vale.Decls_i.printer extern ;

const X64.Vale.Decls_i.gcc : X64.Vale.Decls_i.printer extern ;

unsupported: X64.Vale.QuickCode_i.quickProc_wp //(reason: not vale type: (Type 1))

unsupported: X64.Vale.QuickCode_i.k_true //(reason: a#138)

unsupported: X64.Vale.QuickCode_i.t_monotone //(reason: X64.Vale.QuickCode_i.quickProc_wp)

unsupported: X64.Vale.QuickCode_i.t_compute //(reason: X64.Vale.QuickCode_i.quickProc_wp)

unsupported: X64.Vale.QuickCode_i.t_ensure //(reason: X64.Vale.QuickCode_i.quickProc_wp)

unsupported: X64.Vale.QuickCode_i.t_proof //(reason: X64.Vale.QuickCode_i.quickProc_wp)

unsupported: X64.Vale.QuickCode_i.quickCode //(reason: not vale type: (Type 1))

unsupported: X64.Vale.QuickCode_i.QProc //(reason: X64.Vale.QuickCode_i.quickProc_wp)

unsupported: X64.Vale.QuickCode_i.uu___is_QProc //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCode_i.__proj__QProc__item__c //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCode_i.__proj__QProc__item__wp //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCode_i.__proj__QProc__item__monotone //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCode_i.__proj__QProc__item__compute //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCode_i.__proj__QProc__item__proof //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCode_i.va_quickCode //(reason: not vale type: (Type 1))

unsupported: X64.Vale.QuickCode_i.va_QProc //(reason: X64.Vale.QuickCode_i.quickProc_wp)

type X64.Vale.QuickCodes_i.code : Type(0) extern ;

type X64.Vale.QuickCodes_i.codes : Type(0) extern ;

type X64.Vale.QuickCodes_i.fuel : Type(0) extern ;

function
  X64.Vale.QuickCodes_i.eval
  ( c_605 : X64.Vale.Decls_i.va_code ,
    s0_606 : X64.Vale.Decls_i.va_state ,
    f0_607 : X64.Vale.Decls_i.va_fuel ,
    sN_608 : X64.Vale.Decls_i.va_state
  )
  :
  prop
  extern
  ;

function
  X64.Vale.QuickCodes_i.labeled_wrap
  (r_680 : Prims.range , msg_681 : Prims.string , p_682 : prop)
  :
  prop
  extern
  ;

function
  X64.Vale.QuickCodes_i.label
  (r_850 : Prims.range , msg_851 : Prims.string , p_852 : prop)
  :
  (q_853 : prop)
  requires Prims.l_True ;
  ensures (Prims.l_iff (q_853 , p_852)) ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.lemma_label_bool
  (r_1090 : Prims.range , msg_1091 : Prims.string , b_1092 : Prims.bool)
  :
  (uu____1093 : Prims.unit)
  requires (X64.Vale.QuickCodes_i.label (r_1090 , msg_1091 , (Prims.b2t (b_1092)))) ;
  ensures (Prims.b2t (b_1092)) ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.precedes_wrap
  (a_1168 : Prims.lex_t , b_1169 : Prims.lex_t)
  :
  prop
  extern
  ;

function
  X64.Vale.QuickCodes_i.lexCons
  #[# a_1250 : Type(0)]
  (h_1251 : a_1250 , t_1252 : Prims.lex_t)
  :
  Prims.lex_t
  extern
  ;

function
  X64.Vale.QuickCodes_i.if_code
  ( b_1349 : Prims.bool ,
    c1_1350 : X64.Vale.QuickCodes_i.code ,
    c2_1351 : X64.Vale.QuickCodes_i.code
  )
  :
  X64.Vale.QuickCodes_i.code
  extern
  ;

unsupported: X64.Vale.QuickCodes_i.quickCodes //(reason: not vale type: (Type 1))

unsupported: X64.Vale.QuickCodes_i.QEmpty //(reason: a#2756)

unsupported: X64.Vale.QuickCodes_i.QSeq //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.QBind //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.QGetState //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.QPURE //(reason: not vale type: (!! Prims.PURE Prims.unit pre#2784))

unsupported: X64.Vale.QuickCodes_i.QLemma //(reason: not vale type: (!! Prims.Lemma Prims.unit pre#2794 (fun uu___#2799 : (Prims.squash pre#2794) -> post#2795)))

unsupported: X64.Vale.QuickCodes_i.uu___is_QEmpty //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QEmpty__item___0 //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.uu___is_QSeq //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QSeq__item__b //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QSeq__item__c //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QSeq__item__cs //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QSeq__item__r //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QSeq__item__msg //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QSeq__item___5 //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QSeq__item___6 //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.uu___is_QBind //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QBind__item__b //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QBind__item__c //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QBind__item__cs //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QBind__item__r //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QBind__item__msg //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QBind__item___5 //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QBind__item___6 //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.uu___is_QGetState //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QGetState__item__cs //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QGetState__item___1 //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.uu___is_QPURE //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QPURE__item__cs //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QPURE__item__r //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QPURE__item__msg //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QPURE__item__pre //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QPURE__item___4 //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QPURE__item___5 //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.uu___is_QLemma //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QLemma__item__cs //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QLemma__item__r //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QLemma__item__msg //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QLemma__item__pre //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QLemma__item__post //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QLemma__item___5 //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.__proj__QLemma__item___6 //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.qPURE //(reason: not vale type: (!! Prims.PURE Prims.unit pre#25670))

unsupported: X64.Vale.QuickCodes_i.wp_proc //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.wp_Seq_t //(reason: not vale type: (Type 1))

unsupported: X64.Vale.QuickCodes_i.wp_Bind_t //(reason: not vale type: (Type 1))

const X64.Vale.QuickCodes_i.range1 : Prims.range extern ;

type X64.Vale.QuickCodes_i.guard_false : Type(0) extern ;

unsupported: X64.Vale.QuickCodes_i.wp //(reason: X64.Machine_s.precode)

unsupported: X64.Vale.QuickCodes_i.wp_monotone //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.wp_compute //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.wp_sound //(reason: MATCH)

function
  X64.Vale.QuickCodes_i.block
  (block_46061 : X64.Vale.Decls_i.va_codes)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.QuickCodes_i.wp_block //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.qblock_monotone //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.qblock_compute //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.qblock_proof //(reason: MATCH)

unsupported: X64.Vale.QuickCodes_i.qblock //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.wp_InlineIf //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.qInlineIf_monotone //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.qInlineIf_compute //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.qInlineIf_proof //(reason: MATCH)

unsupported: X64.Vale.QuickCodes_i.qInlineIf //(reason: X64.Vale.QuickCode_i.quickCode)

type X64.Vale.QuickCodes_i.cmp : Type(0) extern ;

function
  X64.Vale.QuickCodes_i.Cmp_eq
  (_0_56786 : X64.Machine_s.operand , _1_56787 : X64.Machine_s.operand)
  :
  X64.Vale.QuickCodes_i.cmp
  extern
  ;

function
  X64.Vale.QuickCodes_i.Cmp_ne
  (_0_56788 : X64.Machine_s.operand , _1_56789 : X64.Machine_s.operand)
  :
  X64.Vale.QuickCodes_i.cmp
  extern
  ;

function
  X64.Vale.QuickCodes_i.Cmp_le
  (_0_56790 : X64.Machine_s.operand , _1_56791 : X64.Machine_s.operand)
  :
  X64.Vale.QuickCodes_i.cmp
  extern
  ;

function
  X64.Vale.QuickCodes_i.Cmp_ge
  (_0_56792 : X64.Machine_s.operand , _1_56793 : X64.Machine_s.operand)
  :
  X64.Vale.QuickCodes_i.cmp
  extern
  ;

function
  X64.Vale.QuickCodes_i.Cmp_lt
  (_0_56794 : X64.Machine_s.operand , _1_56795 : X64.Machine_s.operand)
  :
  X64.Vale.QuickCodes_i.cmp
  extern
  ;

function
  X64.Vale.QuickCodes_i.Cmp_gt
  (_0_56796 : X64.Machine_s.operand , _1_56797 : X64.Machine_s.operand)
  :
  X64.Vale.QuickCodes_i.cmp
  extern
  ;

unsupported: X64.Vale.QuickCodes_i.cmp__uu___haseq //(reason: not vale type: (PATTERN (((Prims.hasEq X64.Vale.QuickCodes_i.cmp))) (Prims.l_imp Prims.l_True (Prims.hasEq X64.Vale.QuickCodes_i.cmp))))

function
  X64.Vale.QuickCodes_i.uu___is_Cmp_eq
  (projectee_56961 : X64.Vale.QuickCodes_i.cmp)
  :
  Prims.bool
  extern
  ;

function
  X64.Vale.QuickCodes_i.__proj__Cmp_eq__item___0
  (projectee_57056 : X64.Vale.QuickCodes_i.cmp)
  :
  X64.Machine_s.operand
  requires
    ( let uu____57031 : X64.Vale.QuickCodes_i.cmp := projectee_57056 in
      (Prims.b2t ((X64.Vale.QuickCodes_i.uu___is_Cmp_eq (uu____57031))))
    )
    ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.__proj__Cmp_eq__item___1
  (projectee_57168 : X64.Vale.QuickCodes_i.cmp)
  :
  X64.Machine_s.operand
  requires
    ( let uu____57143 : X64.Vale.QuickCodes_i.cmp := projectee_57168 in
      (Prims.b2t ((X64.Vale.QuickCodes_i.uu___is_Cmp_eq (uu____57143))))
    )
    ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.uu___is_Cmp_ne
  (projectee_57264 : X64.Vale.QuickCodes_i.cmp)
  :
  Prims.bool
  extern
  ;

function
  X64.Vale.QuickCodes_i.__proj__Cmp_ne__item___0
  (projectee_57359 : X64.Vale.QuickCodes_i.cmp)
  :
  X64.Machine_s.operand
  requires
    ( let uu____57334 : X64.Vale.QuickCodes_i.cmp := projectee_57359 in
      (Prims.b2t ((X64.Vale.QuickCodes_i.uu___is_Cmp_ne (uu____57334))))
    )
    ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.__proj__Cmp_ne__item___1
  (projectee_57471 : X64.Vale.QuickCodes_i.cmp)
  :
  X64.Machine_s.operand
  requires
    ( let uu____57446 : X64.Vale.QuickCodes_i.cmp := projectee_57471 in
      (Prims.b2t ((X64.Vale.QuickCodes_i.uu___is_Cmp_ne (uu____57446))))
    )
    ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.uu___is_Cmp_le
  (projectee_57567 : X64.Vale.QuickCodes_i.cmp)
  :
  Prims.bool
  extern
  ;

function
  X64.Vale.QuickCodes_i.__proj__Cmp_le__item___0
  (projectee_57662 : X64.Vale.QuickCodes_i.cmp)
  :
  X64.Machine_s.operand
  requires
    ( let uu____57637 : X64.Vale.QuickCodes_i.cmp := projectee_57662 in
      (Prims.b2t ((X64.Vale.QuickCodes_i.uu___is_Cmp_le (uu____57637))))
    )
    ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.__proj__Cmp_le__item___1
  (projectee_57774 : X64.Vale.QuickCodes_i.cmp)
  :
  X64.Machine_s.operand
  requires
    ( let uu____57749 : X64.Vale.QuickCodes_i.cmp := projectee_57774 in
      (Prims.b2t ((X64.Vale.QuickCodes_i.uu___is_Cmp_le (uu____57749))))
    )
    ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.uu___is_Cmp_ge
  (projectee_57870 : X64.Vale.QuickCodes_i.cmp)
  :
  Prims.bool
  extern
  ;

function
  X64.Vale.QuickCodes_i.__proj__Cmp_ge__item___0
  (projectee_57965 : X64.Vale.QuickCodes_i.cmp)
  :
  X64.Machine_s.operand
  requires
    ( let uu____57940 : X64.Vale.QuickCodes_i.cmp := projectee_57965 in
      (Prims.b2t ((X64.Vale.QuickCodes_i.uu___is_Cmp_ge (uu____57940))))
    )
    ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.__proj__Cmp_ge__item___1
  (projectee_58077 : X64.Vale.QuickCodes_i.cmp)
  :
  X64.Machine_s.operand
  requires
    ( let uu____58052 : X64.Vale.QuickCodes_i.cmp := projectee_58077 in
      (Prims.b2t ((X64.Vale.QuickCodes_i.uu___is_Cmp_ge (uu____58052))))
    )
    ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.uu___is_Cmp_lt
  (projectee_58173 : X64.Vale.QuickCodes_i.cmp)
  :
  Prims.bool
  extern
  ;

function
  X64.Vale.QuickCodes_i.__proj__Cmp_lt__item___0
  (projectee_58268 : X64.Vale.QuickCodes_i.cmp)
  :
  X64.Machine_s.operand
  requires
    ( let uu____58243 : X64.Vale.QuickCodes_i.cmp := projectee_58268 in
      (Prims.b2t ((X64.Vale.QuickCodes_i.uu___is_Cmp_lt (uu____58243))))
    )
    ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.__proj__Cmp_lt__item___1
  (projectee_58380 : X64.Vale.QuickCodes_i.cmp)
  :
  X64.Machine_s.operand
  requires
    ( let uu____58355 : X64.Vale.QuickCodes_i.cmp := projectee_58380 in
      (Prims.b2t ((X64.Vale.QuickCodes_i.uu___is_Cmp_lt (uu____58355))))
    )
    ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.uu___is_Cmp_gt
  (projectee_58476 : X64.Vale.QuickCodes_i.cmp)
  :
  Prims.bool
  extern
  ;

function
  X64.Vale.QuickCodes_i.__proj__Cmp_gt__item___0
  (projectee_58571 : X64.Vale.QuickCodes_i.cmp)
  :
  X64.Machine_s.operand
  requires
    ( let uu____58546 : X64.Vale.QuickCodes_i.cmp := projectee_58571 in
      (Prims.b2t ((X64.Vale.QuickCodes_i.uu___is_Cmp_gt (uu____58546))))
    )
    ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.__proj__Cmp_gt__item___1
  (projectee_58683 : X64.Vale.QuickCodes_i.cmp)
  :
  X64.Machine_s.operand
  requires
    ( let uu____58658 : X64.Vale.QuickCodes_i.cmp := projectee_58683 in
      (Prims.b2t ((X64.Vale.QuickCodes_i.uu___is_Cmp_gt (uu____58658))))
    )
    ;
  extern
  ;

function
  X64.Vale.QuickCodes_i.cmp_to_ocmp
  (c_59049 : X64.Vale.QuickCodes_i.cmp)
  :
  X64.Vale.Decls_i.ocmp
  extern
  ;

function
  X64.Vale.QuickCodes_i.valid_cmp
  (c_59650 : X64.Vale.QuickCodes_i.cmp , s_59651 : X64.Vale.State_i.state)
  :
  prop
  extern
  ;

function
  X64.Vale.QuickCodes_i.eval_cmp
  (s_60399 : X64.Vale.State_i.state , c_60400 : X64.Vale.QuickCodes_i.cmp)
  :
  Prims.bool
  extern
  ;

unsupported: X64.Vale.QuickCodes_i.wp_If //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.qIf_monotone //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.qIf_compute //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.qIf_proof //(reason: MATCH)

unsupported: X64.Vale.QuickCodes_i.qIf //(reason: X64.Vale.QuickCode_i.quickCode)

function X64.Vale.QuickCodes_i.tAssertLemma (p_67242 : prop) : prop extern ;

unsupported: X64.Vale.QuickCodes_i.qAssertLemma //(reason: X64.Vale.QuickCodes_i.tAssertLemma)

unsupported: X64.Vale.QuickCodes_i.qAssert //(reason: X64.Vale.QuickCodes_i.quickCodes)

function X64.Vale.QuickCodes_i.tAssumeLemma (p_67684 : prop) : prop extern ;

unsupported: X64.Vale.QuickCodes_i.qAssumeLemma //(reason: X64.Vale.QuickCodes_i.tAssumeLemma)

unsupported: X64.Vale.QuickCodes_i.qAssume //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.tAssertByLemma //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.qAssertByLemma //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.qAssertBy //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.wp_sound_code //(reason: MATCH)

unsupported: X64.Vale.QuickCodes_i.regs_match //(reason: X64.Vale.Regs_i.t)

unsupported: X64.Vale.QuickCodes_i.all_regs_match //(reason: X64.Vale.Regs_i.t)

unsupported: X64.Vale.QuickCodes_i.xmms_match //(reason: X64.Vale.Xmms_i.t)

unsupported: X64.Vale.QuickCodes_i.all_xmms_match //(reason: X64.Vale.Xmms_i.t)

function
  X64.Vale.QuickCodes_i.va_state_match
  (s0_73404 : X64.Vale.State_i.state , s1_73405 : X64.Vale.State_i.state)
  :
  (b_73406 : prop)
  requires Prims.l_True ;
  ensures (Prims.l_imp (b_73406 , (X64.Vale.State_i.state_eq (s0_73404 , s1_73405)))) ;
  extern
  ;

unsupported: X64.Vale.QuickCodes_i.wp_sound_pre //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.wp_sound_post //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.wp_sound_wrap //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.wp_sound_code_pre //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.wp_sound_code_post //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.wp_sound_code_wrap //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.wp_final_k //(reason: a#79537)

unsupported: X64.Vale.QuickCodes_i.wp_wrap //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.wp_wrap_code //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.wp_GHOST //(reason: a#83128)

unsupported: X64.Vale.QuickCodes_i.wp_run //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.wp_run_code //(reason: X64.Vale.QuickCode_i.quickCode)

const X64.Vale.QuickCodes_i.normal_steps : (Prims.list (Prims.string)) extern ;

function X64.Vale.QuickCodes_i.normal (x_85721 : prop) : prop extern ;

unsupported: X64.Vale.QuickCodes_i.wp_sound_norm //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: X64.Vale.QuickCodes_i.wp_sound_code_norm //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.Vale.QuickCodes_i.wp_run_norm //(reason: X64.Vale.QuickCodes_i.quickCodes)

unsupported: FStar.Math.Lib.lemma_div_def //(reason: Prims.op_Equality)

function
  FStar.Math.Lib.slash_decr_axiom
  (a_910 : Prims.nat , b_911 : Prims.pos)
  :
  (uu____912 : Prims.unit)
  requires Prims.l_True ;
  ensures
    (Prims.b2t ((Prims.op_LessThanOrEqual ((Prims.op_Division (a_910 , b_911)) , a_910))))
    ;
  extern
  ;

unsupported: FStar.Math.Lib.slash_star_axiom //(reason: Prims.op_Equality)

function FStar.Math.Lib.log_2 (x_1641 : Prims.pos) : Prims.nat extern ;

function FStar.Math.Lib.powx (x_1806 : Prims.int , n_1807 : Prims.nat) : Prims.int extern ;

unsupported: FStar.Math.Lib.abs //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lib.max //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lib.min //(reason: Prims.op_Equality)

function
  FStar.Math.Lib.div
  (a_3104 : Prims.int , b_3105 : Prims.pos)
  :
  (c_2998 : Prims.int)
  ensures
    ( Prims.l_and
      (
        ( Prims.l_imp
          ( (Prims.b2t ((Prims.op_LessThan (a_3104 , 0)))) ,
            (Prims.b2t ((Prims.op_LessThan (c_2998 , 0))))
          )
        )
          ,
        ( Prims.l_imp
          ( (Prims.b2t ((Prims.op_GreaterThanOrEqual (a_3104 , 0)))) ,
            (Prims.b2t ((Prims.op_GreaterThanOrEqual (c_2998 , 0))))
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: FStar.Math.Lib.div_non_eucl //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lib.shift_left //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lib.arithmetic_shift_right //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lib.signed_modulo //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lib.op_Plus_Percent //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lib.powx_lemma1 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lib.powx_lemma2 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lib.abs_mul_lemma //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lib.signed_modulo_property //(reason: FStar.Math.Lib.abs)

unsupported: FStar.Math.Lib.div_non_eucl_decr_lemma //(reason: FStar.Math.Lib.abs)

unsupported: FStar.Math.Lib.div_non_eucl_bigger_denom_lemma //(reason: FStar.Math.Lib.abs)

function
  FStar.Math.Lemmas.euclidean_div_axiom
  (a_941 : Prims.nat , b_942 : Prims.pos)
  :
  (uu____943 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_and
      (
        ( Prims.b2t
          (
            ( Prims.op_GreaterThanOrEqual
              (
                ( Prims.op_Subtraction
                  (a_941 , (FStar.Mul.op_Star (b_942 , (Prims.op_Division (a_941 , b_942)))))
                )
                  ,
                0
              )
            )
          )
        )
          ,
        ( Prims.b2t
          (
            ( Prims.op_LessThan
              (
                ( Prims.op_Subtraction
                  (a_941 , (FStar.Mul.op_Star (b_942 , (Prims.op_Division (a_941 , b_942)))))
                )
                  ,
                b_942
              )
            )
          )
        )
      )
    )
    ;
  extern
  ;

function
  FStar.Math.Lemmas.lemma_eucl_div_bound
  (a_1163 : Prims.nat , b_1164 : Prims.nat , q_1165 : Prims.pos)
  :
  (uu____1166 : Prims.unit)
  requires (Prims.b2t ((Prims.op_LessThan (a_1163 , q_1165)))) ;
  ensures
    ( Prims.b2t
      (
        ( Prims.op_LessThan
          ( (Prims.op_Addition (a_1163 , (FStar.Mul.op_Star (q_1165 , b_1164)))) ,
            (FStar.Mul.op_Star (q_1165 , (Prims.op_Addition (b_1164 , 1))))
          )
        )
      )
    )
    ;
  extern
  ;

function
  FStar.Math.Lemmas.lemma_mult_le_left
  (a_1362 : Prims.pos , b_1363 : Prims.pos , c_1364 : Prims.pos)
  :
  (uu____1365 : Prims.unit)
  requires (Prims.b2t ((Prims.op_LessThanOrEqual (b_1363 , c_1364)))) ;
  ensures
    ( Prims.b2t
      (
        ( Prims.op_LessThanOrEqual
          ((FStar.Mul.op_Star (a_1362 , b_1363)) , (FStar.Mul.op_Star (a_1362 , c_1364)))
        )
      )
    )
    ;
  extern
  ;

function
  FStar.Math.Lemmas.lemma_mult_le_right
  (a_1539 : Prims.nat , b_1540 : Prims.int , c_1541 : Prims.int)
  :
  (uu____1542 : Prims.unit)
  requires (Prims.b2t ((Prims.op_LessThanOrEqual (b_1540 , c_1541)))) ;
  ensures
    ( Prims.b2t
      (
        ( Prims.op_LessThanOrEqual
          ((FStar.Mul.op_Star (b_1540 , a_1539)) , (FStar.Mul.op_Star (c_1541 , a_1539)))
        )
      )
    )
    ;
  extern
  ;

function
  FStar.Math.Lemmas.lemma_mult_lt_left
  (a_1738 : Prims.pos , b_1739 : Prims.pos , c_1740 : Prims.pos)
  :
  (uu____1741 : Prims.unit)
  requires (Prims.b2t ((Prims.op_LessThan (b_1739 , c_1740)))) ;
  ensures
    ( Prims.b2t
      (
        ( Prims.op_LessThan
          ((FStar.Mul.op_Star (a_1738 , b_1739)) , (FStar.Mul.op_Star (a_1738 , c_1740)))
        )
      )
    )
    ;
  extern
  ;

function
  FStar.Math.Lemmas.lemma_mult_lt_right
  (a_1915 : Prims.nat , b_1916 : Prims.int , c_1917 : Prims.int)
  :
  (uu____1918 : Prims.unit)
  requires (Prims.b2t ((Prims.op_LessThan (b_1916 , c_1917)))) ;
  ensures
    ( Prims.b2t
      (
        ( Prims.op_LessThanOrEqual
          ((FStar.Mul.op_Star (b_1916 , a_1915)) , (FStar.Mul.op_Star (c_1917 , a_1915)))
        )
      )
    )
    ;
  extern
  ;

function
  FStar.Math.Lemmas.lemma_mult_lt_sqr
  (n_2177 : Prims.nat , m_2178 : Prims.nat , k_2179 : Prims.nat)
  :
  (uu____2180 : Prims.unit)
  requires
    ( let k_1970 : Prims.nat := k_2179 in
      ( Prims.b2t
        (
          ( Prims.op_AmpAmp
            ((Prims.op_LessThan (n_2177 , k_1970)) , (Prims.op_LessThan (m_2178 , k_1970)))
          )
        )
      )
    )
    ;
  requires Prims.l_True ;
  ensures
    ( Prims.b2t
      (
        ( Prims.op_LessThan
          ((FStar.Mul.op_Star (n_2177 , m_2178)) , (FStar.Mul.op_Star (k_2179 , k_2179)))
        )
      )
    )
    ;
  extern
  ;

unsupported: FStar.Math.Lemmas.distributivity_add_left //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.distributivity_add_right //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.distributivity_sub_left //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.distributivity_sub_right //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.paren_mul_left //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.paren_mul_right //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.paren_add_left //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.paren_add_right //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.addition_is_associative //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.subtraction_is_distributive //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.swap_add_plus_minus //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.swap_mul //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.neg_mul_left //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.neg_mul_right //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.swap_neg_mul //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.mul_binds_tighter //(reason: Prims.op_Equality)

function
  FStar.Math.Lemmas.mul_ineq1
  (a_6495 : Prims.int , b_6496 : Prims.nat , c_6497 : Prims.int , d_6498 : Prims.nat)
  :
  (uu____6499 : Prims.unit)
  requires
    ( Prims.l_and
      (
        ( Prims.l_and
          (
            ( Prims.l_and
              ( (Prims.b2t ((Prims.op_LessThan (a_6495 , b_6496)))) ,
                (Prims.b2t ((Prims.op_GreaterThan (a_6495 , (Prims.op_Minus (b_6496))))))
              )
            )
              ,
            (Prims.b2t ((Prims.op_LessThan (c_6497 , d_6498))))
          )
        )
          ,
        (Prims.b2t ((Prims.op_GreaterThan (c_6497 , (Prims.op_Minus (d_6498))))))
      )
    )
    ;
  ensures
    ( Prims.l_and
      (
        ( Prims.b2t
          (
            ( Prims.op_LessThan
              ((FStar.Mul.op_Star (a_6495 , c_6497)) , (FStar.Mul.op_Star (b_6496 , d_6498)))
            )
          )
        )
          ,
        ( Prims.b2t
          (
            ( Prims.op_GreaterThan
              ( (FStar.Mul.op_Star (a_6495 , c_6497)) ,
                (Prims.op_Minus ((FStar.Mul.op_Star (b_6496 , d_6498))))
              )
            )
          )
        )
      )
    )
    ;
  extern
  ;

function
  FStar.Math.Lemmas.nat_times_nat_is_nat
  (a_6637 : Prims.nat , b_6638 : Prims.nat)
  :
  (uu____6639 : Prims.unit)
  requires Prims.l_True ;
  ensures
    (Prims.b2t ((Prims.op_GreaterThanOrEqual ((FStar.Mul.op_Star (a_6637 , b_6638)) , 0))))
    ;
  extern
  ;

function
  FStar.Math.Lemmas.pos_times_pos_is_pos
  (a_6757 : Prims.pos , b_6758 : Prims.pos)
  :
  (uu____6759 : Prims.unit)
  requires Prims.l_True ;
  ensures (Prims.b2t ((Prims.op_GreaterThan ((FStar.Mul.op_Star (a_6757 , b_6758)) , 0)))) ;
  extern
  ;

function
  FStar.Math.Lemmas.nat_over_pos_is_nat
  (a_6877 : Prims.nat , b_6878 : Prims.pos)
  :
  (uu____6879 : Prims.unit)
  requires Prims.l_True ;
  ensures
    (Prims.b2t ((Prims.op_GreaterThanOrEqual ((Prims.op_Division (a_6877 , b_6878)) , 0))))
    ;
  extern
  ;

unsupported: FStar.Math.Lemmas.pow2_double_sum //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.pow2_double_mult //(reason: Prims.op_Equality)

function
  FStar.Math.Lemmas.pow2_lt_compat
  (n_7325 : Prims.nat , m_7326 : Prims.nat)
  :
  (uu____7327 : Prims.unit)
  requires (Prims.b2t ((Prims.op_LessThan (m_7326 , n_7325)))) ;
  ensures
    (Prims.b2t ((Prims.op_LessThan ((Prims.pow2 (m_7326)) , (Prims.pow2 (n_7325))))))
    ;
  extern
  ;

function
  FStar.Math.Lemmas.pow2_le_compat
  (n_8015 : Prims.nat , m_8016 : Prims.nat)
  :
  (uu____8017 : Prims.unit)
  requires (Prims.b2t ((Prims.op_LessThanOrEqual (m_8016 , n_8015)))) ;
  ensures
    (Prims.b2t ((Prims.op_LessThanOrEqual ((Prims.pow2 (m_8016)) , (Prims.pow2 (n_8015))))))
    ;
  extern
  ;

unsupported: FStar.Math.Lemmas.pow2_plus //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.pow2_minus //(reason: Prims.op_Equality)

function
  FStar.Math.Lemmas.multiply_fractions
  (a_9338 : Prims.nat , n_9339 : Prims.pos)
  :
  (uu____9340 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.b2t
      (
        ( Prims.op_LessThanOrEqual
          ((FStar.Mul.op_Star (n_9339 , (Prims.op_Division (a_9338 , n_9339)))) , a_9338)
        )
      )
    )
    ;
  extern
  ;

unsupported: FStar.Math.Lemmas.modulo_lemma //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_div_mod //(reason: Prims.op_Equality)

function
  FStar.Math.Lemmas.lemma_mod_lt
  (a_9874 : Prims.int , p_9875 : Prims.pos)
  :
  (uu____9876 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_and
      ( (Prims.b2t ((Prims.op_LessThanOrEqual (0 , (Prims.op_Modulus (a_9874 , p_9875)))))) ,
        (Prims.b2t ((Prims.op_LessThan ((Prims.op_Modulus (a_9874 , p_9875)) , p_9875))))
      )
    )
    ;
  extern
  ;

function
  FStar.Math.Lemmas.lemma_div_lt
  (a_10138 : Prims.nat , n_10139 : Prims.nat , m_10140 : Prims.nat)
  :
  (uu____10141 : Prims.unit)
  requires
    ( let m_9918 : Prims.nat := m_10140 in
      (Prims.b2t ((Prims.op_LessThanOrEqual (m_9918 , n_10139))))
    )
    ;
  requires (Prims.b2t ((Prims.op_LessThan (a_10138 , (Prims.pow2 (n_10139)))))) ;
  ensures
    ( Prims.b2t
      (
        ( Prims.op_LessThan
          ( (Prims.op_Division (a_10138 , (Prims.pow2 (m_10140)))) ,
            (Prims.pow2 ((Prims.op_Subtraction (n_10139 , m_10140))))
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: FStar.Math.Lemmas.lemma_eq_trans_2 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_mod_plus //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_mod_sub_0 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_mod_sub_1 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_mod_mul_distr_l //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_mod_injective //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_mul_sub_distr //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_div_exact //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.div_exact_r //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_mod_spec //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_mod_spec2 //(reason: not vale expression: (let q#16475 : Prims.nat = (Prims.op_Division (Prims.op_Subtraction a#16472 (Prims.op_Modulus a#16472 p#16473)) p#16473) in (Prims.b2t (Prims.op_Equality # Prims.int a#16472 (Prims.op_Addition (Prims.op_Modulus a#16472 p#16473) (FStar.Mul.op_Star q#16475 p#16473))))))

unsupported: FStar.Math.Lemmas.lemma_mod_plus_distr_l //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_mod_plus_mul_distr //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_mod_mod //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.euclidean_division_definition //(reason: Prims.op_Equality)

function
  FStar.Math.Lemmas.modulo_range_lemma
  (a_18802 : Prims.int , b_18803 : Prims.pos)
  :
  (uu____18804 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.b2t
      (
        ( Prims.op_AmpAmp
          ( (Prims.op_GreaterThanOrEqual ((Prims.op_Modulus (a_18802 , b_18803)) , 0)) ,
            (Prims.op_LessThan ((Prims.op_Modulus (a_18802 , b_18803)) , b_18803))
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: FStar.Math.Lemmas.small_modulo_lemma_1 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.small_modulo_lemma_2 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.small_division_lemma_1 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.small_division_lemma_2 //(reason: Prims.op_Equality)

function
  FStar.Math.Lemmas.multiplication_order_lemma
  (a_19665 : Prims.nat , b_19666 : Prims.nat , p_19667 : Prims.pos)
  :
  (uu____19668 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_iff
      ( (Prims.b2t ((Prims.op_GreaterThanOrEqual (a_19665 , b_19666)))) ,
        ( Prims.b2t
          (
            ( Prims.op_GreaterThanOrEqual
              ((FStar.Mul.op_Star (a_19665 , p_19667)) , (FStar.Mul.op_Star (b_19666 , p_19667)))
            )
          )
        )
      )
    )
    ;
  extern
  ;

function
  FStar.Math.Lemmas.division_propriety
  (a_19903 : Prims.nat , b_19904 : Prims.pos)
  :
  (uu____19905 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.b2t
      (
        ( Prims.op_AmpAmp
          (
            ( Prims.op_LessThan
              ( (Prims.op_Subtraction (a_19903 , b_19904)) ,
                (FStar.Mul.op_Star ((Prims.op_Division (a_19903 , b_19904)) , b_19904))
              )
            )
              ,
            ( Prims.op_LessThanOrEqual
              ((FStar.Mul.op_Star ((Prims.op_Division (a_19903 , b_19904)) , b_19904)) , a_19903)
            )
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: FStar.Math.Lemmas.division_definition //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.multiple_division_lemma //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.multiple_modulo_lemma //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.division_addition_lemma //(reason: Prims.op_Equality)

function
  FStar.Math.Lemmas.lemma_div_le
  (a_22976 : Prims.nat , b_22977 : Prims.nat , d_22978 : Prims.pos)
  :
  (uu____22979 : Prims.unit)
  requires (Prims.b2t ((Prims.op_LessThanOrEqual (a_22976 , b_22977)))) ;
  ensures
    ( Prims.b2t
      (
        ( Prims.op_LessThanOrEqual
          ((Prims.op_Division (a_22976 , d_22978)) , (Prims.op_Division (b_22977 , d_22978)))
        )
      )
    )
    ;
  extern
  ;

unsupported: FStar.Math.Lemmas.division_sub_lemma //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.modulo_distributivity //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.modulo_addition_lemma //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_mod_sub //(reason: Prims.op_Equality)

function
  FStar.Math.Lemmas.mod_mult_exact
  (a_25386 : Prims.nat , p_25387 : Prims.pos , q_25388 : Prims.pos)
  :
  (uu____25389 : Prims.unit)
  requires
    ( Prims.eq2
      (Prims.int , (Prims.op_Modulus (a_25386 , (FStar.Mul.op_Star (p_25387 , q_25388)))) , 0)
    )
    ;
  ensures (Prims.eq2 (Prims.int , (Prims.op_Modulus (a_25386 , p_25387)) , 0)) ;
  extern
  ;

function
  FStar.Math.Lemmas.mod_pow2_div2
  (a_26007 : Prims.nat , m_26008 : Prims.pos)
  :
  (uu____26009 : Prims.unit)
  requires
    (Prims.eq2 (Prims.int , (Prims.op_Modulus (a_26007 , (Prims.pow2 (m_26008)))) , 0))
    ;
  ensures
    ( Prims.eq2
      ( Prims.int ,
        ( Prims.op_Modulus
          ((Prims.op_Division (a_26007 , 2)) , (Prims.pow2 ((Prims.op_Subtraction (m_26008 , 1)))))
        )
          ,
        0
      )
    )
    ;
  extern
  ;

unsupported: FStar.Math.Lemmas.division_multiplication_lemma //(reason: Prims.op_Equality)

function
  FStar.Math.Lemmas.lemma_mul_pos_pos_is_pos
  (x_28019 : Prims.pos , y_28020 : Prims.pos)
  :
  (uu____28021 : Prims.unit)
  requires Prims.l_True ;
  ensures
    (Prims.b2t ((Prims.op_GreaterThan ((FStar.Mul.op_Star (x_28019 , y_28020)) , 0))))
    ;
  extern
  ;

function
  FStar.Math.Lemmas.lemma_mul_nat_pos_is_nat
  (x_28126 : Prims.nat , y_28127 : Prims.pos)
  :
  (uu____28128 : Prims.unit)
  requires Prims.l_True ;
  ensures
    (Prims.b2t ((Prims.op_GreaterThanOrEqual ((FStar.Mul.op_Star (x_28126 , y_28127)) , 0))))
    ;
  extern
  ;

unsupported: FStar.Math.Lemmas.modulo_division_lemma_0 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.modulo_division_lemma //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.modulo_modulo_lemma //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.pow2_multiplication_division_lemma_1 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.pow2_multiplication_division_lemma_2 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.pow2_multiplication_modulo_lemma_1 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.pow2_multiplication_modulo_lemma_2 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.pow2_modulo_division_lemma_1 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.pow2_modulo_division_lemma_2 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.pow2_modulo_modulo_lemma_1 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.pow2_modulo_modulo_lemma_2 //(reason: Prims.op_Equality)

unsupported: FStar.Math.Lemmas.lemma_mod_plus_injective //(reason: Prims.op_Equality)

function FStar.BitVector.bv_t (n_261 : Prims.nat) : prop extern ;

unsupported: FStar.BitVector.zero_vec //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.elem_vec //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.ones_vec //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.logand_vec //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.logxor_vec //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.logor_vec //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.lognot_vec //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.logand_vec_definition //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.logxor_vec_definition //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.logor_vec_definition //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.lognot_vec_definition //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.lemma_xor_bounded //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.is_subset_vec //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.is_superset_vec //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.lemma_slice_subset_vec //(reason: MATCH)

unsupported: FStar.BitVector.lemma_slice_superset_vec //(reason: MATCH)

unsupported: FStar.BitVector.shift_left_vec //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.shift_right_vec //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.shift_left_vec_lemma_1 //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.shift_left_vec_lemma_2 //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.shift_right_vec_lemma_1 //(reason: FStar.BitVector.bv_t)

unsupported: FStar.BitVector.shift_right_vec_lemma_2 //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.pow2_values //(reason: MATCH)

function FStar.UInt.max_int (n_2117 : Prims.nat) : Prims.int extern ;

function FStar.UInt.min_int (n_2136 : Prims.nat) : Prims.int extern ;

function FStar.UInt.fits (x_2203 : Prims.int , n_2204 : Prims.nat) : Prims.bool extern ;

function FStar.UInt.size (x_2259 : Prims.int , n_2260 : Prims.nat) : prop extern ;

function FStar.UInt.uint_t (n_2309 : Prims.nat) : prop extern ;

unsupported: FStar.UInt.zero //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.pow2_n //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.one //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.ones //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.incr //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.decr //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.incr_underspec //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.decr_underspec //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.incr_mod //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.decr_mod //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.add //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.add_underspec //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.add_mod //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.sub //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.sub_underspec //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.sub_mod //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.mul //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.mul_underspec //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.mul_mod //(reason: FStar.UInt.uint_t)

function
  FStar.UInt.lt_square_div_lt
  (a_6181 : Prims.nat , b_6182 : Prims.pos)
  :
  (uu____6183 : Prims.unit)
  requires
    (Prims.b2t ((Prims.op_LessThan (a_6181 , (FStar.Mul.op_Star (b_6182 , b_6182))))))
    ;
  ensures
    (Prims.b2t ((Prims.op_LessThan ((Prims.op_Division (a_6181 , b_6182)) , b_6182))))
    ;
  extern
  ;

unsupported: FStar.UInt.mul_div //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.div //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.div_underspec //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.div_size //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.udiv //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.mod //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.eq //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.gt //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.gte //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.lt //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.lte //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.to_uint_t //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.to_vec //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.from_vec //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.to_vec_lemma_1 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.to_vec_lemma_2 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.inverse_aux //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.inverse_vec_lemma //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.inverse_num_lemma //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.from_vec_lemma_1 //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.from_vec_lemma_2 //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.from_vec_aux //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.seq_slice_lemma //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.from_vec_propriety //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.append_lemma //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.slice_left_lemma //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.slice_right_lemma //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.zero_to_vec_lemma //(reason: Prims.op_Equality)

unsupported: FStar.UInt.zero_from_vec_lemma //(reason: Prims.op_Equality)

unsupported: FStar.UInt.one_to_vec_lemma //(reason: Prims.op_Equality)

unsupported: FStar.UInt.pow2_to_vec_lemma //(reason: Prims.op_Equality)

unsupported: FStar.UInt.pow2_from_vec_lemma //(reason: Prims.op_Equality)

unsupported: FStar.UInt.ones_to_vec_lemma //(reason: Prims.op_Equality)

unsupported: FStar.UInt.ones_from_vec_lemma //(reason: Prims.op_Equality)

unsupported: FStar.UInt.nth //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.nth_lemma //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.zero_nth_lemma //(reason: Prims.op_Equality)

unsupported: FStar.UInt.pow2_nth_lemma //(reason: Prims.op_Equality)

unsupported: FStar.UInt.one_nth_lemma //(reason: Prims.op_Equality)

unsupported: FStar.UInt.ones_nth_lemma //(reason: Prims.op_Equality)

unsupported: FStar.UInt.logand //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logxor //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logor //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.lognot //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logand_definition //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logxor_definition //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logor_definition //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.lognot_definition //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logand_commutative //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logand_associative //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logand_self //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logand_lemma_1 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logand_lemma_2 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.subset_vec_le_lemma //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.logand_le //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logxor_commutative //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logxor_associative //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logxor_self //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logxor_lemma_1 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logxor_lemma_2 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logxor_inv //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logor_commutative //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logor_associative //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logor_self //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logor_lemma_1 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logor_lemma_2 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.superset_vec_ge_lemma //(reason: FStar.BitVector.bv_t)

unsupported: FStar.UInt.logor_ge //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.lognot_self //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.lognot_lemma_1 //(reason: Prims.op_Equality)

unsupported: FStar.UInt.logor_disjoint //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.logand_mask //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_left //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_right //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_left_lemma_1 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_left_lemma_2 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_right_lemma_1 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_right_lemma_2 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_left_logand_lemma //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_right_logand_lemma //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_left_logxor_lemma //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_right_logxor_lemma //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_left_logor_lemma //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_right_logor_lemma //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_left_value_aux_1 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_left_value_aux_2 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_left_value_aux_3 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_left_value_lemma //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_right_value_aux_1 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_right_value_aux_2 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_right_value_aux_3 //(reason: FStar.UInt.uint_t)

unsupported: FStar.UInt.shift_right_value_lemma //(reason: FStar.UInt.uint_t)

unsupported: Math.Poly2.Defs_s.max //(reason: Prims.op_Equality)

unsupported: Math.Poly2.Defs_s.valid //(reason: FStar.Seq.Base.seq)

type Math.Poly2.Defs_s.poly : Type(0) extern ;

function Math.Poly2.Defs_s.degree (p_298 : Math.Poly2.Defs_s.poly) : Prims.int extern ;

unsupported: Math.Poly2.Defs_s.zero //(reason: FStar.Seq.Base.seq)

unsupported: Math.Poly2.Defs_s.one //(reason: FStar.Seq.Base.seq)

function Math.Poly2.Defs_s.monomial (n_396 : Prims.nat) : Math.Poly2.Defs_s.poly extern ;

function
  Math.Poly2.Defs_s.shift
  (p_608 : Math.Poly2.Defs_s.poly , n_609 : Prims.nat)
  :
  Math.Poly2.Defs_s.poly
  extern
  ;

function
  Math.Poly2.Defs_s.poly_index
  (p_776 : Math.Poly2.Defs_s.poly , n_777 : Prims.int)
  :
  Prims.bool
  extern
  ;

function
  Math.Poly2.Defs_s.op_String_Access
  (p_807 : Math.Poly2.Defs_s.poly , n_808 : Prims.int)
  :
  Prims.bool
  extern
  ;

unsupported: Math.Poly2.Defs_s.to_seq //(reason: FStar.Seq.Base.seq)

unsupported: Math.Poly2.Defs_s.of_seq //(reason: FStar.Seq.Base.seq)

unsupported: Math.Poly2.Defs_s.of_fun //(reason: FStar.Seq.Base.length)

unsupported: Math.Poly2.Defs_s.reverse //(reason: FStar.Seq.Base.length)

unsupported: Math.Poly2.Defs_s.add //(reason: not vale expression: (let len#4456 : (z#9163 : Prims.int {(Prims.l_and (Prims.l_imp (Prims.b2t (Prims.op_GreaterThanOrEqual (FStar.Seq.Base.length # Prims.bool a#4453) (FStar.Seq.Base.length # Prims.bool b#4454))) (Prims.b2t (Prims.op_Equality # Prims.int z#9163 (FStar.Seq.Base.length # Prims.bool a#4453)))) (Prims.l_imp (Prims.b2t (Prims.op_LessThan (FStar.Seq.Base.length # Prims.bool a#4453) (FStar.Seq.Base.length # Prims.bool b#4454))) (Prims.b2t (Prims.op_Equality # Prims.int z#9163 (FStar.Seq.Base.length # Prims.bool b#4454)))))}) = (Math.Poly2.Defs_s.max (FStar.Seq.Base.length # Prims.bool a#4453) (FStar.Seq.Base.length # Prims.bool b#4454)) in (Prims.l_and (Prims.b2t (Prims.op_LessThanOrEqual (FStar.Seq.Base.length # Prims.bool p#4455) len#4456)) (Prims.l_Forall # Prims.int (fun i#4458 : Prims.int -> (PATTERN (((Math.Poly2.Defs_s.op_String_Access p#4455 i#4458)) ((Math.Poly2.Defs_s.op_String_Access a#4453 i#4458)) ((Math.Poly2.Defs_s.op_String_Access b#4454 i#4458))) (Prims.eq2 # Prims.bool (Math.Poly2.Defs_s.op_String_Access p#4455 i#4458) (Prims.op_disEquality # Prims.bool (Math.Poly2.Defs_s.op_String_Access a#4453 i#4458) (Math.Poly2.Defs_s.op_String_Access b#4454 i#4458)))))))))

function
  Math.Poly2.Defs_s.sum_of_bools
  (j_5115 : Prims.int , k_5116 : Prims.int , f_5117 : (fun (Prims.int) -> Prims.bool))
  :
  Prims.bool
  extern
  ;

function
  Math.Poly2.Defs_s.mul_element_fun
  ( a_5252 : Math.Poly2.Defs_s.poly ,
    b_5253 : Math.Poly2.Defs_s.poly ,
    k_5254 : Prims.int ,
    i_5255 : Prims.int
  )
  :
  Prims.bool
  extern
  ;

function
  Math.Poly2.Defs_s.mul_element
  (a_5374 : Math.Poly2.Defs_s.poly , b_5375 : Math.Poly2.Defs_s.poly , k_5376 : Prims.int)
  :
  Prims.bool
  extern
  ;

unsupported: Math.Poly2.Defs_s.mul //(reason: not vale expression: (let len#5924 : Prims.int = (Prims.op_Addition (FStar.Seq.Base.length # Prims.bool a#5921) (FStar.Seq.Base.length # Prims.bool b#5922)) in (Prims.l_and (Prims.b2t (Prims.op_LessThanOrEqual (FStar.Seq.Base.length # Prims.bool p#5923) len#5924)) (Prims.l_Forall # Prims.nat (fun i#5925 : Prims.nat -> (PATTERN (((Math.Poly2.Defs_s.op_String_Access p#5923 i#5925))) (Prims.l_imp (Prims.b2t (Prims.op_LessThan i#5925 len#5924)) (Prims.eq2 # Prims.bool (Math.Poly2.Defs_s.op_String_Access p#5923 i#5925) (Math.Poly2.Defs_s.mul_element a#5921 b#5922 i#5925)))))))))

unsupported: Math.Poly2.Defs_s.divmod //(reason: FStar.Seq.Base.length)

unsupported: Math.Poly2.Defs_s.div //(reason: FStar.Seq.Base.length)

unsupported: Math.Poly2.Defs_s.mod //(reason: FStar.Seq.Base.length)

type Math.Poly2_s.poly : Type(0) extern ;

function Math.Poly2_s.degree (p_67 : Math.Poly2_s.poly) : Prims.int extern ;

const Math.Poly2_s.zero : Math.Poly2_s.poly extern ;

const Math.Poly2_s.one : Math.Poly2_s.poly extern ;

function Math.Poly2_s.monomial (n_85 : Prims.nat) : Math.Poly2_s.poly extern ;

function
  Math.Poly2_s.shift
  (p_106 : Math.Poly2_s.poly , n_107 : Prims.nat)
  :
  Math.Poly2_s.poly
  extern
  ;

function
  Math.Poly2_s.reverse
  (p_131 : Math.Poly2_s.poly , n_132 : Prims.nat)
  :
  Math.Poly2_s.poly
  extern
  ;

function
  Math.Poly2_s.poly_index
  (p_156 : Math.Poly2_s.poly , n_157 : Prims.int)
  :
  Prims.bool
  extern
  ;

function
  Math.Poly2_s.op_String_Access
  (p_170 : Math.Poly2_s.poly , n_171 : Prims.int)
  :
  Prims.bool
  extern
  ;

unsupported: Math.Poly2_s.to_seq //(reason: FStar.Seq.Base.seq)

unsupported: Math.Poly2_s.of_seq //(reason: FStar.Seq.Base.seq)

unsupported: Math.Poly2_s.of_fun //(reason: not vale expression: (fun i#1382 : Prims.nat -> (PATTERN (((Math.Poly2_s.op_String_Access p#1381 i#1382)) ((f#1380 i#1382))) (Prims.l_imp (Prims.b2t (Prims.op_LessThan i#1382 len#1379)) (Prims.eq2 # Prims.bool (Math.Poly2_s.op_String_Access p#1381 i#1382) (f#1380 i#1382))))))

function
  Math.Poly2_s.add
  (a_1480 : Math.Poly2_s.poly , b_1481 : Math.Poly2_s.poly)
  :
  Math.Poly2_s.poly
  extern
  ;

function
  Math.Poly2_s.mul
  (a_1505 : Math.Poly2_s.poly , b_1506 : Math.Poly2_s.poly)
  :
  Math.Poly2_s.poly
  extern
  ;

function
  Math.Poly2_s.div
  (a_1530 : Math.Poly2_s.poly , b_1531 : Math.Poly2_s.poly)
  :
  Math.Poly2_s.poly
  extern
  ;

function
  Math.Poly2_s.mod
  (a_1555 : Math.Poly2_s.poly , b_1556 : Math.Poly2_s.poly)
  :
  Math.Poly2_s.poly
  extern
  ;

unsupported: Math.Poly2_s.coerce //(reason: a#1635)

unsupported: Math.Poly2_s.to_poly //(reason: Math.Poly2_s.poly)

unsupported: Math.Poly2_s.of_poly //(reason: Math.Poly2_s.poly)

unsupported: Math.Poly2_s.reveal_defs //(reason: Math.Poly2_s.poly)

unsupported: Math.Poly2.Bits_s.to_uint //(reason: FStar.UInt.uint_t)

unsupported: Math.Poly2.Bits_s.of_uint //(reason: FStar.UInt.uint_t)

function
  Math.Poly2.Bits_s.to_double32_def
  (a_478 : Math.Poly2_s.poly)
  :
  Types_s.double32
  extern
  ;

function
  Math.Poly2.Bits_s.of_double32_def
  (d_771 : Types_s.double32)
  :
  Math.Poly2_s.poly
  extern
  ;

function Math.Poly2.Bits_s.to_quad32_def (a_1145 : Math.Poly2_s.poly) : Types_s.quad32 extern ;

function Math.Poly2.Bits_s.of_quad32_def (q_1767 : Types_s.quad32) : Math.Poly2_s.poly extern ;

function Math.Poly2.Bits_s.to_double32 (a_1865 : Math.Poly2_s.poly) : Types_s.double32 extern ;

function Math.Poly2.Bits_s.of_double32 (q_1879 : Types_s.double32) : Math.Poly2_s.poly extern ;

function Math.Poly2.Bits_s.to_quad32 (a_1893 : Math.Poly2_s.poly) : Types_s.quad32 extern ;

function Math.Poly2.Bits_s.of_quad32 (q_1907 : Types_s.quad32) : Math.Poly2_s.poly extern ;

function
  Math.Poly2.Bits_s.reveal_to_double32
  (a_1979 : Math.Poly2_s.poly)
  :
  (uu____1980 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Types_s.double32 ,
        (Math.Poly2.Bits_s.to_double32 (a_1979)) ,
        (Math.Poly2.Bits_s.to_double32_def (a_1979))
      )
    )
    ;
  extern
  ;

function
  Math.Poly2.Bits_s.reveal_of_double32
  (d_2051 : Types_s.double32)
  :
  (uu____2052 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2.Bits_s.of_double32 (d_2051)) ,
        (Math.Poly2.Bits_s.of_double32_def (d_2051))
      )
    )
    ;
  extern
  ;

function
  Math.Poly2.Bits_s.reveal_to_quad32
  (a_2123 : Math.Poly2_s.poly)
  :
  (uu____2124 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Types_s.quad32 ,
        (Math.Poly2.Bits_s.to_quad32 (a_2123)) ,
        (Math.Poly2.Bits_s.to_quad32_def (a_2123))
      )
    )
    ;
  extern
  ;

function
  Math.Poly2.Bits_s.reveal_of_quad32
  (q_2195 : Types_s.quad32)
  :
  (uu____2196 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2.Bits_s.of_quad32 (q_2195)) ,
        (Math.Poly2.Bits_s.of_quad32_def (q_2195))
      )
    )
    ;
  extern
  ;

function AES_s.mix_columns_LE (q_99 : Types_s.quad32) : Types_s.quad32 extern ;

function AES_s.inv_mix_columns_LE (q_113 : Types_s.quad32) : Types_s.quad32 extern ;

function AES_s.sub_bytes (q_127 : Types_s.quad32) : Types_s.quad32 extern ;

function AES_s.inv_sub_bytes (q_141 : Types_s.quad32) : Types_s.quad32 extern ;

function AES_s.shift_rows_LE (q_155 : Types_s.quad32) : Types_s.quad32 extern ;

function AES_s.inv_shift_rows_LE (q_169 : Types_s.quad32) : Types_s.quad32 extern ;

function AES_s.rot_word_LE (w_183 : Types_s.nat32) : Types_s.nat32 extern ;

function AES_s.sub_word (w_197 : Types_s.nat32) : Types_s.nat32 extern ;

function
  AES_s.commute_sub_bytes_shift_rows
  (q_279 : Types_s.quad32)
  :
  (uu____280 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Types_s.quad32 ,
        (AES_s.sub_bytes ((AES_s.shift_rows_LE (q_279)))) ,
        (AES_s.shift_rows_LE ((AES_s.sub_bytes (q_279))))
      )
    )
    ;
  extern
  ;

function
  AES_s.commute_rot_word_sub_word
  (x_361 : Types_s.nat32)
  :
  (uu____362 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Types_s.nat32 ,
        (AES_s.rot_word_LE ((AES_s.sub_word (x_361)))) ,
        (AES_s.sub_word ((AES_s.rot_word_LE (x_361))))
      )
    )
    ;
  extern
  ;

type AES_s.algorithm : Type(0) extern ;

const AES_s.AES_128 : AES_s.algorithm extern ;

const AES_s.AES_192 : AES_s.algorithm extern ;

const AES_s.AES_256 : AES_s.algorithm extern ;

unsupported: AES_s.algorithm__uu___haseq //(reason: not vale type: (PATTERN (((Prims.hasEq AES_s.algorithm))) (Prims.l_imp Prims.l_True (Prims.hasEq AES_s.algorithm))))

function AES_s.uu___is_AES_128 (projectee_477 : AES_s.algorithm) : Prims.bool extern ;

function AES_s.uu___is_AES_192 (projectee_529 : AES_s.algorithm) : Prims.bool extern ;

function AES_s.uu___is_AES_256 (projectee_581 : AES_s.algorithm) : Prims.bool extern ;

function AES_s.aes_rcon (i_1705 : Prims.int) : Types_s.nat32 extern ;

const AES_s.nb : Prims.int extern ;

function AES_s.nk (alg_1798 : AES_s.algorithm) : Prims.int extern ;

function AES_s.nr (alg_1846 : AES_s.algorithm) : Prims.int extern ;

function AES_s.aes_key_LE (alg_1926 : AES_s.algorithm) : prop extern ;

function AES_s.aes_key (alg_2021 : AES_s.algorithm) : prop extern ;

function
  AES_s.round
  (state_2081 : Types_s.quad32 , round_key_2082 : Types_s.quad32)
  :
  Types_s.quad32
  extern
  ;

unsupported: AES_s.rounds //(reason: FStar.Seq.Base.seq)

unsupported: AES_s.cipher //(reason: FStar.Seq.Base.seq)

unsupported: AES_s.expand_key //(reason: MATCH)

unsupported: AES_s.key_schedule_to_round_keys //(reason: FStar.Seq.Base.seq)

unsupported: AES_s.key_to_round_keys_LE //(reason: AES_s.aes_key_LE)

unsupported: AES_s.aes_encrypt_LE //(reason: AES_s.aes_key_LE)

unsupported: AES_s.key_to_round_keys //(reason: AES_s.aes_key)

unsupported: AES_s.aes_encrypt //(reason: AES_s.aes_key)

unsupported: Collections.Seqs_i.lemma_slice_first_exactly_in_append //(reason: FStar.Seq.Base.seq)

unsupported: Collections.Seqs_i.lemma_all_but_last_append //(reason: FStar.Seq.Base.seq)

unsupported: Collections.Seqs_i.reverse_seq_append //(reason: FStar.Seq.Base.seq)

unsupported: Collections.Seqs_i.reverse_reverse_seq //(reason: FStar.Seq.Base.seq)

function
  Types_i.op_Star_Hat
  (x_54 : Words_s.nat32 , y_55 : Words_s.nat32)
  :
  Words_s.nat32
  extern
  ;

function
  Types_i.op_Star_Hat_Hat
  (x_71 : Types_s.quad32 , y_72 : Types_s.quad32)
  :
  Types_s.quad32
  extern
  ;

function Types_i.quad32_shl32 (q_362 : Types_s.quad32) : Types_s.quad32 extern ;

function
  Types_i.lemma_BitwiseXorCommutative
  (x_533 : Words_s.nat32 , y_534 : Words_s.nat32)
  :
  (uu____535 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Words_s.nat32 ,
        (Types_i.op_Star_Hat (x_533 , y_534)) ,
        (Types_i.op_Star_Hat (y_534 , x_533))
      )
    )
    ;
  extern
  ;

function
  Types_i.lemma_BitwiseXorWithZero
  (n_610 : Words_s.nat32)
  :
  (uu____611 : Prims.unit)
  requires Prims.l_True ;
  ensures (Prims.eq2 (Words_s.nat32 , (Types_i.op_Star_Hat (n_610 , 0)) , n_610)) ;
  extern
  ;

function
  Types_i.lemma_BitwiseXorCancel
  (n_683 : Words_s.nat32)
  :
  (uu____684 : Prims.unit)
  requires Prims.l_True ;
  ensures (Prims.eq2 (Prims.int , (Types_i.op_Star_Hat (n_683 , n_683)) , 0)) ;
  extern
  ;

unsupported: Types_i.lemma_BitwiseXorCancel64 //(reason: Types_s.ixor)

function
  Types_i.lemma_BitwiseXorAssociative
  (x_930 : Words_s.nat32 , y_931 : Words_s.nat32 , z_932 : Words_s.nat32)
  :
  (uu____933 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Words_s.nat32 ,
        (Types_i.op_Star_Hat (x_930 , (Types_i.op_Star_Hat (y_931 , z_932)))) ,
        (Types_i.op_Star_Hat ((Types_i.op_Star_Hat (x_930 , y_931)) , z_932))
      )
    )
    ;
  extern
  ;

unsupported: Types_i.xor_lemmas //(reason: not vale expression: (fun x#1649 : Words_s.nat32 -> (Prims.l_Forall # Words_s.nat32 (fun y#1650 : Words_s.nat32 -> (PATTERN (((Types_i.op_Star_Hat x#1649 y#1650))) (Prims.eq2 # Words_s.nat32 (Types_i.op_Star_Hat x#1649 y#1650) (Types_i.op_Star_Hat y#1650 x#1649)))))))

unsupported: Types_i.lemma_quad32_xor //(reason: not vale expression: (fun q#1842 : Types_s.quad32 -> (PATTERN (((Types_s.quad32_xor q#1842 q#1842))) (Prims.eq2 # (Words_s.four Types_s.nat32) (Types_s.quad32_xor q#1842 q#1842) (Words_s.Mkfour # Types_s.nat32 0 0 0 0)))))

function Types_i.quad32_double_lo (q_1885 : Types_s.quad32) : Types_s.double32 extern ;

function Types_i.quad32_double_hi (q_1935 : Types_s.quad32) : Types_s.double32 extern ;

function
  Types_i.lemma_reverse_reverse_bytes_nat32
  (n_2060 : Words_s.nat32)
  :
  (uu____2061 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Words_s.nat32 ,
        (Types_s.reverse_bytes_nat32 ((Types_s.reverse_bytes_nat32 (n_2060)))) ,
        n_2060
      )
    )
    ;
  extern
  ;

function
  Types_i.lemma_reverse_bytes_quad32
  (q_2184 : Types_s.quad32)
  :
  (uu____2185 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Types_s.quad32 ,
        (Types_s.reverse_bytes_quad32 ((Types_s.reverse_bytes_quad32 (q_2184)))) ,
        q_2184
      )
    )
    ;
  extern
  ;

unsupported: Types_i.lemma_reverse_reverse_bytes_nat32_seq //(reason: FStar.Seq.Base.seq)

unsupported: Types_i.quad32_to_seq //(reason: Words.Seq_s.seq4)

function Types_i.lo64 (q_2517 : Types_s.quad32) : Words_s.nat64 extern ;

function Types_i.hi64 (q_2600 : Types_s.quad32) : Words_s.nat64 extern ;

unsupported: Types_i.push_pop_xmm //(reason: not vale expression: (let x'#2757 : Types_s.quad32 = (Types_s.insert_nat64 (Types_s.insert_nat64 y#2755 (Types_i.hi64 x#2754) 1) (Types_i.lo64 x#2754) 0) in (Prims.eq2 # Types_s.quad32 x#2754 x'#2757)))

function
  X64.Vale.InsAes.va_code_Pclmulqdq
  ( dst_328 : X64.Vale.Decls_i.va_operand_xmm ,
    src_329 : X64.Vale.Decls_i.va_operand_xmm ,
    dstHi_330 : Prims.bool ,
    srcHi_331 : Prims.bool
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsAes.va_lemma_Pclmulqdq //(reason: MATCH)

function
  X64.Vale.InsAes.va_wp_Pclmulqdq
  ( dst_2972 : X64.Vale.Decls_i.va_operand_xmm ,
    src_2973 : X64.Vale.Decls_i.va_operand_xmm ,
    dstHi_2974 : Prims.bool ,
    srcHi_2975 : Prims.bool ,
    va_s0_2976 : X64.Vale.Decls_i.va_state ,
    va_k_2977 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsAes.va_wpMonotone_Pclmulqdq //(reason: not vale expression: (fun va_s#3724 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#3725 : Prims.unit -> (Prims.l_imp (va_k1#3722 va_s#3724 va_g#3725) (va_k2#3723 va_s#3724 va_g#3725))))))

unsupported: X64.Vale.InsAes.va_wpCompute_Pclmulqdq //(reason: MATCH)

unsupported: X64.Vale.InsAes.va_wpProof_Pclmulqdq //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsAes.va_quick_Pclmulqdq //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsAes.va_code_AESNI_enc
  (dst_7271 : X64.Vale.Decls_i.va_operand_xmm , src_7272 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsAes.va_lemma_AESNI_enc //(reason: MATCH)

function
  X64.Vale.InsAes.va_wp_AESNI_enc
  ( dst_8843 : X64.Vale.Decls_i.va_operand_xmm ,
    src_8844 : X64.Vale.Decls_i.va_operand_xmm ,
    va_s0_8845 : X64.Vale.Decls_i.va_state ,
    va_k_8846 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsAes.va_wpMonotone_AESNI_enc //(reason: not vale expression: (fun va_s#9372 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#9373 : Prims.unit -> (Prims.l_imp (va_k1#9370 va_s#9372 va_g#9373) (va_k2#9371 va_s#9372 va_g#9373))))))

unsupported: X64.Vale.InsAes.va_wpCompute_AESNI_enc //(reason: MATCH)

unsupported: X64.Vale.InsAes.va_wpProof_AESNI_enc //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsAes.va_quick_AESNI_enc //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsAes.va_code_AESNI_enc_last
  (dst_12208 : X64.Vale.Decls_i.va_operand_xmm , src_12209 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsAes.va_lemma_AESNI_enc_last //(reason: MATCH)

function
  X64.Vale.InsAes.va_wp_AESNI_enc_last
  ( dst_13758 : X64.Vale.Decls_i.va_operand_xmm ,
    src_13759 : X64.Vale.Decls_i.va_operand_xmm ,
    va_s0_13760 : X64.Vale.Decls_i.va_state ,
    va_k_13761 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsAes.va_wpMonotone_AESNI_enc_last //(reason: not vale expression: (fun va_s#14286 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#14287 : Prims.unit -> (Prims.l_imp (va_k1#14284 va_s#14286 va_g#14287) (va_k2#14285 va_s#14286 va_g#14287))))))

unsupported: X64.Vale.InsAes.va_wpCompute_AESNI_enc_last //(reason: MATCH)

unsupported: X64.Vale.InsAes.va_wpProof_AESNI_enc_last //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsAes.va_quick_AESNI_enc_last //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsAes.va_code_AESNI_dec
  (dst_17122 : X64.Vale.Decls_i.va_operand_xmm , src_17123 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsAes.va_lemma_AESNI_dec //(reason: MATCH)

function
  X64.Vale.InsAes.va_wp_AESNI_dec
  ( dst_18694 : X64.Vale.Decls_i.va_operand_xmm ,
    src_18695 : X64.Vale.Decls_i.va_operand_xmm ,
    va_s0_18696 : X64.Vale.Decls_i.va_state ,
    va_k_18697 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsAes.va_wpMonotone_AESNI_dec //(reason: not vale expression: (fun va_s#19223 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#19224 : Prims.unit -> (Prims.l_imp (va_k1#19221 va_s#19223 va_g#19224) (va_k2#19222 va_s#19223 va_g#19224))))))

unsupported: X64.Vale.InsAes.va_wpCompute_AESNI_dec //(reason: MATCH)

unsupported: X64.Vale.InsAes.va_wpProof_AESNI_dec //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsAes.va_quick_AESNI_dec //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsAes.va_code_AESNI_dec_last
  (dst_22059 : X64.Vale.Decls_i.va_operand_xmm , src_22060 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsAes.va_lemma_AESNI_dec_last //(reason: MATCH)

function
  X64.Vale.InsAes.va_wp_AESNI_dec_last
  ( dst_23609 : X64.Vale.Decls_i.va_operand_xmm ,
    src_23610 : X64.Vale.Decls_i.va_operand_xmm ,
    va_s0_23611 : X64.Vale.Decls_i.va_state ,
    va_k_23612 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsAes.va_wpMonotone_AESNI_dec_last //(reason: not vale expression: (fun va_s#24137 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#24138 : Prims.unit -> (Prims.l_imp (va_k1#24135 va_s#24137 va_g#24138) (va_k2#24136 va_s#24137 va_g#24138))))))

unsupported: X64.Vale.InsAes.va_wpCompute_AESNI_dec_last //(reason: MATCH)

unsupported: X64.Vale.InsAes.va_wpProof_AESNI_dec_last //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsAes.va_quick_AESNI_dec_last //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsAes.va_code_AESNI_imc
  (dst_26973 : X64.Vale.Decls_i.va_operand_xmm , src_26974 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsAes.va_lemma_AESNI_imc //(reason: MATCH)

function
  X64.Vale.InsAes.va_wp_AESNI_imc
  ( dst_28415 : X64.Vale.Decls_i.va_operand_xmm ,
    src_28416 : X64.Vale.Decls_i.va_operand_xmm ,
    va_s0_28417 : X64.Vale.Decls_i.va_state ,
    va_k_28418 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsAes.va_wpMonotone_AESNI_imc //(reason: not vale expression: (fun va_s#28939 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#28940 : Prims.unit -> (Prims.l_imp (va_k1#28937 va_s#28939 va_g#28940) (va_k2#28938 va_s#28939 va_g#28940))))))

unsupported: X64.Vale.InsAes.va_wpCompute_AESNI_imc //(reason: MATCH)

unsupported: X64.Vale.InsAes.va_wpProof_AESNI_imc //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsAes.va_quick_AESNI_imc //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsAes.va_code_AESNI_keygen_assist
  ( dst_31744 : X64.Vale.Decls_i.va_operand_xmm ,
    src_31745 : X64.Vale.Decls_i.va_operand_xmm ,
    imm_31746 : X64.Machine_s.imm8
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsAes.va_lemma_AESNI_keygen_assist //(reason: MATCH)

function
  X64.Vale.InsAes.va_wp_AESNI_keygen_assist
  ( dst_34501 : X64.Vale.Decls_i.va_operand_xmm ,
    src_34502 : X64.Vale.Decls_i.va_operand_xmm ,
    imm_34503 : X64.Machine_s.imm8 ,
    va_s0_34504 : X64.Vale.Decls_i.va_state ,
    va_k_34505 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsAes.va_wpMonotone_AESNI_keygen_assist //(reason: not vale expression: (fun va_s#35134 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#35135 : Prims.unit -> (Prims.l_imp (va_k1#35132 va_s#35134 va_g#35135) (va_k2#35133 va_s#35134 va_g#35135))))))

unsupported: X64.Vale.InsAes.va_wpCompute_AESNI_keygen_assist //(reason: MATCH)

unsupported: X64.Vale.InsAes.va_wpProof_AESNI_keygen_assist //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsAes.va_quick_AESNI_keygen_assist //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsMem.va_code_Load64_buffer
  ( dst_224 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_225 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    offset_226 : Prims.int
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsMem.va_lemma_Load64_buffer //(reason: MATCH)

function
  X64.Vale.InsMem.va_wp_Load64_buffer
  ( dst_3115 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_3116 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    offset_3117 : Prims.int ,
    b_3118 : X64.Machine_s.buffer64 ,
    index_3119 : Prims.int ,
    va_s0_3120 : X64.Vale.Decls_i.va_state ,
    va_k_3121 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsMem.va_wpMonotone_Load64_buffer //(reason: not vale expression: (fun va_s#3931 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#3932 : Prims.unit -> (Prims.l_imp (va_k1#3929 va_s#3931 va_g#3932) (va_k2#3930 va_s#3931 va_g#3932))))))

unsupported: X64.Vale.InsMem.va_wpCompute_Load64_buffer //(reason: MATCH)

unsupported: X64.Vale.InsMem.va_wpProof_Load64_buffer //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsMem.va_quick_Load64_buffer //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsMem.va_code_Store64_buffer
  ( dst_7396 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    src_7397 : X64.Vale.Decls_i.va_operand_opr64 ,
    offset_7398 : Prims.int
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsMem.va_lemma_Store64_buffer //(reason: MATCH)

function
  X64.Vale.InsMem.va_wp_Store64_buffer
  ( dst_10624 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    src_10625 : X64.Vale.Decls_i.va_operand_opr64 ,
    offset_10626 : Prims.int ,
    b_10627 : X64.Machine_s.buffer64 ,
    index_10628 : Prims.int ,
    va_s0_10629 : X64.Vale.Decls_i.va_state ,
    va_k_10630 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsMem.va_wpMonotone_Store64_buffer //(reason: not vale expression: (fun va_s#11448 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#11449 : Prims.unit -> (Prims.l_imp (va_k1#11446 va_s#11448 va_g#11449) (va_k2#11447 va_s#11448 va_g#11449))))))

unsupported: X64.Vale.InsMem.va_wpCompute_Store64_buffer //(reason: MATCH)

unsupported: X64.Vale.InsMem.va_wpProof_Store64_buffer //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsMem.va_quick_Store64_buffer //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsMem.va_code_Pop
  (dst_15060 : X64.Vale.Decls_i.va_operand_dst_opr64)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsMem.va_lemma_Pop //(reason: MATCH)

function
  X64.Vale.InsMem.va_wp_Pop
  ( dst_17862 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    b_17863 : X64.Machine_s.buffer64 ,
    index_17864 : Prims.int ,
    va_s0_17865 : X64.Vale.Decls_i.va_state ,
    va_k_17866 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsMem.va_wpMonotone_Pop //(reason: not vale expression: (fun va_s#18507 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#18508 : Prims.unit -> (Prims.l_imp (va_k1#18505 va_s#18507 va_g#18508) (va_k2#18506 va_s#18507 va_g#18508))))))

unsupported: X64.Vale.InsMem.va_wpCompute_Pop //(reason: MATCH)

unsupported: X64.Vale.InsMem.va_wpProof_Pop //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsMem.va_quick_Pop //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsMem.va_code_Push
  (src_22217 : X64.Vale.Decls_i.va_operand_reg_opr64)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsMem.va_lemma_Push //(reason: MATCH)

function
  X64.Vale.InsMem.va_wp_Push
  ( src_25391 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    b_25392 : X64.Machine_s.buffer64 ,
    index_25393 : Prims.int ,
    va_s0_25394 : X64.Vale.Decls_i.va_state ,
    va_k_25395 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsMem.va_wpMonotone_Push //(reason: not vale expression: (fun va_s#26044 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#26045 : Prims.unit -> (Prims.l_imp (va_k1#26042 va_s#26044 va_g#26045) (va_k2#26043 va_s#26044 va_g#26045))))))

unsupported: X64.Vale.InsMem.va_wpCompute_Push //(reason: MATCH)

unsupported: X64.Vale.InsMem.va_wpProof_Push //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsMem.va_quick_Push //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_AssertQuickType
  (va_dummy_674 : Prims.unit)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_AssertQuickType //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wp_AssertQuickType //(reason: Prims.squash)

unsupported: X64.Vale.InsBasic.va_wpMonotone_AssertQuickType //(reason: Prims.squash)

unsupported: X64.Vale.InsBasic.va_wpCompute_AssertQuickType //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_AssertQuickType //(reason: Prims.squash)

unsupported: X64.Vale.InsBasic.va_quick_AssertQuickType //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_Mov64
  ( dst_4147 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_4148 : X64.Vale.Decls_i.va_operand_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_Mov64 //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_Mov64
  ( dst_5479 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_5480 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_5481 : X64.Vale.Decls_i.va_state ,
    va_k_5482 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_Mov64 //(reason: not vale expression: (fun va_s#6005 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#6006 : Prims.unit -> (Prims.l_imp (va_k1#6003 va_s#6005 va_g#6006) (va_k2#6004 va_s#6005 va_g#6006))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_Mov64 //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_Mov64 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_Mov64 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_Add64
  ( dst_8227 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_8228 : X64.Vale.Decls_i.va_operand_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_Add64 //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_Add64
  ( dst_9968 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_9969 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_9970 : X64.Vale.Decls_i.va_state ,
    va_k_9971 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_Add64 //(reason: not vale expression: (fun va_s#10507 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#10508 : Prims.unit -> (Prims.l_imp (va_k1#10505 va_s#10507 va_g#10508) (va_k2#10506 va_s#10507 va_g#10508))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_Add64 //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_Add64 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_Add64 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_Add64Wrap
  ( dst_13347 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_13348 : X64.Vale.Decls_i.va_operand_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_Add64Wrap //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_Add64Wrap
  ( dst_15631 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_15632 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_15633 : X64.Vale.Decls_i.va_state ,
    va_k_15634 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_Add64Wrap //(reason: not vale expression: (fun va_s#16175 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#16176 : Prims.unit -> (Prims.l_imp (va_k1#16173 va_s#16175 va_g#16176) (va_k2#16174 va_s#16175 va_g#16176))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_Add64Wrap //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_Add64Wrap //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_Add64Wrap //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_AddLea64
  ( dst_19191 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src1_19192 : X64.Vale.Decls_i.va_operand_opr64 ,
    src2_19193 : X64.Vale.Decls_i.va_operand_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_AddLea64 //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_AddLea64
  ( dst_21119 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src1_21120 : X64.Vale.Decls_i.va_operand_opr64 ,
    src2_21121 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_21122 : X64.Vale.Decls_i.va_state ,
    va_k_21123 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_AddLea64 //(reason: not vale expression: (fun va_s#21738 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#21739 : Prims.unit -> (Prims.l_imp (va_k1#21736 va_s#21738 va_g#21739) (va_k2#21737 va_s#21738 va_g#21739))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_AddLea64 //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_AddLea64 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_AddLea64 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_Adc64Wrap
  ( dst_24356 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_24357 : X64.Vale.Decls_i.va_operand_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_Adc64Wrap //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_Adc64Wrap
  ( dst_27298 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_27299 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_27300 : X64.Vale.Decls_i.va_state ,
    va_k_27301 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_Adc64Wrap //(reason: not vale expression: (fun va_s#27913 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#27914 : Prims.unit -> (Prims.l_imp (va_k1#27911 va_s#27913 va_g#27914) (va_k2#27912 va_s#27913 va_g#27914))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_Adc64Wrap //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_Adc64Wrap //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_Adc64Wrap //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_Adcx64Wrap
  ( dst_31104 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_31105 : X64.Vale.Decls_i.va_operand_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_Adcx64Wrap //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_Adcx64Wrap
  ( dst_34093 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_34094 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_34095 : X64.Vale.Decls_i.va_state ,
    va_k_34096 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_Adcx64Wrap //(reason: not vale expression: (fun va_s#34710 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#34711 : Prims.unit -> (Prims.l_imp (va_k1#34708 va_s#34710 va_g#34711) (va_k2#34709 va_s#34710 va_g#34711))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_Adcx64Wrap //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_Adcx64Wrap //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_Adcx64Wrap //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_Adox64Wrap
  ( dst_37916 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_37917 : X64.Vale.Decls_i.va_operand_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_Adox64Wrap //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_Adox64Wrap
  ( dst_40905 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_40906 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_40907 : X64.Vale.Decls_i.va_state ,
    va_k_40908 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_Adox64Wrap //(reason: not vale expression: (fun va_s#41522 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#41523 : Prims.unit -> (Prims.l_imp (va_k1#41520 va_s#41522 va_g#41523) (va_k2#41521 va_s#41522 va_g#41523))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_Adox64Wrap //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_Adox64Wrap //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_Adox64Wrap //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_Sub64
  ( dst_44728 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_44729 : X64.Vale.Decls_i.va_operand_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_Sub64 //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_Sub64
  ( dst_46469 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_46470 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_46471 : X64.Vale.Decls_i.va_state ,
    va_k_46472 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_Sub64 //(reason: not vale expression: (fun va_s#47008 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#47009 : Prims.unit -> (Prims.l_imp (va_k1#47006 va_s#47008 va_g#47009) (va_k2#47007 va_s#47008 va_g#47009))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_Sub64 //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_Sub64 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_Sub64 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_Sub64Wrap
  ( dst_49848 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_49849 : X64.Vale.Decls_i.va_operand_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_Sub64Wrap //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_Sub64Wrap
  ( dst_51469 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_51470 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_51471 : X64.Vale.Decls_i.va_state ,
    va_k_51472 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_Sub64Wrap //(reason: not vale expression: (fun va_s#52001 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#52002 : Prims.unit -> (Prims.l_imp (va_k1#51999 va_s#52001 va_g#52002) (va_k2#52000 va_s#52001 va_g#52002))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_Sub64Wrap //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_Sub64Wrap //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_Sub64Wrap //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_Mul64Wrap
  (src_54810 : X64.Vale.Decls_i.va_operand_opr64)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_Mul64Wrap //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_Mul64Wrap
  ( src_56381 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_56382 : X64.Vale.Decls_i.va_state ,
    va_k_56383 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_Mul64Wrap //(reason: not vale expression: (fun va_s#56837 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#56838 : Prims.unit -> (Prims.l_imp (va_k1#56835 va_s#56837 va_g#56838) (va_k2#56836 va_s#56837 va_g#56838))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_Mul64Wrap //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_Mul64Wrap //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_Mul64Wrap //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_Mulx64
  ( dst_hi_60312 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    dst_lo_60313 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_60314 : X64.Vale.Decls_i.va_operand_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_Mulx64 //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_Mulx64
  ( dst_hi_62461 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    dst_lo_62462 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_62463 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_62464 : X64.Vale.Decls_i.va_state ,
    va_k_62465 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_Mulx64 //(reason: not vale expression: (fun va_s#63080 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#63081 : Prims.unit -> (Prims.l_imp (va_k1#63078 va_s#63080 va_g#63081) (va_k2#63079 va_s#63080 va_g#63081))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_Mulx64 //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_Mulx64 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_Mulx64 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_IMul64
  ( dst_65746 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_65747 : X64.Vale.Decls_i.va_operand_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_IMul64 //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_IMul64
  ( dst_67487 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_67488 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_67489 : X64.Vale.Decls_i.va_state ,
    va_k_67490 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_IMul64 //(reason: not vale expression: (fun va_s#68026 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#68027 : Prims.unit -> (Prims.l_imp (va_k1#68024 va_s#68026 va_g#68027) (va_k2#68025 va_s#68026 va_g#68027))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_IMul64 //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_IMul64 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_IMul64 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_Xor64
  ( dst_70866 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_70867 : X64.Vale.Decls_i.va_operand_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_Xor64 //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_Xor64
  ( dst_72978 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_72979 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_72980 : X64.Vale.Decls_i.va_state ,
    va_k_72981 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_Xor64 //(reason: not vale expression: (fun va_s#73520 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#73521 : Prims.unit -> (Prims.l_imp (va_k1#73518 va_s#73520 va_g#73521) (va_k2#73519 va_s#73520 va_g#73521))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_Xor64 //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_Xor64 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_Xor64 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_And64
  ( dst_76567 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_76568 : X64.Vale.Decls_i.va_operand_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_And64 //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_And64
  ( dst_78467 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_78468 : X64.Vale.Decls_i.va_operand_opr64 ,
    va_s0_78469 : X64.Vale.Decls_i.va_state ,
    va_k_78470 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_And64 //(reason: not vale expression: (fun va_s#79003 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#79004 : Prims.unit -> (Prims.l_imp (va_k1#79001 va_s#79003 va_g#79004) (va_k2#79002 va_s#79003 va_g#79004))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_And64 //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_And64 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_And64 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_Shl64
  ( dst_81834 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    amt_81835 : X64.Vale.Decls_i.va_operand_shift_amt64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_Shl64 //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_Shl64
  ( dst_83746 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    amt_83747 : X64.Vale.Decls_i.va_operand_shift_amt64 ,
    va_s0_83748 : X64.Vale.Decls_i.va_state ,
    va_k_83749 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_Shl64 //(reason: not vale expression: (fun va_s#84287 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#84288 : Prims.unit -> (Prims.l_imp (va_k1#84285 va_s#84287 va_g#84288) (va_k2#84286 va_s#84287 va_g#84288))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_Shl64 //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_Shl64 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_Shl64 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsBasic.va_code_Shr64
  ( dst_87133 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    amt_87134 : X64.Vale.Decls_i.va_operand_shift_amt64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsBasic.va_lemma_Shr64 //(reason: MATCH)

function
  X64.Vale.InsBasic.va_wp_Shr64
  ( dst_89045 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    amt_89046 : X64.Vale.Decls_i.va_operand_shift_amt64 ,
    va_s0_89047 : X64.Vale.Decls_i.va_state ,
    va_k_89048 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsBasic.va_wpMonotone_Shr64 //(reason: not vale expression: (fun va_s#89586 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#89587 : Prims.unit -> (Prims.l_imp (va_k1#89584 va_s#89586 va_g#89587) (va_k2#89585 va_s#89586 va_g#89587))))))

unsupported: X64.Vale.InsBasic.va_wpCompute_Shr64 //(reason: MATCH)

unsupported: X64.Vale.InsBasic.va_wpProof_Shr64 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsBasic.va_quick_Shr64 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.nat64_to_nat32
  (n_879 : X64.Machine_s.nat64)
  :
  Types_s.nat32
  requires
    ( let n_846 : X64.Machine_s.nat64 := n_879 in
      (Prims.b2t ((Prims.op_LessThan (n_846 , X64.Machine_s.pow2_32))))
    )
    ;
  extern
  ;

function
  X64.Vale.InsVector.va_code_Paddd
  (dst_919 : X64.Vale.Decls_i.va_operand_xmm , src_920 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_Paddd //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_Paddd
  ( dst_4041 : X64.Vale.Decls_i.va_operand_xmm ,
    src_4042 : X64.Vale.Decls_i.va_operand_xmm ,
    va_s0_4043 : X64.Vale.Decls_i.va_state ,
    va_k_4044 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_Paddd //(reason: not vale expression: (fun va_s#4604 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#4605 : Prims.unit -> (Prims.l_imp (va_k1#4602 va_s#4604 va_g#4605) (va_k2#4603 va_s#4604 va_g#4605))))))

unsupported: X64.Vale.InsVector.va_wpCompute_Paddd //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_Paddd //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_Paddd //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_Pxor
  (dst_8514 : X64.Vale.Decls_i.va_operand_xmm , src_8515 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_Pxor //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_Pxor
  ( dst_9916 : X64.Vale.Decls_i.va_operand_xmm ,
    src_9917 : X64.Vale.Decls_i.va_operand_xmm ,
    va_s0_9918 : X64.Vale.Decls_i.va_state ,
    va_k_9919 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_Pxor //(reason: not vale expression: (fun va_s#10438 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#10439 : Prims.unit -> (Prims.l_imp (va_k1#10436 va_s#10438 va_g#10439) (va_k2#10437 va_s#10438 va_g#10439))))))

unsupported: X64.Vale.InsVector.va_wpCompute_Pxor //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_Pxor //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_Pxor //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_Pslld
  (dst_13037 : X64.Vale.Decls_i.va_operand_xmm , amt_13038 : Prims.int)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_Pslld //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_Pslld
  ( dst_14961 : X64.Vale.Decls_i.va_operand_xmm ,
    amt_14962 : Prims.int ,
    va_s0_14963 : X64.Vale.Decls_i.va_state ,
    va_k_14964 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_Pslld //(reason: not vale expression: (fun va_s#15564 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#15565 : Prims.unit -> (Prims.l_imp (va_k1#15562 va_s#15564 va_g#15565) (va_k2#15563 va_s#15564 va_g#15565))))))

unsupported: X64.Vale.InsVector.va_wpCompute_Pslld //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_Pslld //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_Pslld //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_Psrld
  (dst_18126 : X64.Vale.Decls_i.va_operand_xmm , amt_18127 : Prims.int)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_Psrld //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_Psrld
  ( dst_20050 : X64.Vale.Decls_i.va_operand_xmm ,
    amt_20051 : Prims.int ,
    va_s0_20052 : X64.Vale.Decls_i.va_state ,
    va_k_20053 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_Psrld //(reason: not vale expression: (fun va_s#20653 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#20654 : Prims.unit -> (Prims.l_imp (va_k1#20651 va_s#20653 va_g#20654) (va_k2#20652 va_s#20653 va_g#20654))))))

unsupported: X64.Vale.InsVector.va_wpCompute_Psrld //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_Psrld //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_Psrld //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_Pshufb
  (dst_23215 : X64.Vale.Decls_i.va_operand_xmm , src_23216 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_Pshufb //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_Pshufb
  ( dst_24943 : X64.Vale.Decls_i.va_operand_xmm ,
    src_24944 : X64.Vale.Decls_i.va_operand_xmm ,
    va_s0_24945 : X64.Vale.Decls_i.va_state ,
    va_k_24946 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_Pshufb //(reason: not vale expression: (fun va_s#25473 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#25474 : Prims.unit -> (Prims.l_imp (va_k1#25471 va_s#25473 va_g#25474) (va_k2#25472 va_s#25473 va_g#25474))))))

unsupported: X64.Vale.InsVector.va_wpCompute_Pshufb //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_Pshufb //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_Pshufb //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_Pshufd
  ( dst_28323 : X64.Vale.Decls_i.va_operand_xmm ,
    src_28324 : X64.Vale.Decls_i.va_operand_xmm ,
    permutation_28325 : X64.Machine_s.imm8
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_Pshufd //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_Pshufd
  ( dst_30857 : X64.Vale.Decls_i.va_operand_xmm ,
    src_30858 : X64.Vale.Decls_i.va_operand_xmm ,
    permutation_30859 : X64.Machine_s.imm8 ,
    va_s0_30860 : X64.Vale.Decls_i.va_state ,
    va_k_30861 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_Pshufd //(reason: not vale expression: (fun va_s#31570 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#31571 : Prims.unit -> (Prims.l_imp (va_k1#31568 va_s#31570 va_g#31571) (va_k2#31569 va_s#31570 va_g#31571))))))

unsupported: X64.Vale.InsVector.va_wpCompute_Pshufd //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_Pshufd //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_Pshufd //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_Pextrq
  ( dst_34584 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_34585 : X64.Vale.Decls_i.va_operand_xmm ,
    index_34586 : X64.Machine_s.imm8
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_Pextrq //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_Pextrq
  ( dst_36631 : X64.Vale.Decls_i.va_operand_dst_opr64 ,
    src_36632 : X64.Vale.Decls_i.va_operand_xmm ,
    index_36633 : X64.Machine_s.imm8 ,
    va_s0_36634 : X64.Vale.Decls_i.va_state ,
    va_k_36635 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_Pextrq //(reason: not vale expression: (fun va_s#37281 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#37282 : Prims.unit -> (Prims.l_imp (va_k1#37279 va_s#37281 va_g#37282) (va_k2#37280 va_s#37281 va_g#37282))))))

unsupported: X64.Vale.InsVector.va_wpCompute_Pextrq //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_Pextrq //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_Pextrq //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_Pinsrd
  ( dst_39925 : X64.Vale.Decls_i.va_operand_xmm ,
    src_39926 : X64.Vale.Decls_i.va_operand_opr64 ,
    index_39927 : X64.Machine_s.imm8
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_Pinsrd //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_Pinsrd
  ( dst_41823 : X64.Vale.Decls_i.va_operand_xmm ,
    src_41824 : X64.Vale.Decls_i.va_operand_opr64 ,
    index_41825 : X64.Machine_s.imm8 ,
    va_s0_41826 : X64.Vale.Decls_i.va_state ,
    va_k_41827 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_Pinsrd //(reason: not vale expression: (fun va_s#42440 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#42441 : Prims.unit -> (Prims.l_imp (va_k1#42438 va_s#42440 va_g#42441) (va_k2#42439 va_s#42440 va_g#42441))))))

unsupported: X64.Vale.InsVector.va_wpCompute_Pinsrd //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_Pinsrd //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_Pinsrd //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_PinsrdImm
  ( dst_45381 : X64.Vale.Decls_i.va_operand_xmm ,
    immediate_45382 : Types_s.nat32 ,
    index_45383 : X64.Machine_s.imm8 ,
    tmp_45384 : X64.Vale.Decls_i.va_operand_reg_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_PinsrdImm //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_PinsrdImm
  ( dst_47469 : X64.Vale.Decls_i.va_operand_xmm ,
    immediate_47470 : Types_s.nat32 ,
    index_47471 : X64.Machine_s.imm8 ,
    tmp_47472 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    va_s0_47473 : X64.Vale.Decls_i.va_state ,
    va_k_47474 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_PinsrdImm //(reason: not vale expression: (fun va_s#48174 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#48175 : Prims.unit -> (Prims.l_imp (va_k1#48172 va_s#48174 va_g#48175) (va_k2#48173 va_s#48174 va_g#48175))))))

unsupported: X64.Vale.InsVector.va_wpCompute_PinsrdImm //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_PinsrdImm //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_PinsrdImm //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_Pinsrq
  ( dst_51279 : X64.Vale.Decls_i.va_operand_xmm ,
    src_51280 : X64.Vale.Decls_i.va_operand_opr64 ,
    index_51281 : X64.Machine_s.imm8
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_Pinsrq //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_Pinsrq
  ( dst_53009 : X64.Vale.Decls_i.va_operand_xmm ,
    src_53010 : X64.Vale.Decls_i.va_operand_opr64 ,
    index_53011 : X64.Machine_s.imm8 ,
    va_s0_53012 : X64.Vale.Decls_i.va_state ,
    va_k_53013 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_Pinsrq //(reason: not vale expression: (fun va_s#53620 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#53621 : Prims.unit -> (Prims.l_imp (va_k1#53618 va_s#53620 va_g#53621) (va_k2#53619 va_s#53620 va_g#53621))))))

unsupported: X64.Vale.InsVector.va_wpCompute_Pinsrq //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_Pinsrq //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_Pinsrq //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_PinsrqImm
  ( dst_56558 : X64.Vale.Decls_i.va_operand_xmm ,
    immediate_56559 : X64.Machine_s.nat64 ,
    index_56560 : X64.Machine_s.imm8 ,
    tmp_56561 : X64.Vale.Decls_i.va_operand_reg_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_PinsrqImm //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_PinsrqImm
  ( dst_58646 : X64.Vale.Decls_i.va_operand_xmm ,
    immediate_58647 : X64.Machine_s.nat64 ,
    index_58648 : X64.Machine_s.imm8 ,
    tmp_58649 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    va_s0_58650 : X64.Vale.Decls_i.va_state ,
    va_k_58651 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_PinsrqImm //(reason: not vale expression: (fun va_s#59351 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#59352 : Prims.unit -> (Prims.l_imp (va_k1#59349 va_s#59351 va_g#59352) (va_k2#59350 va_s#59351 va_g#59352))))))

unsupported: X64.Vale.InsVector.va_wpCompute_PinsrqImm //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_PinsrqImm //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_PinsrqImm //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_VPSLLDQ4
  (dst_62460 : X64.Vale.Decls_i.va_operand_xmm , src_62461 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_VPSLLDQ4 //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_VPSLLDQ4
  ( dst_64228 : X64.Vale.Decls_i.va_operand_xmm ,
    src_64229 : X64.Vale.Decls_i.va_operand_xmm ,
    va_s0_64230 : X64.Vale.Decls_i.va_state ,
    va_k_64231 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_VPSLLDQ4 //(reason: not vale expression: (fun va_s#64760 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#64761 : Prims.unit -> (Prims.l_imp (va_k1#64758 va_s#64760 va_g#64761) (va_k2#64759 va_s#64760 va_g#64761))))))

unsupported: X64.Vale.InsVector.va_wpCompute_VPSLLDQ4 //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_VPSLLDQ4 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_VPSLLDQ4 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_Mov128
  (dst_67443 : X64.Vale.Decls_i.va_operand_xmm , src_67444 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_Mov128 //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_Mov128
  ( dst_68763 : X64.Vale.Decls_i.va_operand_xmm ,
    src_68764 : X64.Vale.Decls_i.va_operand_xmm ,
    va_s0_68765 : X64.Vale.Decls_i.va_state ,
    va_k_68766 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_Mov128 //(reason: not vale expression: (fun va_s#69282 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#69283 : Prims.unit -> (Prims.l_imp (va_k1#69280 va_s#69282 va_g#69283) (va_k2#69281 va_s#69282 va_g#69283))))))

unsupported: X64.Vale.InsVector.va_wpCompute_Mov128 //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_Mov128 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_Mov128 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_Load128_buffer
  ( dst_71850 : X64.Vale.Decls_i.va_operand_xmm ,
    src_71851 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    offset_71852 : Prims.int
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_Load128_buffer //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_Load128_buffer
  ( dst_74739 : X64.Vale.Decls_i.va_operand_xmm ,
    src_74740 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    offset_74741 : Prims.int ,
    b_74742 : X64.Machine_s.buffer128 ,
    index_74743 : Prims.int ,
    va_s0_74744 : X64.Vale.Decls_i.va_state ,
    va_k_74745 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_Load128_buffer //(reason: not vale expression: (fun va_s#75551 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#75552 : Prims.unit -> (Prims.l_imp (va_k1#75549 va_s#75551 va_g#75552) (va_k2#75550 va_s#75551 va_g#75552))))))

unsupported: X64.Vale.InsVector.va_wpCompute_Load128_buffer //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_Load128_buffer //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_Load128_buffer //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_Store128_buffer
  ( dst_79425 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    src_79426 : X64.Vale.Decls_i.va_operand_xmm ,
    offset_79427 : Prims.int
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_Store128_buffer //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_Store128_buffer
  ( dst_82651 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    src_82652 : X64.Vale.Decls_i.va_operand_xmm ,
    offset_82653 : Prims.int ,
    b_82654 : X64.Machine_s.buffer128 ,
    index_82655 : Prims.int ,
    va_s0_82656 : X64.Vale.Decls_i.va_state ,
    va_k_82657 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_Store128_buffer //(reason: not vale expression: (fun va_s#83472 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#83473 : Prims.unit -> (Prims.l_imp (va_k1#83470 va_s#83472 va_g#83473) (va_k2#83471 va_s#83472 va_g#83473))))))

unsupported: X64.Vale.InsVector.va_wpCompute_Store128_buffer //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_Store128_buffer //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_Store128_buffer //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_PushXmm
  ( src_87116 : X64.Vale.Decls_i.va_operand_xmm ,
    tmp_87117 : X64.Vale.Decls_i.va_operand_reg_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_PushXmm //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_PushXmm
  ( src_91684 : X64.Vale.Decls_i.va_operand_xmm ,
    tmp_91685 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    b_91686 : X64.Machine_s.buffer64 ,
    index_91687 : Prims.int ,
    va_s0_91688 : X64.Vale.Decls_i.va_state ,
    va_k_91689 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_PushXmm //(reason: not vale expression: (fun va_s#92459 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#92460 : Prims.unit -> (Prims.l_imp (va_k1#92457 va_s#92459 va_g#92460) (va_k2#92458 va_s#92459 va_g#92460))))))

unsupported: X64.Vale.InsVector.va_wpCompute_PushXmm //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_PushXmm //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_PushXmm //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_PopXmm
  ( dst_96928 : X64.Vale.Decls_i.va_operand_xmm ,
    tmp_96929 : X64.Vale.Decls_i.va_operand_reg_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_PopXmm //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_PopXmm
  ( dst_101612 : X64.Vale.Decls_i.va_operand_xmm ,
    tmp_101613 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    b_101614 : X64.Machine_s.buffer64 ,
    index_101615 : Prims.int ,
    expected_xmm_101616 : X64.Vale.Decls_i.quad32 ,
    va_s0_101617 : X64.Vale.Decls_i.va_state ,
    va_k_101618 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_PopXmm //(reason: not vale expression: (fun va_s#102465 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#102466 : Prims.unit -> (Prims.l_imp (va_k1#102463 va_s#102465 va_g#102466) (va_k2#102464 va_s#102465 va_g#102466))))))

unsupported: X64.Vale.InsVector.va_wpCompute_PopXmm //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_PopXmm //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_PopXmm //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_ZeroXmm
  (dst_106737 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_ZeroXmm //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_ZeroXmm
  ( dst_108066 : X64.Vale.Decls_i.va_operand_xmm ,
    va_s0_108067 : X64.Vale.Decls_i.va_state ,
    va_k_108068 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_ZeroXmm //(reason: not vale expression: (fun va_s#108516 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#108517 : Prims.unit -> (Prims.l_imp (va_k1#108514 va_s#108516 va_g#108517) (va_k2#108515 va_s#108516 va_g#108517))))))

unsupported: X64.Vale.InsVector.va_wpCompute_ZeroXmm //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_ZeroXmm //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_ZeroXmm //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.Vale.InsVector.va_code_InitPshufbMask
  ( dst_110949 : X64.Vale.Decls_i.va_operand_xmm ,
    tmp_110950 : X64.Vale.Decls_i.va_operand_reg_opr64
  )
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.Vale.InsVector.va_lemma_InitPshufbMask //(reason: MATCH)

function
  X64.Vale.InsVector.va_wp_InitPshufbMask
  ( dst_112710 : X64.Vale.Decls_i.va_operand_xmm ,
    tmp_112711 : X64.Vale.Decls_i.va_operand_reg_opr64 ,
    va_s0_112712 : X64.Vale.Decls_i.va_state ,
    va_k_112713 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.Vale.InsVector.va_wpMonotone_InitPshufbMask //(reason: not vale expression: (fun va_s#113248 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#113249 : Prims.unit -> (Prims.l_imp (va_k1#113246 va_s#113248 va_g#113249) (va_k2#113247 va_s#113248 va_g#113249))))))

unsupported: X64.Vale.InsVector.va_wpCompute_InitPshufbMask //(reason: MATCH)

unsupported: X64.Vale.InsVector.va_wpProof_InitPshufbMask //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.Vale.InsVector.va_quick_InitPshufbMask //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  Math.Poly2_i.op_Plus_Dot
  (a_88 : Math.Poly2_s.poly , b_89 : Math.Poly2_s.poly)
  :
  Math.Poly2_s.poly
  extern
  ;

function
  Math.Poly2_i.op_Star_Dot
  (a_104 : Math.Poly2_s.poly , b_105 : Math.Poly2_s.poly)
  :
  Math.Poly2_s.poly
  extern
  ;

function
  Math.Poly2_i.op_Slash_Dot
  (a_120 : Math.Poly2_s.poly , b_121 : Math.Poly2_s.poly)
  :
  Math.Poly2_s.poly
  extern
  ;

function
  Math.Poly2_i.op_Percent_Dot
  (a_136 : Math.Poly2_s.poly , b_137 : Math.Poly2_s.poly)
  :
  Math.Poly2_s.poly
  extern
  ;

unsupported: Math.Poly2_i.lemma_equal //(reason: not vale expression: (fun i#297 : Prims.int -> (Prims.eq2 # Prims.bool (Math.Poly2_s.op_String_Access a#295 i#297) (Math.Poly2_s.op_String_Access b#296 i#297))))

function
  Math.Poly2_i.lemma_index_i
  (a_421 : Math.Poly2_s.poly , i_422 : Prims.int)
  :
  (uu____423 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_imp
      ( (Prims.b2t ((Math.Poly2_s.op_String_Access (a_421 , i_422)))) ,
        ( Prims.l_and
          ( (Prims.b2t ((Prims.op_LessThanOrEqual (0 , i_422)))) ,
            (Prims.b2t ((Prims.op_LessThanOrEqual (i_422 , (Math.Poly2_s.degree (a_421))))))
          )
        )
      )
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_degree
  (a_520 : Math.Poly2_s.poly)
  :
  (uu____521 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_or
      ( (Prims.eq2 (Prims.int , (Math.Poly2_s.degree (a_520)) , (Prims.op_Minus (1)))) ,
        (Prims.b2t ((Math.Poly2_s.op_String_Access (a_520 , (Math.Poly2_s.degree (a_520))))))
      )
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_zero_define_i
  (i_576 : Prims.int)
  :
  (uu____577 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.b2t
      ((Prims.op_Negation ((Math.Poly2_s.op_String_Access (Math.Poly2_s.zero , i_576)))))
    )
    ;
  extern
  ;

unsupported: Math.Poly2_i.lemma_one_define_i //(reason: Prims.op_Equality)

unsupported: Math.Poly2_i.lemma_monomial_define_i //(reason: Prims.op_Equality)

function
  Math.Poly2_i.lemma_shift_define_i
  (p_982 : Math.Poly2_s.poly , n_983 : Prims.nat , i_984 : Prims.int)
  :
  (uu____985 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Prims.bool ,
        (Math.Poly2_s.op_String_Access ((Math.Poly2_s.shift (p_982 , n_983)) , i_984)) ,
        (Math.Poly2_s.op_String_Access (p_982 , (Prims.op_Subtraction (i_984 , n_983))))
      )
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_reverse_define_i
  (p_1175 : Math.Poly2_s.poly , n_1176 : Prims.nat , i_1177 : Prims.int)
  :
  (uu____1178 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Prims.bool ,
        (Math.Poly2_s.op_String_Access ((Math.Poly2_s.reverse (p_1175 , n_1176)) , i_1177)) ,
        ( Prims.op_AmpAmp
          ( (Math.Poly2_s.op_String_Access (p_1175 , (Prims.op_Subtraction (n_1176 , i_1177)))) ,
            (Prims.op_GreaterThanOrEqual (i_1177 , 0))
          )
        )
      )
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_add_zero
  (a_1250 : Math.Poly2_s.poly)
  :
  (uu____1251 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      (Math.Poly2_s.poly , (Math.Poly2_i.op_Plus_Dot (a_1250 , Math.Poly2_s.zero)) , a_1250)
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_add_cancel
  (a_1321 : Math.Poly2_s.poly)
  :
  (uu____1322 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      (Math.Poly2_s.poly , (Math.Poly2_i.op_Plus_Dot (a_1321 , a_1321)) , Math.Poly2_s.zero)
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_add_cancel_eq
  (a_1431 : Math.Poly2_s.poly , b_1432 : Math.Poly2_s.poly)
  :
  (uu____1433 : Prims.unit)
  requires
    ( Prims.eq2
      (Math.Poly2_s.poly , (Math.Poly2_i.op_Plus_Dot (a_1431 , b_1432)) , Math.Poly2_s.zero)
    )
    ;
  ensures (Prims.eq2 (Math.Poly2_s.poly , a_1431 , b_1432)) ;
  extern
  ;

function
  Math.Poly2_i.lemma_add_commute
  (a_1537 : Math.Poly2_s.poly , b_1538 : Math.Poly2_s.poly)
  :
  (uu____1539 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2_i.op_Plus_Dot (a_1537 , b_1538)) ,
        (Math.Poly2_i.op_Plus_Dot (b_1538 , a_1537))
      )
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_add_associate
  (a_1694 : Math.Poly2_s.poly , b_1695 : Math.Poly2_s.poly , c_1696 : Math.Poly2_s.poly)
  :
  (uu____1697 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2_i.op_Plus_Dot (a_1694 , (Math.Poly2_i.op_Plus_Dot (b_1695 , c_1696)))) ,
        (Math.Poly2_i.op_Plus_Dot ((Math.Poly2_i.op_Plus_Dot (a_1694 , b_1695)) , c_1696))
      )
    )
    ;
  extern
  ;

unsupported: Math.Poly2_i.lemma_add_define_i //(reason: Prims.op_disEquality)

function
  Math.Poly2_i.lemma_add_degree
  (a_2116 : Math.Poly2_s.poly , b_2117 : Math.Poly2_s.poly)
  :
  (uu____2118 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_or
      (
        ( Prims.b2t
          (
            ( Prims.op_LessThanOrEqual
              ( (Math.Poly2_s.degree ((Math.Poly2_i.op_Plus_Dot (a_2116 , b_2117)))) ,
                (Math.Poly2_s.degree (a_2116))
              )
            )
          )
        )
          ,
        ( Prims.b2t
          (
            ( Prims.op_LessThanOrEqual
              ( (Math.Poly2_s.degree ((Math.Poly2_i.op_Plus_Dot (a_2116 , b_2117)))) ,
                (Math.Poly2_s.degree (b_2117))
              )
            )
          )
        )
      )
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_mul_zero
  (a_2209 : Math.Poly2_s.poly)
  :
  (uu____2210 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2_i.op_Star_Dot (a_2209 , Math.Poly2_s.zero)) ,
        Math.Poly2_s.zero
      )
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_mul_one
  (a_2280 : Math.Poly2_s.poly)
  :
  (uu____2281 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      (Math.Poly2_s.poly , (Math.Poly2_i.op_Star_Dot (a_2280 , Math.Poly2_s.one)) , a_2280)
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_mul_commute
  (a_2384 : Math.Poly2_s.poly , b_2385 : Math.Poly2_s.poly)
  :
  (uu____2386 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2_i.op_Star_Dot (a_2384 , b_2385)) ,
        (Math.Poly2_i.op_Star_Dot (b_2385 , a_2384))
      )
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_mul_associate
  (a_2541 : Math.Poly2_s.poly , b_2542 : Math.Poly2_s.poly , c_2543 : Math.Poly2_s.poly)
  :
  (uu____2544 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2_i.op_Star_Dot (a_2541 , (Math.Poly2_i.op_Star_Dot (b_2542 , c_2543)))) ,
        (Math.Poly2_i.op_Star_Dot ((Math.Poly2_i.op_Star_Dot (a_2541 , b_2542)) , c_2543))
      )
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_mul_distribute
  (a_2714 : Math.Poly2_s.poly , b_2715 : Math.Poly2_s.poly , c_2716 : Math.Poly2_s.poly)
  :
  (uu____2717 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2_i.op_Star_Dot (a_2714 , (Math.Poly2_i.op_Plus_Dot (b_2715 , c_2716)))) ,
        ( Math.Poly2_i.op_Plus_Dot
          ( (Math.Poly2_i.op_Star_Dot (a_2714 , b_2715)) ,
            (Math.Poly2_i.op_Star_Dot (a_2714 , c_2716))
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: Math.Poly2_i.lemma_mul_degree //(reason: MATCH)

function
  Math.Poly2_i.lemma_mul_reverse
  (a_3308 : Math.Poly2_s.poly , b_3309 : Math.Poly2_s.poly , n_3310 : Prims.nat)
  :
  (uu____3311 : Prims.unit)
  requires
    ( Prims.l_and
      ( (Prims.b2t ((Prims.op_LessThanOrEqual ((Math.Poly2_s.degree (a_3308)) , n_3310)))) ,
        (Prims.b2t ((Prims.op_LessThanOrEqual ((Math.Poly2_s.degree (b_3309)) , n_3310))))
      )
    )
    ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        ( Math.Poly2_s.reverse
          ((Math.Poly2_i.op_Star_Dot (a_3308 , b_3309)) , (Prims.op_Addition (n_3310 , n_3310)))
        )
          ,
        ( Math.Poly2_i.op_Star_Dot
          ((Math.Poly2_s.reverse (a_3308 , n_3310)) , (Math.Poly2_s.reverse (b_3309 , n_3310)))
        )
      )
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_shift_is_mul
  (a_3422 : Math.Poly2_s.poly , n_3423 : Prims.nat)
  :
  (uu____3424 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2_s.shift (a_3422 , n_3423)) ,
        (Math.Poly2_i.op_Star_Dot (a_3422 , (Math.Poly2_s.monomial (n_3423))))
      )
    )
    ;
  extern
  ;

function
  Math.Poly2_i.lemma_div_mod
  (a_3566 : Math.Poly2_s.poly , b_3567 : Math.Poly2_s.poly)
  :
  (uu____3568 : Prims.unit)
  requires (Prims.b2t ((Prims.op_GreaterThanOrEqual ((Math.Poly2_s.degree (b_3567)) , 0)))) ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        a_3566 ,
        ( Math.Poly2_i.op_Plus_Dot
          ( (Math.Poly2_i.op_Star_Dot ((Math.Poly2_i.op_Slash_Dot (a_3566 , b_3567)) , b_3567)) ,
            (Math.Poly2_i.op_Percent_Dot (a_3566 , b_3567))
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: Math.Poly2_i.lemma_div_degree //(reason: MATCH)

function
  Math.Poly2_i.lemma_mod_degree
  (a_4068 : Math.Poly2_s.poly , b_4069 : Math.Poly2_s.poly)
  :
  (uu____4070 : Prims.unit)
  requires (Prims.b2t ((Prims.op_GreaterThanOrEqual ((Math.Poly2_s.degree (b_4069)) , 0)))) ;
  ensures
    ( Prims.b2t
      (
        ( Prims.op_LessThan
          ( (Math.Poly2_s.degree ((Math.Poly2_i.op_Percent_Dot (a_4068 , b_4069)))) ,
            (Math.Poly2_s.degree (b_4069))
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: Math.Poly2.Lemmas_i.lemma_index //(reason: not vale expression: (fun i#266 : Prims.int -> (PATTERN (((Math.Poly2_s.op_String_Access a#264 i#266))) (Prims.l_imp (Prims.b2t (Math.Poly2_s.op_String_Access a#264 i#266)) (Prims.l_and (Prims.b2t (Prims.op_LessThanOrEqual 0 i#266)) (Prims.b2t (Prims.op_LessThanOrEqual i#266 (Math.Poly2_s.degree a#264))))))))

unsupported: Math.Poly2.Lemmas_i.lemma_index_all //(reason: not vale expression: (fun a#449 : Math.Poly2_s.poly -> (Prims.l_Forall # Prims.int (fun i#450 : Prims.int -> (PATTERN (((Math.Poly2_s.op_String_Access a#449 i#450))) (Prims.l_imp (Prims.b2t (Math.Poly2_s.op_String_Access a#449 i#450)) (Prims.l_and (Prims.b2t (Prims.op_LessThanOrEqual 0 i#450)) (Prims.b2t (Prims.op_LessThanOrEqual i#450 (Math.Poly2_s.degree a#449))))))))))

unsupported: Math.Poly2.Lemmas_i.lemma_zero_define //(reason: not vale expression: (fun i#546 : Prims.int -> (PATTERN (((Math.Poly2_s.op_String_Access Math.Poly2_s.zero i#546))) (Prims.b2t (Prims.op_Negation (Math.Poly2_s.op_String_Access Math.Poly2_s.zero i#546))))))

unsupported: Math.Poly2.Lemmas_i.lemma_one_define //(reason: not vale expression: (fun i#703 : Prims.int -> (PATTERN (((Math.Poly2_s.op_String_Access Math.Poly2_s.one i#703))) (Prims.eq2 # Prims.bool (Math.Poly2_s.op_String_Access Math.Poly2_s.one i#703) (Prims.op_Equality # Prims.int i#703 0)))))

unsupported: Math.Poly2.Lemmas_i.lemma_monomial_define //(reason: not vale expression: (fun i#875 : Prims.int -> (PATTERN (((Math.Poly2_s.op_String_Access (Math.Poly2_s.monomial n#873) i#875))) (Prims.eq2 # Prims.bool (Math.Poly2_s.op_String_Access (Math.Poly2_s.monomial n#873) i#875) (Prims.op_Equality # Prims.int i#875 n#873)))))

unsupported: Math.Poly2.Lemmas_i.lemma_shift_define //(reason: not vale expression: (fun i#1084 : Prims.int -> (PATTERN (((Math.Poly2_s.op_String_Access (Math.Poly2_s.shift p#1081 n#1082) i#1084))) (Prims.eq2 # Prims.bool (Math.Poly2_s.op_String_Access (Math.Poly2_s.shift p#1081 n#1082) i#1084) (Math.Poly2_s.op_String_Access p#1081 (Prims.op_Subtraction i#1084 n#1082))))))

unsupported: Math.Poly2.Lemmas_i.lemma_shift_define_forward //(reason: not vale expression: (fun i#1280 : Prims.int -> (PATTERN (((Math.Poly2_s.op_String_Access p#1277 i#1280))) (Prims.eq2 # Prims.bool (Math.Poly2_s.op_String_Access (Math.Poly2_s.shift p#1277 n#1278) (Prims.op_Addition i#1280 n#1278)) (Math.Poly2_s.op_String_Access p#1277 i#1280)))))

unsupported: Math.Poly2.Lemmas_i.lemma_reverse_define //(reason: not vale expression: (fun i#1518 : Prims.int -> (PATTERN (((Math.Poly2_s.op_String_Access (Math.Poly2_s.reverse a#1515 n#1516) i#1518))) (Prims.eq2 # Prims.bool (Math.Poly2_s.op_String_Access (Math.Poly2_s.reverse a#1515 n#1516) i#1518) (Prims.op_AmpAmp (Math.Poly2_s.op_String_Access a#1515 (Prims.op_Subtraction n#1516 i#1518)) (Prims.op_GreaterThanOrEqual i#1518 0))))))

unsupported: Math.Poly2.Lemmas_i.lemma_reverse_define_all //(reason: not vale expression: (fun a#1833 : Math.Poly2_s.poly -> (Prims.l_Forall # Prims.nat (fun n#1834 : Prims.nat -> (PATTERN (((Math.Poly2_s.reverse a#1833 n#1834))) (Prims.l_Forall # Prims.int (fun i#1835 : Prims.int -> (PATTERN (((Math.Poly2_s.op_String_Access (Math.Poly2_s.reverse a#1833 n#1834) i#1835))) (Prims.eq2 # Prims.bool (Math.Poly2_s.op_String_Access (Math.Poly2_s.reverse a#1833 n#1834) i#1835) (Prims.op_AmpAmp (Math.Poly2_s.op_String_Access a#1833 (Prims.op_Subtraction n#1834 i#1835)) (Prims.op_GreaterThanOrEqual i#1835 0)))))))))))

unsupported: Math.Poly2.Lemmas_i.lemma_degree_is //(reason: not vale expression: (fun i#2035 : Prims.int -> (PATTERN (((Math.Poly2_s.op_String_Access a#2033 i#2035))) (Prims.l_imp (Prims.b2t (Prims.op_GreaterThan i#2035 n#2034)) (Prims.b2t (Prims.op_Negation (Math.Poly2_s.op_String_Access a#2033 i#2035)))))))

function
  Math.Poly2.Lemmas_i.lemma_degree_negative
  (a_2111 : Math.Poly2_s.poly)
  :
  (uu____2112 : Prims.unit)
  requires (Prims.b2t ((Prims.op_LessThan ((Math.Poly2_s.degree (a_2111)) , 0)))) ;
  ensures (Prims.eq2 (Math.Poly2_s.poly , a_2111 , Math.Poly2_s.zero)) ;
  extern
  ;

unsupported: Math.Poly2.Lemmas_i.lemma_zero_degree //(reason: not vale type: (uu___76#2115 : Prims.unit {(Prims.eq2 # Prims.int (Math.Poly2_s.degree Math.Poly2_s.zero) (Prims.op_Minus 1))}))

function
  Math.Poly2.Lemmas_i.lemma_monomial_degree
  (n_2270 : Prims.nat)
  :
  (uu____2271 : Prims.unit)
  requires Prims.l_True ;
  ensures
    (Prims.eq2 (Prims.int , (Math.Poly2_s.degree ((Math.Poly2_s.monomial (n_2270)))) , n_2270))
    ;
  extern
  ;

unsupported: Math.Poly2.Lemmas_i.lemma_shift_degree //(reason: MATCH)

function
  Math.Poly2.Lemmas_i.lemma_reverse_degree
  (a_2733 : Math.Poly2_s.poly , n_2734 : Prims.nat)
  :
  (uu____2735 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.b2t
      (
        ( Prims.op_LessThanOrEqual
          ((Math.Poly2_s.degree ((Math.Poly2_s.reverse (a_2733 , n_2734)))) , n_2734)
        )
      )
    )
    ;
  extern
  ;

unsupported: Math.Poly2.Lemmas_i.lemma_of_list_degree //(reason: not vale expression: (let len#3186 : Prims.nat = (FStar.List.Tot.Base.length # Prims.bool (l#3185 : Tm_app)) in (Prims.l_or (Prims.eq2 # Prims.int len#3186 0) (FStar.Pervasives.Native.normalize (Prims.b2t (FStar.List.Tot.Base.index # Prims.bool (l#3185 : Tm_app) (Prims.op_Subtraction len#3186 1)))))))

unsupported: Math.Poly2.Lemmas_i.lemma_add_define //(reason: not vale expression: (fun i#3483 : Prims.int -> (PATTERN (((Math.Poly2_s.op_String_Access (Math.Poly2_i.op_Plus_Dot a#3480 b#3481) i#3483)) ((Math.Poly2_s.op_String_Access a#3480 i#3483)) ((Math.Poly2_s.op_String_Access b#3481 i#3483))) (Prims.eq2 # Prims.bool (Math.Poly2_s.op_String_Access (Math.Poly2_i.op_Plus_Dot a#3480 b#3481) i#3483) (Prims.op_disEquality # Prims.bool (Math.Poly2_s.op_String_Access a#3480 i#3483) (Math.Poly2_s.op_String_Access b#3481 i#3483))))))

unsupported: Math.Poly2.Lemmas_i.lemma_add_define_all //(reason: not vale expression: (fun a#3848 : Math.Poly2_s.poly -> (Prims.l_Forall # Math.Poly2_s.poly (fun b#3849 : Math.Poly2_s.poly -> (PATTERN (((Math.Poly2_i.op_Plus_Dot a#3848 b#3849))) (Prims.l_Forall # Prims.int (fun i#3850 : Prims.int -> (PATTERN (((Math.Poly2_s.op_String_Access (Math.Poly2_i.op_Plus_Dot a#3848 b#3849) i#3850)) ((Math.Poly2_s.op_String_Access a#3848 i#3850)) ((Math.Poly2_s.op_String_Access b#3849 i#3850))) (Prims.eq2 # Prims.bool (Math.Poly2_s.op_String_Access (Math.Poly2_i.op_Plus_Dot a#3848 b#3849) i#3850) (Prims.op_disEquality # Prims.bool (Math.Poly2_s.op_String_Access a#3848 i#3850) (Math.Poly2_s.op_String_Access b#3849 i#3850)))))))))))

function
  Math.Poly2.Lemmas_i.lemma_mul_distribute_left
  (a_4021 : Math.Poly2_s.poly , b_4022 : Math.Poly2_s.poly , c_4023 : Math.Poly2_s.poly)
  :
  (uu____4024 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2_i.op_Star_Dot ((Math.Poly2_i.op_Plus_Dot (a_4021 , b_4022)) , c_4023)) ,
        ( Math.Poly2_i.op_Plus_Dot
          ( (Math.Poly2_i.op_Star_Dot (a_4021 , c_4023)) ,
            (Math.Poly2_i.op_Star_Dot (b_4022 , c_4023))
          )
        )
      )
    )
    ;
  extern
  ;

function
  Math.Poly2.Lemmas_i.lemma_mul_distribute_right
  (a_4194 : Math.Poly2_s.poly , b_4195 : Math.Poly2_s.poly , c_4196 : Math.Poly2_s.poly)
  :
  (uu____4197 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2_i.op_Star_Dot (a_4194 , (Math.Poly2_i.op_Plus_Dot (b_4195 , c_4196)))) ,
        ( Math.Poly2_i.op_Plus_Dot
          ( (Math.Poly2_i.op_Star_Dot (a_4194 , b_4195)) ,
            (Math.Poly2_i.op_Star_Dot (a_4194 , c_4196))
          )
        )
      )
    )
    ;
  extern
  ;

function
  Math.Poly2.Lemmas_i.lemma_mul_smaller_is_zero
  (a_4355 : Math.Poly2_s.poly , b_4356 : Math.Poly2_s.poly)
  :
  (uu____4357 : Prims.unit)
  requires
    ( Prims.b2t
      (
        ( Prims.op_GreaterThan
          ( (Math.Poly2_s.degree (b_4356)) ,
            (Math.Poly2_s.degree ((Math.Poly2_i.op_Star_Dot (a_4355 , b_4356))))
          )
        )
      )
    )
    ;
  ensures
    ( Prims.l_and
      ( (Prims.eq2 (Math.Poly2_s.poly , a_4355 , Math.Poly2_s.zero)) ,
        ( Prims.eq2
          (Math.Poly2_s.poly , (Math.Poly2_i.op_Star_Dot (a_4355 , b_4356)) , Math.Poly2_s.zero)
        )
      )
    )
    ;
  extern
  ;

function
  Math.Poly2.Lemmas_i.lemma_mul_monomials
  (m_4496 : Prims.nat , n_4497 : Prims.nat)
  :
  (uu____4498 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2_s.monomial ((Prims.op_Addition (m_4496 , n_4497)))) ,
        ( Math.Poly2_i.op_Star_Dot
          ((Math.Poly2_s.monomial (m_4496)) , (Math.Poly2_s.monomial (n_4497)))
        )
      )
    )
    ;
  extern
  ;

function
  Math.Poly2.Lemmas_i.lemma_mul_reverse_shift_1
  (a_4793 : Math.Poly2_s.poly , b_4794 : Math.Poly2_s.poly , n_4795 : Prims.nat)
  :
  (uu____4796 : Prims.unit)
  requires
    ( Prims.l_and
      ( (Prims.b2t ((Prims.op_LessThanOrEqual ((Math.Poly2_s.degree (a_4793)) , n_4795)))) ,
        (Prims.b2t ((Prims.op_LessThanOrEqual ((Math.Poly2_s.degree (b_4794)) , n_4795))))
      )
    )
    ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        ( Math.Poly2_s.reverse
          ( (Math.Poly2_i.op_Star_Dot (a_4793 , b_4794)) ,
            (Prims.op_Addition ((Prims.op_Addition (n_4795 , n_4795)) , 1))
          )
        )
          ,
        ( Math.Poly2_s.shift
          (
            ( Math.Poly2_i.op_Star_Dot
              ((Math.Poly2_s.reverse (a_4793 , n_4795)) , (Math.Poly2_s.reverse (b_4794 , n_4795)))
            )
              ,
            1
          )
        )
      )
    )
    ;
  extern
  ;

function
  Math.Poly2.Lemmas_i.lemma_mod_distribute
  (a_4984 : Math.Poly2_s.poly , b_4985 : Math.Poly2_s.poly , c_4986 : Math.Poly2_s.poly)
  :
  (uu____4987 : Prims.unit)
  requires (Prims.b2t ((Prims.op_GreaterThanOrEqual ((Math.Poly2_s.degree (c_4986)) , 0)))) ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2_i.op_Percent_Dot ((Math.Poly2_i.op_Plus_Dot (a_4984 , b_4985)) , c_4986)) ,
        ( Math.Poly2_i.op_Plus_Dot
          ( (Math.Poly2_i.op_Percent_Dot (a_4984 , c_4986)) ,
            (Math.Poly2_i.op_Percent_Dot (b_4985 , c_4986))
          )
        )
      )
    )
    ;
  extern
  ;

function
  Math.Poly2.Lemmas_i.lemma_div_mod_unique
  ( a_5328 : Math.Poly2_s.poly ,
    b_5329 : Math.Poly2_s.poly ,
    x_5330 : Math.Poly2_s.poly ,
    y_5331 : Math.Poly2_s.poly
  )
  :
  (uu____5332 : Prims.unit)
  requires
    ( Prims.l_and
      (
        ( Prims.l_and
          ( (Prims.b2t ((Prims.op_GreaterThanOrEqual ((Math.Poly2_s.degree (b_5329)) , 0)))) ,
            ( Prims.b2t
              ((Prims.op_LessThan ((Math.Poly2_s.degree (y_5331)) , (Math.Poly2_s.degree (b_5329)))))
            )
          )
        )
          ,
        ( Prims.eq2
          ( Math.Poly2_s.poly ,
            a_5328 ,
            (Math.Poly2_i.op_Plus_Dot ((Math.Poly2_i.op_Star_Dot (x_5330 , b_5329)) , y_5331))
          )
        )
      )
    )
    ;
  ensures
    ( Prims.l_and
      ( (Prims.eq2 (Math.Poly2_s.poly , x_5330 , (Math.Poly2_i.op_Slash_Dot (a_5328 , b_5329)))) ,
        (Prims.eq2 (Math.Poly2_s.poly , y_5331 , (Math.Poly2_i.op_Percent_Dot (a_5328 , b_5329))))
      )
    )
    ;
  extern
  ;

function
  Math.Poly2.Lemmas_i.lemma_div_mod_exact
  (a_5513 : Math.Poly2_s.poly , b_5514 : Math.Poly2_s.poly)
  :
  (uu____5515 : Prims.unit)
  requires (Prims.b2t ((Prims.op_GreaterThanOrEqual ((Math.Poly2_s.degree (b_5514)) , 0)))) ;
  ensures
    ( Prims.l_and
      (
        ( Prims.eq2
          ( Math.Poly2_s.poly ,
            (Math.Poly2_i.op_Slash_Dot ((Math.Poly2_i.op_Star_Dot (a_5513 , b_5514)) , b_5514)) ,
            a_5513
          )
        )
          ,
        ( Prims.eq2
          ( Math.Poly2_s.poly ,
            (Math.Poly2_i.op_Percent_Dot ((Math.Poly2_i.op_Star_Dot (a_5513 , b_5514)) , b_5514)) ,
            Math.Poly2_s.zero
          )
        )
      )
    )
    ;
  extern
  ;

function
  Math.Poly2.Lemmas_i.lemma_mod_small
  (a_5651 : Math.Poly2_s.poly , b_5652 : Math.Poly2_s.poly)
  :
  (uu____5653 : Prims.unit)
  requires
    ( Prims.l_and
      ( (Prims.b2t ((Prims.op_GreaterThanOrEqual ((Math.Poly2_s.degree (b_5652)) , 0)))) ,
        ( Prims.b2t
          ((Prims.op_LessThan ((Math.Poly2_s.degree (a_5651)) , (Math.Poly2_s.degree (b_5652)))))
        )
      )
    )
    ;
  ensures
    (Prims.eq2 (Math.Poly2_s.poly , (Math.Poly2_i.op_Percent_Dot (a_5651 , b_5652)) , a_5651))
    ;
  extern
  ;

function
  Math.Poly2.Lemmas_i.lemma_mod_mod
  (a_5784 : Math.Poly2_s.poly , b_5785 : Math.Poly2_s.poly)
  :
  (uu____5786 : Prims.unit)
  requires (Prims.b2t ((Prims.op_GreaterThanOrEqual ((Math.Poly2_s.degree (b_5785)) , 0)))) ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2_i.op_Percent_Dot ((Math.Poly2_i.op_Percent_Dot (a_5784 , b_5785)) , b_5785)) ,
        (Math.Poly2_i.op_Percent_Dot (a_5784 , b_5785))
      )
    )
    ;
  extern
  ;

function
  Math.Poly2.Lemmas_i.lemma_mod_cancel
  (a_5869 : Math.Poly2_s.poly)
  :
  (uu____5870 : Prims.unit)
  requires (Prims.b2t ((Prims.op_GreaterThanOrEqual ((Math.Poly2_s.degree (a_5869)) , 0)))) ;
  ensures
    ( Prims.eq2
      (Math.Poly2_s.poly , (Math.Poly2_i.op_Percent_Dot (a_5869 , a_5869)) , Math.Poly2_s.zero)
    )
    ;
  extern
  ;

function
  Math.Poly2.Lemmas_i.lemma_mod_mul_mod
  (a_6056 : Math.Poly2_s.poly , b_6057 : Math.Poly2_s.poly , c_6058 : Math.Poly2_s.poly)
  :
  (uu____6059 : Prims.unit)
  requires (Prims.b2t ((Prims.op_GreaterThanOrEqual ((Math.Poly2_s.degree (b_6057)) , 0)))) ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        ( Math.Poly2_i.op_Percent_Dot
          ( (Math.Poly2_i.op_Star_Dot ((Math.Poly2_i.op_Percent_Dot (a_6056 , b_6057)) , c_6058)) ,
            b_6057
          )
        )
          ,
        (Math.Poly2_i.op_Percent_Dot ((Math.Poly2_i.op_Star_Dot (a_6056 , c_6058)) , b_6057))
      )
    )
    ;
  extern
  ;

unsupported: Math.Poly2.Lemmas_i.lemma_split_define //(reason: MATCH)

unsupported: Math.Poly2.Lemmas_i.lemma_split_define_forward //(reason: not vale expression: (let b#7327 : Math.Poly2_s.poly = (Math.Poly2_s.monomial n#7325) in (Prims.l_and (Prims.l_and (Prims.l_and (Prims.eq2 # Math.Poly2_s.poly a#7324 (Math.Poly2_i.op_Plus_Dot (Math.Poly2_i.op_Star_Dot (Math.Poly2_i.op_Slash_Dot a#7324 b#7327) b#7327) (Math.Poly2_i.op_Percent_Dot a#7324 b#7327))) (Prims.eq2 # Math.Poly2_s.poly (Math.Poly2_s.shift (Math.Poly2_i.op_Slash_Dot a#7324 b#7327) n#7325) (Math.Poly2_i.op_Star_Dot (Math.Poly2_i.op_Slash_Dot a#7324 b#7327) b#7327))) (Prims.l_Forall # Prims.int (fun i#7328 : Prims.int -> (PATTERN (((Math.Poly2_s.op_String_Access (Math.Poly2_i.op_Percent_Dot a#7324 b#7327) i#7328))) (Prims.l_imp (Prims.b2t (Prims.op_LessThan i#7328 n#7325)) (Prims.eq2 # Prims.bool (Math.Poly2_s.op_String_Access (Math.Poly2_i.op_Percent_Dot a#7324 b#7327) i#7328) (Math.Poly2_s.op_String_Access a#7324 i#7328))))))) (Prims.l_Forall # Prims.nat (fun i#7329 : Prims.nat -> (PATTERN (((Math.Poly2_s.op_String_Access (Math.Poly2_i.op_Slash_Dot a#7324 b#7327) i#7329))) (Prims.eq2 # Prims.bool (Math.Poly2_s.op_String_Access (Math.Poly2_i.op_Slash_Dot a#7324 b#7327) i#7329) (Math.Poly2_s.op_String_Access a#7324 (Prims.op_Addition i#7329 n#7325)))))))))

unsupported: Math.Poly2.Lemmas_i.lemma_combine_define //(reason: MATCH)

const GF128_s.gf128_modulus_low_terms : Math.Poly2_s.poly extern ;

const GF128_s.gf128_modulus : Math.Poly2_s.poly extern ;

function
  GF128_s.gf128_add
  (a_198 : Math.Poly2_s.poly , b_199 : Math.Poly2_s.poly)
  :
  Math.Poly2_s.poly
  extern
  ;

function
  GF128_s.gf128_mul
  (a_253 : Math.Poly2_s.poly , b_254 : Math.Poly2_s.poly)
  :
  Math.Poly2_s.poly
  extern
  ;

function GF128_s.gf128_to_quad32 (a_296 : Math.Poly2_s.poly) : Types_s.quad32 extern ;

function GF128_s.gf128_of_quad32 (q_332 : Types_s.quad32) : Math.Poly2_s.poly extern ;

function
  GF128_i.lemma_of_double32_degree
  (d_202 : Types_s.double32)
  :
  (uu____203 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.b2t
      ( (Prims.op_LessThan ((Math.Poly2_s.degree ((Math.Poly2.Bits_s.of_double32 (d_202)))) , 64))
      )
    )
    ;
  extern
  ;

function
  GF128_i.lemma_of_quad32_degree
  (q_319 : Types_s.quad32)
  :
  (uu____320 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.b2t
      ((Prims.op_LessThan ((Math.Poly2_s.degree ((Math.Poly2.Bits_s.of_quad32 (q_319)))) , 128)))
    )
    ;
  extern
  ;

function
  GF128_i.lemma_to_of_quad32
  (q_399 : Types_s.quad32)
  :
  (uu____400 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.eq2
      ( Types_s.quad32 ,
        (Math.Poly2.Bits_s.to_quad32 ((Math.Poly2.Bits_s.of_quad32 (q_399)))) ,
        q_399
      )
    )
    ;
  extern
  ;

function
  GF128_i.lemma_of_to_quad32
  (a_482 : Math.Poly2_s.poly)
  :
  (uu____483 : Prims.unit)
  requires (Prims.b2t ((Prims.op_LessThan ((Math.Poly2_s.degree (a_482)) , 128)))) ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2.Bits_s.of_quad32 ((Math.Poly2.Bits_s.to_quad32 (a_482)))) ,
        a_482
      )
    )
    ;
  extern
  ;

function GF128_i.quad32_shift_left_1 (q_1150 : Types_s.quad32) : Types_s.quad32 extern ;

function
  GF128_i.quad32_shift_2_left_1
  (qa_4265 : Types_s.quad32 , qb_4266 : Types_s.quad32)
  :
  (FStar.Pervasives.Native.tuple2 (Types_s.quad32 , Types_s.quad32))
  extern
  ;

function
  GF128_i.lemma_shift_left_1
  (a_4845 : Math.Poly2_s.poly)
  :
  (uu____4846 : Prims.unit)
  requires (Prims.b2t ((Prims.op_LessThan ((Math.Poly2_s.degree (a_4845)) , 127)))) ;
  ensures
    ( Prims.eq2
      ( Types_s.quad32 ,
        (Math.Poly2.Bits_s.to_quad32 ((Math.Poly2_s.shift (a_4845 , 1)))) ,
        (GF128_i.quad32_shift_left_1 ((Math.Poly2.Bits_s.to_quad32 (a_4845))))
      )
    )
    ;
  extern
  ;

unsupported: GF128_i.lemma_shift_2_left_1 //(reason: MATCH)

function
  GF128_i.lemma_reverse_reverse
  (a_5864 : Math.Poly2_s.poly , n_5865 : Prims.nat)
  :
  (uu____5866 : Prims.unit)
  requires
    (Prims.b2t ((Prims.op_LessThanOrEqual ((Math.Poly2_s.degree (a_5864)) , n_5865))))
    ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        (Math.Poly2_s.reverse ((Math.Poly2_s.reverse (a_5864 , n_5865)) , n_5865)) ,
        a_5864
      )
    )
    ;
  extern
  ;

function
  GF128_i.lemma_gf128_degree
  (uu___78_6026 : Prims.unit)
  :
  (uu____6027 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_and
      (
        ( Prims.l_and
          ( (Prims.eq2 (Prims.int , (Math.Poly2_s.degree (GF128_s.gf128_modulus_low_terms)) , 7)) ,
            (Prims.eq2 (Prims.int , (Math.Poly2_s.degree ((Math.Poly2_s.monomial (128)))) , 128))
          )
        )
          ,
        (Prims.eq2 (Prims.int , (Math.Poly2_s.degree (GF128_s.gf128_modulus)) , 128))
      )
    )
    ;
  extern
  ;

function
  GF128_i.lemma_gf128_constant_rev
  (q_6236 : Types_s.quad32)
  :
  (uu____6237 : Prims.unit)
  requires Prims.l_True ;
  ensures
    ( Prims.l_and
      (
        ( Prims.eq2
          ( Types_s.quad32 ,
            (Math.Poly2.Bits_s.to_quad32 ((Math.Poly2_s.reverse (GF128_s.gf128_modulus_low_terms , 127))))
              ,
            (Words_s.Mkfour (Types_s.nat32 , 0 , 0 , 0 , 3774873600))
          )
        )
          ,
        ( Prims.eq2
          ( Types_s.quad32 ,
            (Types_s.quad32_xor (q_6236 , q_6236)) ,
            (Words_s.Mkfour (Types_s.nat32 , 0 , 0 , 0 , 0))
          )
        )
      )
    )
    ;
  extern
  ;

function
  GF128_i.lemma_quad32_double_hi_rev
  (a_6385 : Math.Poly2_s.poly)
  :
  (uu____6386 : Prims.unit)
  requires
    ( Prims.l_and
      ( (Prims.b2t ((Prims.op_LessThanOrEqual ((Math.Poly2_s.degree (a_6385)) , 127)))) ,
        ( Prims.b2t
          (
            ( Prims.op_LessThanOrEqual
              ((Math.Poly2_s.degree ((Math.Poly2_s.reverse (a_6385 , 127)))) , 63)
            )
          )
        )
      )
    )
    ;
  ensures
    ( Prims.eq2
      ( Math.Poly2_s.poly ,
        ( Math.Poly2.Bits_s.of_double32
          ((Types_i.quad32_double_hi ((Math.Poly2.Bits_s.to_quad32 (a_6385)))))
        )
          ,
        (Math.Poly2_s.reverse ((Math.Poly2_s.reverse (a_6385 , 127)) , 63))
      )
    )
    ;
  extern
  ;

unsupported: GF128_i.lemma_gf128_mul //(reason: not vale expression: (let m#7283 : Math.Poly2_s.poly = (Math.Poly2_s.monomial n#7281) in (let ab#7284 : Math.Poly2_s.poly = (Math.Poly2_i.op_Plus_Dot (Math.Poly2_i.op_Star_Dot a#7277 m#7283) b#7278) in (let cd#7285 : Math.Poly2_s.poly = (Math.Poly2_i.op_Plus_Dot (Math.Poly2_i.op_Star_Dot c#7279 m#7283) d#7280) in (let ac#7286 : Math.Poly2_s.poly = (Math.Poly2_i.op_Star_Dot a#7277 c#7279) in (let ad#7287 : Math.Poly2_s.poly = (Math.Poly2_i.op_Star_Dot a#7277 d#7280) in (let bc#7288 : Math.Poly2_s.poly = (Math.Poly2_i.op_Star_Dot b#7278 c#7279) in (let bd#7289 : Math.Poly2_s.poly = (Math.Poly2_i.op_Star_Dot b#7278 d#7280) in (Prims.eq2 # Math.Poly2_s.poly (Math.Poly2_i.op_Star_Dot ab#7284 cd#7285) (Math.Poly2_i.op_Plus_Dot (Math.Poly2_s.shift (Math.Poly2_i.op_Plus_Dot (Math.Poly2_i.op_Plus_Dot ac#7286 (Math.Poly2_i.op_Slash_Dot bc#7288 m#7283)) (Math.Poly2_i.op_Slash_Dot ad#7287 m#7283)) (Prims.op_Addition n#7281 n#7281)) (Math.Poly2_i.op_Plus_Dot (Math.Poly2_i.op_Plus_Dot (Math.Poly2_i.op_Star_Dot (Math.Poly2_i.op_Percent_Dot bc#7288 m#7283) m#7283) (Math.Poly2_i.op_Star_Dot (Math.Poly2_i.op_Percent_Dot ad#7287 m#7283) m#7283)) bd#7289)))))))))))

unsupported: GF128_i.lemma_gf128_reduce //(reason: not vale expression: (let d#8164 : Math.Poly2_s.poly = (Math.Poly2_i.op_Slash_Dot (Math.Poly2_i.op_Star_Dot a#8158 b#8159) n#8161) in (let dh#8165 : Math.Poly2_s.poly = (Math.Poly2_i.op_Star_Dot d#8164 h#8162) in (Prims.l_and (Prims.b2t (Prims.op_LessThanOrEqual (Math.Poly2_s.degree (Math.Poly2_i.op_Star_Dot (Math.Poly2_i.op_Slash_Dot dh#8165 n#8161) h#8162)) (FStar.Mul.op_Star 2 (Math.Poly2_s.degree h#8162)))) (Prims.eq2 # Math.Poly2_s.poly (Math.Poly2_i.op_Percent_Dot (Math.Poly2_i.op_Star_Dot a#8158 b#8159) g#8160) (Math.Poly2_i.op_Plus_Dot (Math.Poly2_i.op_Plus_Dot (Math.Poly2_i.op_Star_Dot (Math.Poly2_i.op_Slash_Dot dh#8165 n#8161) h#8162) (Math.Poly2_i.op_Percent_Dot dh#8165 n#8161)) (Math.Poly2_i.op_Percent_Dot (Math.Poly2_i.op_Star_Dot a#8158 b#8159) n#8161)))))))

unsupported: GF128_i.lemma_gf128_reduce_rev //(reason: not vale expression: (let m#9608 : Math.Poly2_s.poly = (Math.Poly2_s.monomial n#9606) in (let g#9609 : Math.Poly2_s.poly = (Math.Poly2_i.op_Plus_Dot m#9608 h#9605) in (let r#9610 : (x#9611 : Math.Poly2_s.poly -> (Tot Math.Poly2_s.poly)) = (fun x#9612 : Math.Poly2_s.poly -> (Math.Poly2_s.reverse x#9612 (Prims.op_Subtraction n#9606 1))) in (let rr#9613 : (x#9614 : Math.Poly2_s.poly -> (Tot Math.Poly2_s.poly)) = (fun x#9615 : Math.Poly2_s.poly -> (Math.Poly2_s.reverse x#9615 (Prims.op_Subtraction (FStar.Mul.op_Star 2 n#9606) 1))) in (let rab#9616 : Math.Poly2_s.poly = (rr#9613 (Math.Poly2_i.op_Star_Dot a#9603 b#9604)) in (let rd#9617 : Math.Poly2_s.poly = (Math.Poly2_i.op_Percent_Dot rab#9616 m#9608) in (let rdh#9618 : Math.Poly2_s.poly = (rr#9613 (Math.Poly2_i.op_Star_Dot (r#9610 rd#9617) h#9605)) in (let rdhL#9619 : Math.Poly2_s.poly = (Math.Poly2_i.op_Percent_Dot rdh#9618 m#9608) in (let rdhLh#9620 : Math.Poly2_s.poly = (r#9610 (Math.Poly2_i.op_Star_Dot (r#9610 rdhL#9619) h#9605)) in (Prims.l_and (Prims.l_and (Prims.b2t (Prims.op_LessThanOrEqual (Math.Poly2_s.degree (r#9610 rdhL#9619)) (FStar.Mul.op_Star 2 (Math.Poly2_s.degree h#9605)))) (Prims.b2t (Prims.op_LessThanOrEqual (Math.Poly2_s.degree (r#9610 rdhLh#9620)) (FStar.Mul.op_Star 2 (Math.Poly2_s.degree h#9605))))) (Prims.eq2 # Math.Poly2_s.poly (r#9610 (Math.Poly2_i.op_Percent_Dot (Math.Poly2_i.op_Star_Dot a#9603 b#9604) g#9609)) (Math.Poly2_i.op_Plus_Dot (Math.Poly2_i.op_Plus_Dot rdhLh#9620 (Math.Poly2_i.op_Slash_Dot rdh#9618 m#9608)) (Math.Poly2_i.op_Slash_Dot rab#9616 m#9608))))))))))))))

function
  Math.Poly2.Bits_i.lemma_add128
  (a_171 : Math.Poly2_s.poly , b_172 : Math.Poly2_s.poly)
  :
  (uu____173 : Prims.unit)
  requires
    ( Prims.l_and
      ( (Prims.b2t ((Prims.op_LessThanOrEqual ((Math.Poly2_s.degree (a_171)) , 127)))) ,
        (Prims.b2t ((Prims.op_LessThanOrEqual ((Math.Poly2_s.degree (b_172)) , 127))))
      )
    )
    ;
  ensures
    ( Prims.eq2
      ( Types_s.quad32 ,
        (Math.Poly2.Bits_s.to_quad32 ((Math.Poly2_i.op_Plus_Dot (a_171 , b_172)))) ,
        ( Types_s.quad32_xor
          ((Math.Poly2.Bits_s.to_quad32 (a_171)) , (Math.Poly2.Bits_s.to_quad32 (b_172)))
        )
      )
    )
    ;
  extern
  ;

function
  Math.Poly2.Bits_i.lemma_quad32_double
  (a_545 : Math.Poly2_s.poly)
  :
  (uu____546 : Prims.unit)
  requires (Prims.b2t ((Prims.op_LessThanOrEqual ((Math.Poly2_s.degree (a_545)) , 127)))) ;
  ensures
    ( Prims.l_and
      (
        ( Prims.l_and
          (
            ( Prims.l_and
              (
                ( Prims.eq2
                  ( Math.Poly2_s.poly ,
                    ( Math.Poly2.Bits_s.of_double32
                      ((Types_i.quad32_double_lo ((Math.Poly2.Bits_s.to_quad32 (a_545)))))
                    )
                      ,
                    (Math.Poly2_i.op_Percent_Dot (a_545 , (Math.Poly2_s.monomial (64))))
                  )
                )
                  ,
                ( Prims.eq2
                  ( Math.Poly2_s.poly ,
                    ( Math.Poly2.Bits_s.of_double32
                      ((Types_i.quad32_double_hi ((Math.Poly2.Bits_s.to_quad32 (a_545)))))
                    )
                      ,
                    (Math.Poly2_i.op_Slash_Dot (a_545 , (Math.Poly2_s.monomial (64))))
                  )
                )
              )
            )
              ,
            ( Prims.eq2
              ( Math.Poly2_s.poly ,
                a_545 ,
                ( Math.Poly2_i.op_Plus_Dot
                  (
                    ( Math.Poly2_i.op_Star_Dot
                      ( (Math.Poly2_i.op_Slash_Dot (a_545 , (Math.Poly2_s.monomial (64)))) ,
                        (Math.Poly2_s.monomial (64))
                      )
                    )
                      ,
                    (Math.Poly2_i.op_Percent_Dot (a_545 , (Math.Poly2_s.monomial (64))))
                  )
                )
              )
            )
          )
        )
          ,
        ( Prims.eq2
          ( Math.Poly2_s.poly ,
            ( Math.Poly2_i.op_Star_Dot
              ( (Math.Poly2_i.op_Slash_Dot (a_545 , (Math.Poly2_s.monomial (64)))) ,
                (Math.Poly2_s.monomial (64))
              )
            )
              ,
            ( Math.Poly2_s.shift
              ((Math.Poly2_i.op_Slash_Dot (a_545 , (Math.Poly2_s.monomial (64)))) , 64)
            )
          )
        )
      )
    )
    ;
  extern
  ;

unsupported: Math.Poly2.Bits_i.lemma_quad32_double_shift //(reason: MATCH)

function
  X64.GF128_Mul.va_code_ShiftLeft128_1
  (va_dummy_944 : Prims.unit)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.GF128_Mul.va_qcode_ShiftLeft128_1 //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.GF128_Mul.va_lemma_ShiftLeft128_1 //(reason: MATCH)

function
  X64.GF128_Mul.va_wp_ShiftLeft128_1
  ( a_7228 : Math.Poly2_s.poly ,
    va_s0_7229 : X64.Vale.Decls_i.va_state ,
    va_k_7230 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.GF128_Mul.va_wpMonotone_ShiftLeft128_1 //(reason: not vale expression: (fun va_s#7684 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#7685 : Prims.unit -> (Prims.l_imp (va_k1#7682 va_s#7684 va_g#7685) (va_k2#7683 va_s#7684 va_g#7685))))))

unsupported: X64.GF128_Mul.va_wpCompute_ShiftLeft128_1 //(reason: MATCH)

unsupported: X64.GF128_Mul.va_wpProof_ShiftLeft128_1 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.GF128_Mul.va_quick_ShiftLeft128_1 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.GF128_Mul.va_code_ShiftLeft2_128_1
  (va_dummy_13442 : Prims.unit)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.GF128_Mul.va_qcode_ShiftLeft2_128_1 //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.GF128_Mul.va_lemma_ShiftLeft2_128_1 //(reason: MATCH)

function
  X64.GF128_Mul.va_wp_ShiftLeft2_128_1
  ( lo_31293 : Math.Poly2_s.poly ,
    hi_31294 : Math.Poly2_s.poly ,
    va_s0_31295 : X64.Vale.Decls_i.va_state ,
    va_k_31296 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.GF128_Mul.va_wpMonotone_ShiftLeft2_128_1 //(reason: not vale expression: (fun va_s#31869 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#31870 : Prims.unit -> (Prims.l_imp (va_k1#31867 va_s#31869 va_g#31870) (va_k2#31868 va_s#31869 va_g#31870))))))

unsupported: X64.GF128_Mul.va_wpCompute_ShiftLeft2_128_1 //(reason: MATCH)

unsupported: X64.GF128_Mul.va_wpProof_ShiftLeft2_128_1 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.GF128_Mul.va_quick_ShiftLeft2_128_1 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.GF128_Mul.va_code_ClmulRev64
  (dstHi_47399 : Prims.bool , srcHi_47400 : Prims.bool)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.GF128_Mul.va_qcode_ClmulRev64 //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.GF128_Mul.va_lemma_ClmulRev64 //(reason: MATCH)

function
  X64.GF128_Mul.va_wp_ClmulRev64
  ( a_56257 : Math.Poly2_s.poly ,
    b_56258 : Math.Poly2_s.poly ,
    dstHi_56259 : Prims.bool ,
    srcHi_56260 : Prims.bool ,
    va_s0_56261 : X64.Vale.Decls_i.va_state ,
    va_k_56262 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.GF128_Mul.va_wpMonotone_ClmulRev64 //(reason: not vale expression: (fun va_s#57025 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#57026 : Prims.unit -> (Prims.l_imp (va_k1#57023 va_s#57025 va_g#57026) (va_k2#57024 va_s#57025 va_g#57026))))))

unsupported: X64.GF128_Mul.va_wpCompute_ClmulRev64 //(reason: MATCH)

unsupported: X64.GF128_Mul.va_wpProof_ClmulRev64 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.GF128_Mul.va_quick_ClmulRev64 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.GF128_Mul.va_transparent_code_High64ToLow
  (dst_64674 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

function
  X64.GF128_Mul.va_code_High64ToLow
  (dst_64794 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.GF128_Mul.va_lemma_High64ToLow //(reason: MATCH)

function
  X64.GF128_Mul.va_wp_High64ToLow
  ( dst_71357 : X64.Vale.Decls_i.va_operand_xmm ,
    a_71358 : Math.Poly2_s.poly ,
    va_s0_71359 : X64.Vale.Decls_i.va_state ,
    va_k_71360 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.GF128_Mul.va_wpMonotone_High64ToLow //(reason: not vale expression: (fun va_s#71891 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#71892 : Prims.unit -> (Prims.l_imp (va_k1#71889 va_s#71891 va_g#71892) (va_k2#71890 va_s#71891 va_g#71892))))))

unsupported: X64.GF128_Mul.va_wpCompute_High64ToLow //(reason: MATCH)

unsupported: X64.GF128_Mul.va_wpProof_High64ToLow //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.GF128_Mul.va_quick_High64ToLow //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.GF128_Mul.va_transparent_code_Low64ToHigh
  (dst_77755 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

function
  X64.GF128_Mul.va_code_Low64ToHigh
  (dst_77875 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.GF128_Mul.va_lemma_Low64ToHigh //(reason: MATCH)

function
  X64.GF128_Mul.va_wp_Low64ToHigh
  ( dst_84529 : X64.Vale.Decls_i.va_operand_xmm ,
    a_84530 : Math.Poly2_s.poly ,
    va_s0_84531 : X64.Vale.Decls_i.va_state ,
    va_k_84532 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.GF128_Mul.va_wpMonotone_Low64ToHigh //(reason: not vale expression: (fun va_s#85066 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#85067 : Prims.unit -> (Prims.l_imp (va_k1#85064 va_s#85066 va_g#85067) (va_k2#85065 va_s#85066 va_g#85067))))))

unsupported: X64.GF128_Mul.va_wpCompute_Low64ToHigh //(reason: MATCH)

unsupported: X64.GF128_Mul.va_wpProof_Low64ToHigh //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.GF128_Mul.va_quick_Low64ToHigh //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.GF128_Mul.va_transparent_code_AddPoly
  (dst_90943 : X64.Vale.Decls_i.va_operand_xmm , src_90944 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

function
  X64.GF128_Mul.va_code_AddPoly
  (dst_91033 : X64.Vale.Decls_i.va_operand_xmm , src_91034 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.GF128_Mul.va_lemma_AddPoly //(reason: MATCH)

function
  X64.GF128_Mul.va_wp_AddPoly
  ( dst_96651 : X64.Vale.Decls_i.va_operand_xmm ,
    src_96652 : X64.Vale.Decls_i.va_operand_xmm ,
    a_96653 : Math.Poly2_s.poly ,
    b_96654 : Math.Poly2_s.poly ,
    va_s0_96655 : X64.Vale.Decls_i.va_state ,
    va_k_96656 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.GF128_Mul.va_wpMonotone_AddPoly //(reason: not vale expression: (fun va_s#97354 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#97355 : Prims.unit -> (Prims.l_imp (va_k1#97352 va_s#97354 va_g#97355) (va_k2#97353 va_s#97354 va_g#97355))))))

unsupported: X64.GF128_Mul.va_wpCompute_AddPoly //(reason: MATCH)

unsupported: X64.GF128_Mul.va_wpProof_AddPoly //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.GF128_Mul.va_quick_AddPoly //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.GF128_Mul.va_code_Clmul128
  (va_dummy_104158 : Prims.unit)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.GF128_Mul.va_qcode_Clmul128 //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.GF128_Mul.va_lemma_Clmul128 //(reason: MATCH)

function
  X64.GF128_Mul.va_wp_Clmul128
  ( ab_179854 : Math.Poly2_s.poly ,
    cd_179855 : Math.Poly2_s.poly ,
    va_s0_179856 : X64.Vale.Decls_i.va_state ,
    va_k_179857
      :
      ( fun
        ( X64.Vale.Decls_i.va_state ,
          (FStar.Pervasives.Native.tuple2 (Math.Poly2_s.poly , Math.Poly2_s.poly))
        )
        ->
        prop
      )
  )
  :
  prop
  extern
  ;

unsupported: X64.GF128_Mul.va_wpMonotone_Clmul128 //(reason: not vale expression: (fun va_s#180515 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # (FStar.Pervasives.Native.tuple2 Math.Poly2_s.poly Math.Poly2_s.poly) (fun va_g#180516 : (FStar.Pervasives.Native.tuple2 Math.Poly2_s.poly Math.Poly2_s.poly) -> (Prims.l_imp (va_k1#180513 va_s#180515 va_g#180516) (va_k2#180514 va_s#180515 va_g#180516))))))

unsupported: X64.GF128_Mul.va_wpCompute_Clmul128 //(reason: MATCH)

unsupported: X64.GF128_Mul.va_wpProof_Clmul128 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.GF128_Mul.va_quick_Clmul128 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.GF128_Mul.va_code_ClmulRev128
  (va_dummy_197796 : Prims.unit)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.GF128_Mul.va_qcode_ClmulRev128 //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.GF128_Mul.va_lemma_ClmulRev128 //(reason: MATCH)

function
  X64.GF128_Mul.va_wp_ClmulRev128
  ( ab_218250 : Math.Poly2_s.poly ,
    cd_218251 : Math.Poly2_s.poly ,
    va_s0_218252 : X64.Vale.Decls_i.va_state ,
    va_k_218253
      :
      ( fun
        ( X64.Vale.Decls_i.va_state ,
          (FStar.Pervasives.Native.tuple2 (Math.Poly2_s.poly , Math.Poly2_s.poly))
        )
        ->
        prop
      )
  )
  :
  prop
  extern
  ;

unsupported: X64.GF128_Mul.va_wpMonotone_ClmulRev128 //(reason: not vale expression: (fun va_s#218917 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # (FStar.Pervasives.Native.tuple2 Math.Poly2_s.poly Math.Poly2_s.poly) (fun va_g#218918 : (FStar.Pervasives.Native.tuple2 Math.Poly2_s.poly Math.Poly2_s.poly) -> (Prims.l_imp (va_k1#218915 va_s#218917 va_g#218918) (va_k2#218916 va_s#218917 va_g#218918))))))

unsupported: X64.GF128_Mul.va_wpCompute_ClmulRev128 //(reason: MATCH)

unsupported: X64.GF128_Mul.va_wpProof_ClmulRev128 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.GF128_Mul.va_quick_ClmulRev128 //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.GF128_Mul.va_transparent_code_Gf128ModulusRev
  (dst_236210 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

function
  X64.GF128_Mul.va_code_Gf128ModulusRev
  (dst_236322 : X64.Vale.Decls_i.va_operand_xmm)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.GF128_Mul.va_lemma_Gf128ModulusRev //(reason: MATCH)

function
  X64.GF128_Mul.va_wp_Gf128ModulusRev
  ( dst_241873 : X64.Vale.Decls_i.va_operand_xmm ,
    va_s0_241874 : X64.Vale.Decls_i.va_state ,
    va_k_241875 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.GF128_Mul.va_wpMonotone_Gf128ModulusRev //(reason: not vale expression: (fun va_s#242323 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#242324 : Prims.unit -> (Prims.l_imp (va_k1#242321 va_s#242323 va_g#242324) (va_k2#242322 va_s#242323 va_g#242324))))))

unsupported: X64.GF128_Mul.va_wpCompute_Gf128ModulusRev //(reason: MATCH)

unsupported: X64.GF128_Mul.va_wpProof_Gf128ModulusRev //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.GF128_Mul.va_quick_Gf128ModulusRev //(reason: X64.Vale.QuickCode_i.va_quickCode)

function
  X64.GF128_Mul.va_code_ReduceMulRev128
  (va_dummy_247583 : Prims.unit)
  :
  X64.Vale.Decls_i.va_code
  extern
  ;

unsupported: X64.GF128_Mul.va_qcode_ReduceMulRev128 //(reason: X64.Vale.QuickCode_i.quickCode)

unsupported: X64.GF128_Mul.va_lemma_ReduceMulRev128 //(reason: MATCH)

function
  X64.GF128_Mul.va_wp_ReduceMulRev128
  ( a_295095 : Math.Poly2_s.poly ,
    b_295096 : Math.Poly2_s.poly ,
    va_s0_295097 : X64.Vale.Decls_i.va_state ,
    va_k_295098 : (fun (X64.Vale.Decls_i.va_state , Prims.unit) -> prop)
  )
  :
  prop
  extern
  ;

unsupported: X64.GF128_Mul.va_wpMonotone_ReduceMulRev128 //(reason: not vale expression: (fun va_s#295665 : X64.Vale.Decls_i.va_state -> (Prims.l_Forall # Prims.unit (fun va_g#295666 : Prims.unit -> (Prims.l_imp (va_k1#295663 va_s#295665 va_g#295666) (va_k2#295664 va_s#295665 va_g#295666))))))

unsupported: X64.GF128_Mul.va_wpCompute_ReduceMulRev128 //(reason: MATCH)

unsupported: X64.GF128_Mul.va_wpProof_ReduceMulRev128 //(reason: X64.Vale.QuickCode_i.t_ensure)

unsupported: X64.GF128_Mul.va_quick_ReduceMulRev128 //(reason: X64.Vale.QuickCode_i.va_quickCode)

// from verbatim
unsupported: lemma_fundamental_div_mod
unsupported: X64.Vale.Decls_i.lemma_mul_nat
unsupported: X64.Vale.Decls_i.lemma_mul_in_bounds

//from ASE_s.fst
unsupported: mix_columns
unsupported: inv_mix_columns
unsupported: sub_bytes
unsupported: inv_sub_bytes
unsupported: shift_rows
unsupported: inv_shift_rows
unsupported: rot_word
unsupported: sub_word

// from AES_helpers_i.fst
unsupported: expand_key_128
unsupported: lemma_simd_round_key
unsupported: lemma_expand_key_128

// from X64.FastMul.vaf
unsupported: pow2_192

// from GCTR_i.fst
unsupported: gctr_encrypt_one_block
unsupported: gctr_partial
unsupported: gctr_partial_completed

// from crypto\aes\GCTR_s.fst
unsupported: inc32
unsupported: gctr_encrypt

// X64.Poly1305.Util_i.fsti
unsupported: reveal_poly1305_heap_blocks

// X64.Poly1305.Math_i.fsti
unsupported: lemma_poly_demod
unsupported: shift_left64
unsupported: lemma_mod_power2_lo
unsupported: lemma_power2_add64
unsupported: lowerUpper128
unsupported: lemma_mod_hi
unsupported: lowerUpper192
unsupported: lemma_reduce128
unsupported: lemma_add_key
unsupported: readable_words
unsupported: seqTo128
unsupported: lemma_lowerUpper128_and
unsupported: modp_0
unsupported: lemma_poly1305_heap_hash_blocks_alt
unsupported: bare_r
unsupported: lemma_add_mod128
unsupported: mod2_128'

//Poly1305.Spec_s.fst
unsupported: poly1305_hash

// need to transform to va_opr_code_Mem first
unsupported: Mem

// X64.Poly1305.vaf
unsupported: reveal_logand128

// can't find
unsupported: ghash_incremental
unsupported: ghash_incremental_to_ghash
unsupported: gcm_encrypt
unsupported: lemma_hash_append3
unsupported: lemma_poly_multiply
unsupported: lemma_poly_bits64
unsupported: lemma_poly_reduce
unsupported: modp
unsupported: modp'
unsupported: lemma_mul_strict_upper_bound
unsupported: lowerUpper128_opaque
unsupported: lowerUpper192_opaque
unsupported: lemma_bytes_shift_power2
unsupported: lemma_bytes_and_mod

//forall.vaf
unsupported: opaque_double

//fstar1ifc.vaf
unsupported: double

//quick.vaf
unsupported: self_int
unsupported: lemma_self_int